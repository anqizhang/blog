[
  {
    "id": 30598380,
    "slug": "vvgmty",
    "title": "分析并实现一个简单 Electron 的 remote obj",
    "book_id": 213435,
    "book": {
      "id": 213435,
      "type": "Book",
      "slug": "blog",
      "name": "Blog",
      "user_id": 120091,
      "description": "开放数据",
      "creator_id": 120091,
      "public": 1,
      "items_count": 8,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-08-06T05:06:41.373Z",
      "updated_at": "2021-08-06T05:06:41.000Z",
      "created_at": "2019-01-31T02:12:32.000Z",
      "namespace": "yantze/blog",
      "user": {
        "id": 120091,
        "type": "User",
        "login": "yantze",
        "name": "yantze",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
        "books_count": 6,
        "public_books_count": 2,
        "followers_count": 0,
        "following_count": 2,
        "created_at": "2018-05-06T11:41:31.000Z",
        "updated_at": "2021-07-19T16:15:37.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 120091,
    "creator": {
      "id": 120091,
      "type": "User",
      "login": "yantze",
      "name": "yantze",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
      "books_count": 6,
      "public_books_count": 2,
      "followers_count": 0,
      "following_count": 2,
      "created_at": "2018-05-06T11:41:31.000Z",
      "updated_at": "2021-07-19T16:15:37.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "刚开始接触 Electron 的时候，很好奇有一个 remote 模块，能很方便地实现跨进程的操作，比如数据共享和方法调用。最近抽空研究了一下，所以成文。<br />实现的一个示例 demo: [https://github.com/yantze/demo-electron-remote](https://github.com/yantze/demo-electron-remote) 。<br />\n<br />默认的 ipc 协议是可以传送可以结构化的数据。remote 需要完成的事情是，对不能结构化的数据，用元信息(meta) 记录，然后 remote 需要被调用的时候，发起 ipc 请求到主进程或者 server 进程，远程调用方法。这里是实现一个简单的 remote 调用机制的流程，方便了解 remote 的整个调用流程。<br />\n<br />![image.png](https://cdn.nlark.com/yuque/0/2021/png/120091/1611385116701-f1ab46f1-7d44-4e70-a1d7-a2ecca8123a5.png#align=left&display=inline&height=216&margin=%5Bobject%20Object%5D&name=image.png&originHeight=432&originWidth=1018&size=37371&status=done&style=none&width=509)<br />\n\n<a name=\"1257f8d9\"></a>\n## 分析流程\n\n<br />下面分析从一个简单的结构开始，逐渐到复杂结构体，来实现跨进程的传送。<br />\n\n<a name=\"3c40155f\"></a>\n### 可结构化的对象\n\n\n```javascript\n// server.js\nconst cp = require('child_process')\nconst clientProcess = cp.fork('./client.js')\nconst remoteObj = {\n    normal: 'dddd',\n    num: 2,\n}\nclientProcess.on('message', (commandId) => {\n    if (commandId === 'GET_OBJ') {\n        clientProcess.send(remoteObj)\n    }\n})\n\n// client.js\nprocess.send('GET_OBJ')\nprocess.on('message', obj => {\n    console.log('Receive obj:', obj)\n})\n```\n\n<br />这里实现一个相当简单的进程间传送数据的例子，当 server 进程 fork 一个 child 进程后，child 发送一个请求，然后 server 接受数据后，发送给 child 一个自身的对象，然后 child 就接受到了这个数据对象。<br />\n<br />但一旦这个 remoteObj 对象中包含了一个方法，或者 Promise 这些不可结构化的数据，那么对应的数据就会丢失。<br />\n\n<a name=\"65a58f13\"></a>\n### 对象中包含方法时处理\n\n<br />其实实现的方式也还好，就是判断这里面是否有 function, 如果有，就使用元信息包裹一下这个 function，记录方法名。因为当 client 进程调用对应的方法的时候，需要向 server 进程发起请求，server 接到请求后，需要找到对应的 remoteObj, 并且定位到方法名，就可以 `remoteObj[functionName]()` 实现远程方法调用了。<br />\n<br />既然需要记录方法名等额外数据，就需要 meta 去包裹方法，这里 server 需要需要一个新的方法 valueToMeta，而 client 需要一个解释 meta 的方法， metaToValue。<br />\n\n```javascript\n// server.js\nconst valueToMeta = function (value) {\n    // Determine the type of value.\n    let type = typeof value\n    if (type === 'object' || type === 'function') {\n        return {\n            type,\n            name: value.constructor ? value.constructor.name : '',\n            id: objectsRegistry.add(value),\n            members: parseMembers(value),\n        }\n    }\n}\n\n// client.js\nasync function metaToValue(meta) {\n    if (meta.type === 'function') {\n      const remoteFunction = async function (...args) {\n        const commandId = 'ELECTRON_BROWSER_FUNCTION_CALL'\n        const obj = await getRemoteValue(commandId, { id: meta.id })\n        return await metaToValue(obj)\n      }\n      ret = remoteFunction\n    } else {\n      ret = {}\n    }\n}\n```\n\n<br />这里可以看到，判断为 function 后，valueToMeta 会把将 function 解析后变成4个数据字段返回，id 和 members 可以可以暂时不管，因为暂时不考虑 class 类。然后 client 进程就能通过 metaToValue 解析并且还原 remoteObj 的结构。<br />\n\n<a name=\"5ca2543d\"></a>\n### 对象中包含子对象，并且还包含方法\n\n<br />这个时候，就要开始复杂的嵌套分析和解析了。其实也是在上一小节里面，再加上一个嵌套，就是如果分析到一个新的对象，那就把这个子对象存起来，当子对象的方法需要被调用的时候，就需要通过 id 找到子对象，并且通过方法名调用子对象的方法。<br />\n<br />这时需要用到上面代码中出现的 parseMembers 方法了，这个方法能解析 object 中的所有自有对象，并且把子对象再次放进 valueToMeta 中，做递归循环。<br />\n\n```javascript\nfunction parseMembers(value) {\n    const members = Object.getOwnPropertyNames(value)\n    return members.map(name => {\n        if (IGNORE_FUNCTION_MEMBERS.includes(name)) return false\n\n        const meta = valueToMeta(value[name])\n        if (meta.type === 'function') {\n            return {\n                ...meta,\n                name,\n                type: 'method',\n            }\n        }\n        return {\n            ...meta,\n            name,\n        }\n    }).filter(Boolean)\n}\n```\n\n<br />不过这里会忽略一些属性，在 `IGNORE_FUNCTION_MEMBERS` 中有声明，比如 arguments 这个 function 的自有属性。之所以把 type 改为了 method ，是因为这个一个对象的方法，需要使用 id 去寻找方法的上层对象。<br />\n\n<a name=\"daaa5388\"></a>\n### 小节\n\n<br />其实通过上面的介绍，已经基本清楚整个 remote 的调用流程了，如果不明白可以直接访问我新建的一个 demo 仓库，里面可以完整地运行一个简单的 remote 调用。<br />\n\n<a name=\"d098aafd\"></a>\n### 如何使用仓库的内容\n\n\n1. 在启动 server.js 后，可以在 Chrome 浏览器的地址栏打开 `chrome://inspect`\n1. 在里面的 Remote Target 中选择 `./client.js`\n1. 跳转到 Console 面板中，执行 `const obj = await require('./client.js').getRemoteObj()`\n1. 返回了 server 进程的 remoteObj\n\n\n<br />试试，应该还挺好玩的 :P。<br />\n\n<a name=\"5a0afc9d\"></a>\n## 其它\n\n\n1. Electron API 说明中有说实现机制类似 Java 的 [RMI](https://en.wikipedia.org/wiki/Java_remote_method_invocation)，然后试了一下，的确有些相似。\n1. 在 server.js 代码中有一个 ipc 参数:\n```javascript\nclientProcess = cp.spawn('node', ['--inspect=9230', './client.js'], {\n    stdio: ['inherit', 'inherit', 'inherit', 'ipc'],\n})\n```\n\n2. 这里的 ipc 参数，能让 nodejs 在 spawn 子进程的时候，加上一个 ipc socket 隧道，默认是没有加的，那样将不能使用 process.send 方法。之所以 child_process.fork 方法可以使用 ipc，是因为 fork 其实是 spawn 的一个封装方法，里面有加上 ipc 这个参数。\n2. 比如 Date 或者 Promise 等非结构化数据，暂时没有实现，这个库只是作一个简单的示例说明。\n2. electron 也有类似的代码，里面有完整地实现，可以参看 `./electron/lib/browser/remote/server.ts` 和 `./electron/lib/renderer/api/remote.js`\n\n\n\n<a name=\"d17a0f0b\"></a>\n## 参考\n\n\n- Java 的 [RMI](https://en.wikipedia.org/wiki/Java_remote_method_invocation)\n- [https://github.com/electron/electron](https://github.com/electron/electron)\n- [https://nodejs.org/docs/latest/api/child_process.html](https://nodejs.org/docs/latest/api/child_process.html)\n",
    "body_draft": "刚开始接触 Electron 的时候，很好奇有一个 remote 模块，能很方便地实现跨进程的操作，比如数据共享和方法调用。最近抽空研究了一下，所以成文。<br />实现的一个示例 demo: [https://github.com/yantze/demo-electron-remote](https://github.com/yantze/demo-electron-remote) 。<br />\n<br />默认的 ipc 协议是可以传送可以结构化的数据。remote 需要完成的事情是，对不能结构化的数据，用元信息(meta) 记录，然后 remote 需要被调用的时候，发起 ipc 请求到主进程或者 server 进程，远程调用方法。这里是实现一个简单的 remote 调用机制的流程，方便了解 remote 的整个调用流程。<br />\n<br />![image.png](https://cdn.nlark.com/yuque/0/2021/png/120091/1611385116701-f1ab46f1-7d44-4e70-a1d7-a2ecca8123a5.png#align=left&display=inline&height=216&margin=%5Bobject%20Object%5D&name=image.png&originHeight=432&originWidth=1018&size=37371&status=done&style=none&width=509)<br />\n\n<a name=\"1257f8d9\"></a>\n## 分析流程\n\n<br />下面分析从一个简单的结构开始，逐渐到复杂结构体，来实现跨进程的传送。<br />\n\n<a name=\"3c40155f\"></a>\n### 可结构化的对象\n\n\n```javascript\n// server.js\nconst cp = require('child_process')\nconst clientProcess = cp.fork('./client.js')\nconst remoteObj = {\n    normal: 'dddd',\n    num: 2,\n}\nclientProcess.on('message', (commandId) => {\n    if (commandId === 'GET_OBJ') {\n        clientProcess.send(remoteObj)\n    }\n})\n\n// client.js\nprocess.send('GET_OBJ')\nprocess.on('message', obj => {\n    console.log('Receive obj:', obj)\n})\n```\n\n<br />这里实现一个相当简单的进程间传送数据的例子，当 server 进程 fork 一个 child 进程后，child 发送一个请求，然后 server 接受数据后，发送给 child 一个自身的对象，然后 child 就接受到了这个数据对象。<br />\n<br />但一旦这个 remoteObj 对象中包含了一个方法，或者 Promise 这些不可结构化的数据，那么对应的数据就会丢失。<br />\n\n<a name=\"65a58f13\"></a>\n### 对象中包含方法时处理\n\n<br />其实实现的方式也还好，就是判断这里面是否有 function, 如果有，就使用元信息包裹一下这个 function，记录方法名。因为当 client 进程调用对应的方法的时候，需要向 server 进程发起请求，server 接到请求后，需要找到对应的 remoteObj, 并且定位到方法名，就可以 `remoteObj[functionName]()` 实现远程方法调用了。<br />\n<br />既然需要记录方法名等额外数据，就需要 meta 去包裹方法，这里 server 需要需要一个新的方法 valueToMeta，而 client 需要一个解释 meta 的方法， metaToValue。<br />\n\n```javascript\n// server.js\nconst valueToMeta = function (value) {\n    // Determine the type of value.\n    let type = typeof value\n    if (type === 'object' || type === 'function') {\n        return {\n            type,\n            name: value.constructor ? value.constructor.name : '',\n            id: objectsRegistry.add(value),\n            members: parseMembers(value),\n        }\n    }\n}\n\n// client.js\nasync function metaToValue(meta) {\n    if (meta.type === 'function') {\n      const remoteFunction = async function (...args) {\n        const commandId = 'ELECTRON_BROWSER_FUNCTION_CALL'\n        const obj = await getRemoteValue(commandId, { id: meta.id })\n        return await metaToValue(obj)\n      }\n      ret = remoteFunction\n    } else {\n      ret = {}\n    }\n}\n```\n\n<br />这里可以看到，判断为 function 后，valueToMeta 会把将 function 解析后变成4个数据字段返回，id 和 members 可以可以暂时不管，因为暂时不考虑 class 类。然后 client 进程就能通过 metaToValue 解析并且还原 remoteObj 的结构。<br />\n\n<a name=\"5ca2543d\"></a>\n### 对象中包含子对象，并且还包含方法\n\n<br />这个时候，就要开始复杂的嵌套分析和解析了。其实也是在上一小节里面，再加上一个嵌套，就是如果分析到一个新的对象，那就把这个子对象存起来，当子对象的方法需要被调用的时候，就需要通过 id 找到子对象，并且通过方法名调用子对象的方法。<br />\n<br />这时需要用到上面代码中出现的 parseMembers 方法了，这个方法能解析 object 中的所有自有对象，并且把子对象再次放进 valueToMeta 中，做递归循环。<br />\n\n```javascript\nfunction parseMembers(value) {\n    const members = Object.getOwnPropertyNames(value)\n    return members.map(name => {\n        if (IGNORE_FUNCTION_MEMBERS.includes(name)) return false\n\n        const meta = valueToMeta(value[name])\n        if (meta.type === 'function') {\n            return {\n                ...meta,\n                name,\n                type: 'method',\n            }\n        }\n        return {\n            ...meta,\n            name,\n        }\n    }).filter(Boolean)\n}\n```\n\n<br />不过这里会忽略一些属性，在 `IGNORE_FUNCTION_MEMBERS` 中有声明，比如 arguments 这个 function 的自有属性。之所以把 type 改为了 method ，是因为这个一个对象的方法，需要使用 id 去寻找方法的上层对象。<br />\n\n<a name=\"daaa5388\"></a>\n### 小节\n\n<br />其实通过上面的介绍，已经基本清楚整个 remote 的调用流程了，如果不明白可以直接访问我新建的一个 demo 仓库，里面可以完整地运行一个简单的 remote 调用。<br />\n\n<a name=\"d098aafd\"></a>\n### 如何使用仓库的内容\n\n\n1. 在启动 server.js 后，可以在 Chrome 浏览器的地址栏打开 `chrome://inspect`\n1. 在里面的 Remote Target 中选择 `./client.js`\n1. 跳转到 Console 面板中，执行 `const obj = await require('./client.js').getRemoteObj()`\n1. 返回了 server 进程的 remoteObj\n\n\n<br />试试，应该还挺好玩的 :P。<br />\n\n<a name=\"5a0afc9d\"></a>\n## 其它\n\n\n1. Electron API 说明中有说实现机制类似 Java 的 [RMI](https://en.wikipedia.org/wiki/Java_remote_method_invocation)，然后试了一下，的确有些相似。\n1. 在 server.js 代码中有一个 ipc 参数:\n```javascript\nclientProcess = cp.spawn('node', ['--inspect=9230', './client.js'], {\n    stdio: ['inherit', 'inherit', 'inherit', 'ipc'],\n})\n```\n\n2. 这里的 ipc 参数，能让 nodejs 在 spawn 子进程的时候，加上一个 ipc socket 隧道，默认是没有加的，那样将不能使用 process.send 方法。之所以 child_process.fork 方法可以使用 ipc，是因为 fork 其实是 spawn 的一个封装方法，里面有加上 ipc 这个参数。\n2. 比如 Date 或者 Promise 等非结构化数据，暂时没有实现，这个库只是作一个简单的示例说明。\n2. electron 也有类似的代码，里面有完整地实现，可以参看 `./electron/lib/browser/remote/server.ts` 和 `./electron/lib/renderer/api/remote.js`\n\n\n\n<a name=\"d17a0f0b\"></a>\n## 参考\n\n\n- Java 的 [RMI](https://en.wikipedia.org/wiki/Java_remote_method_invocation)\n- [https://github.com/electron/electron](https://github.com/electron/electron)\n- [https://nodejs.org/docs/latest/api/child_process.html](https://nodejs.org/docs/latest/api/child_process.html)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B0%2C0%2C67%5D%2C%5B0%2C0%2C67%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">刚开始接触 Electron 的时候，很好奇有一个 remote 模块，能很方便地实现跨进程的操作，比如数据共享和方法调用。最近抽空研究了一下，所以成文。</p><p data-lake-id=\"badf486aff8d3c9c662baa52a142bc84\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">实现的一个示例 demo: <a href=\"https://github.com/yantze/demo-electron-remote\" target=\"_blank\">https://github.com/yantze/demo-electron-remote</a> 。</p><p data-lake-id=\"0d54de08e4736a72c362a0fc6cad7856\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6d520685734ad858cffa6c04b03832f6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">默认的 ipc 协议是可以传送可以结构化的数据。remote 需要完成的事情是，对不能结构化的数据，用元信息(meta) 记录，然后 remote 需要被调用的时候，发起 ipc 请求到主进程或者 server 进程，远程调用方法。这里是实现一个简单的 remote 调用机制的流程，方便了解 remote 的整个调用流程。</p><p data-lake-id=\"8fa77f1b3ef9515508473044a7bcca9b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"5367bbba6c8de484cecbe75c51fd305a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2021/png/120091/1611385116701-f1ab46f1-7d44-4e70-a1d7-a2ecca8123a5.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"216px\" style=\"visibility: visible; width: 509px;\"></span></p><p data-lake-id=\"173abd498eba2def73d897c8e61b5117\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"1257f8d9\" data-lake-id=\"27505b0a804090622b5e7aa393282c08\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">分析流程</h2><p data-lake-id=\"be11f7e4a9f10919ab396455394cf99f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"37f32ae5261b4aee82fe1bc46dfbdc4d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">下面分析从一个简单的结构开始，逐渐到复杂结构体，来实现跨进程的传送。</p><p data-lake-id=\"a09b4b81de33fb9fd131306308166a6f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"3c40155f\" data-lake-id=\"4e16b315b01076dc5c2765743448f543\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">可结构化的对象</h3><p data-lake-id=\"2b1d4070d9d19ed62ebbb58bf8846d78\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"4075f026\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// server.js</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cp</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">require</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'child_process'</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">clientProcess</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cp</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fork</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'./client.js'</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">remoteObj</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">normal</span>: <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'dddd'</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">num</span>: <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">clientProcess</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">on</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'message'</span>, (<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandId</span>) <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=&gt;</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandId</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">===</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'GET_OBJ'</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">clientProcess</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">send</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">remoteObj</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">})\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// client.js</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">process</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">send</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'GET_OBJ'</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">process</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">on</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'message'</span>, <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">obj</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=&gt;</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">console</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'Receive obj:'</span>, <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">obj</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">})</span></span></pre></div></div></div><p data-lake-id=\"c20d62824358e616a8995baa9cd46204\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c30fbb60b8b481a226f93a8c67de224e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这里实现一个相当简单的进程间传送数据的例子，当 server 进程 fork 一个 child 进程后，child 发送一个请求，然后 server 接受数据后，发送给 child 一个自身的对象，然后 child 就接受到了这个数据对象。</p><p data-lake-id=\"d68ca2f767649ce2543b90ed04d16743\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f23e1e66a44440eeb964d1e8cdad8b54\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">但一旦这个 remoteObj 对象中包含了一个方法，或者 Promise 这些不可结构化的数据，那么对应的数据就会丢失。</p><p data-lake-id=\"bb1abbaf4c0b9a24c09ca95205dbdbf4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"65a58f13\" data-lake-id=\"851f49036c672a90d149e11ab196db8e\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">对象中包含方法时处理</h3><p data-lake-id=\"dc31661953471b858c5a9cabbb38c6f4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"800ed36a4c8ccbafe337c1700157bb7b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">其实实现的方式也还好，就是判断这里面是否有 function, 如果有，就使用元信息包裹一下这个 function，记录方法名。因为当 client 进程调用对应的方法的时候，需要向 server 进程发起请求，server 接到请求后，需要找到对应的 remoteObj, 并且定位到方法名，就可以 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">remoteObj[functionName]()</code> 实现远程方法调用了。</p><p data-lake-id=\"60aab1e97c6e02fa111dab2ad0274f49\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"aad4f67ff2ee2a7b3ae6d8be0849da1e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">既然需要记录方法名等额外数据，就需要 meta 去包裹方法，这里 server 需要需要一个新的方法 valueToMeta，而 client 需要一个解释 meta 的方法， metaToValue。</p><p data-lake-id=\"a76f78d2d4d395db9e029ff09d52a6f6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"14bd1501\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// server.js</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">valueToMeta</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">function</span> (<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">value</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// Determine the type of value.</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">let</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">typeof</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">value</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">===</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'object'</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">|</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">|</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">===</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'function'</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">name</span>: <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">value</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">constructor</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">?</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">value</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">constructor</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">name</span> : <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">''</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">id</span>: <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">objectsRegistry</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">add</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">value</span>),\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">members</span>: <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">parseMembers</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">value</span>),\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// client.js</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">async</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">function</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">metaToValue</span>(<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">meta</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">meta</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">===</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'function'</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">remoteFunction</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">async</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">function</span> (<span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">...</span><span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">args</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandId</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'ELECTRON_BROWSER_FUNCTION_CALL'</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">obj</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">await</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getRemoteValue</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandId</span>, { <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">id</span>: <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">meta</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">id</span> })\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">await</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">metaToValue</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">obj</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ret</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">remoteFunction</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    } <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">else</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ret</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> {}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"d701b8c0733dd155843ff02ae289844c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"86e2ce584b5b624e260fbde356b172a4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这里可以看到，判断为 function 后，valueToMeta 会把将 function 解析后变成4个数据字段返回，id 和 members 可以可以暂时不管，因为暂时不考虑 class 类。然后 client 进程就能通过 metaToValue 解析并且还原 remoteObj 的结构。</p><p data-lake-id=\"8b88e26431da9b42d3e3e21080905fb4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"5ca2543d\" data-lake-id=\"3105adf9d774bb029fed876be6d6cd12\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">对象中包含子对象，并且还包含方法</h3><p data-lake-id=\"2bf2f15f6a8b035fd1826b2442d03655\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"faab2c32e8bca02a9498bf1e93a4b27d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这个时候，就要开始复杂的嵌套分析和解析了。其实也是在上一小节里面，再加上一个嵌套，就是如果分析到一个新的对象，那就把这个子对象存起来，当子对象的方法需要被调用的时候，就需要通过 id 找到子对象，并且通过方法名调用子对象的方法。</p><p data-lake-id=\"517f40e64f81c791317517066df6ee7c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"95545f64da8b5f8b2a4e9019bfff078a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这时需要用到上面代码中出现的 parseMembers 方法了，这个方法能解析 object 中的所有自有对象，并且把子对象再次放进 valueToMeta 中，做递归循环。</p><p data-lake-id=\"1359c69733188c0d7d8ec56668fd1cc0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"3c8f4f54\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">function</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">parseMembers</span>(<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">value</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">members</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Object</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getOwnPropertyNames</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">value</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">members</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">map</span>(<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">name</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=&gt;</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">IGNORE_FUNCTION_MEMBERS</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">includes</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">name</span>)) <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">false</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">meta</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">valueToMeta</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">value</span>[<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">name</span>])\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">meta</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">===</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'function'</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                <span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">...</span><span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">meta</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">name</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">type</span>: <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'method'</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">...</span><span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">meta</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">name</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }).<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">filter</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Boolean</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"2b261340bce0d19997cff0fab0e8f503\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"57f5d44e1f63e405dc0e6b56922fc028\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">不过这里会忽略一些属性，在 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">IGNORE_FUNCTION_MEMBERS</code> 中有声明，比如 arguments 这个 function 的自有属性。之所以把 type 改为了 method ，是因为这个一个对象的方法，需要使用 id 去寻找方法的上层对象。</p><p data-lake-id=\"052e281b843d870b787f65c404840b00\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"daaa5388\" data-lake-id=\"ba2dff885431059c665312f7acaaf226\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">小节</h3><p data-lake-id=\"410f151d80a2c4bda89d8459406edd07\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9ea9f7a4fad903d9e71ea5626ae6bc35\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">其实通过上面的介绍，已经基本清楚整个 remote 的调用流程了，如果不明白可以直接访问我新建的一个 demo 仓库，里面可以完整地运行一个简单的 remote 调用。</p><p data-lake-id=\"1997136ec4fe75ca2aae0366b8bc6749\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"d098aafd\" data-lake-id=\"81362f2da25b286bb1c2d33eab06e094\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">如何使用仓库的内容</h3><p data-lake-id=\"1e39ee4c6c98cf3ef49f508a7fb80a54\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol start=\"1\" data-lake-id=\"b9f57b0a32eacdb7159bb39bfec996b6\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"71051b7d8a0cf543931e8924471d281c\">在启动 server.js 后，可以在 Chrome 浏览器的地址栏打开 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">chrome://inspect</code></li><li data-lake-id=\"378a556801adc5f3cfe4188f401cd20a\">在里面的 Remote Target 中选择 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">./client.js</code></li><li data-lake-id=\"f8f857526bf9b6948e75f3131d33292f\">跳转到 Console 面板中，执行 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">const obj = await require('./client.js').getRemoteObj()</code></li><li data-lake-id=\"805df29f53de4863ac91df9ec1e6ee34\">返回了 server 进程的 remoteObj</li></ol><p data-lake-id=\"0c47b9de2163523fc9de117067b0bd8c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"10c0ba9aba7f6c0b496c17db502d8e15\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">试试，应该还挺好玩的 :P。</p><p data-lake-id=\"212d1771a1c7a1ae359316f10139fd6d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"5a0afc9d\" data-lake-id=\"d81e7f4be0c35c5c0a1bf4b56acbeef7\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">其它</h2><p data-lake-id=\"a4eb9d185f790ec82c227fcb9f0973d7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol start=\"1\" data-lake-id=\"b65881f6c961dd1f51b9c921c405c9e7\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"2624185a9ef9634fb97ccfa09bda2cc6\">Electron API 说明中有说实现机制类似 Java 的 <a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" target=\"_blank\">RMI</a>，然后试了一下，的确有些相似。</li><li data-lake-id=\"700d51727202e4746252c3dc706e6902\">在 server.js 代码中有一个 ipc 参数:</li></ol><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"9da1c8b8\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">clientProcess</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cp</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">spawn</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'node'</span>, [<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'--inspect=9230'</span>, <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'./client.js'</span>], {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stdio</span>: [<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'inherit'</span>, <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'inherit'</span>, <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'inherit'</span>, <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'ipc'</span>],\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">})</span></span></pre></div></div></div><ol start=\"2\" data-lake-id=\"8aa18b47cedfeeb3dda76b302d8b3816\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"ead4445fc22255efe99c29e7cd9ccc92\">这里的 ipc 参数，能让 nodejs 在 spawn 子进程的时候，加上一个 ipc socket 隧道，默认是没有加的，那样将不能使用 process.send 方法。之所以 child_process.fork 方法可以使用 ipc，是因为 fork 其实是 spawn 的一个封装方法，里面有加上 ipc 这个参数。</li><li data-lake-id=\"e27c4b37a108b3c173373c9b2266cbcd\">比如 Date 或者 Promise 等非结构化数据，暂时没有实现，这个库只是作一个简单的示例说明。</li><li data-lake-id=\"d53f6188a6a186ae74ca7201542aab92\">electron 也有类似的代码，里面有完整地实现，可以参看 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">./electron/lib/browser/remote/server.ts</code> 和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">./electron/lib/renderer/api/remote.js</code></li></ol><p data-lake-id=\"2bb8b5bdf86bb09c6c8540265f37f4e9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"d17a0f0b\" data-lake-id=\"508e59bd3b8b7262966791778a8f6eb2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">参考</h2><p data-lake-id=\"82bda192d1681be796a886808fba9b74\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"c2f9d9a8a63a3dc5581c02250b922a57\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"f042f7488d7970db4ec4226edc0d0be3\">Java 的 <a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" target=\"_blank\">RMI</a></li><li data-lake-id=\"bfcfd98c2630e28eb207a9f0a50f4f3b\"><a href=\"https://github.com/electron/electron\" target=\"_blank\">https://github.com/electron/electron</a></li><li data-lake-id=\"de4edf7ca5301f21346022dcdf1935b9\"><a href=\"https://nodejs.org/docs/latest/api/child_process.html\" target=\"_blank\">https://nodejs.org/docs/latest/api/child_process.html</a></li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">刚开始接触 Electron 的时候，很好奇有一个 remote 模块，能很方便地实现跨进程的操作，比如数据共享和方法调用。最近抽空研究了一下，所以成文。</p><p data-lake-id=\"badf486aff8d3c9c662baa52a142bc84\">实现的一个示例 demo: <a href=\"https://github.com/yantze/demo-electron-remote\" target=\"_blank\">https://github.com/yantze/demo-electron-remote</a> 。</p><p data-lake-id=\"0d54de08e4736a72c362a0fc6cad7856\"><br /></p><p data-lake-id=\"6d520685734ad858cffa6c04b03832f6\">默认的 ipc 协议是可以传送可以结构化的数据。remote 需要完成的事情是，对不能结构化的数据，用元信息(meta) 记录，然后 remote 需要被调用的时候，发起 ipc 请求到主进程或者 server 进程，远程调用方法。这里是实现一个简单的 remote 调用机制的流程，方便了解 remote 的整个调用流程。</p><p data-lake-id=\"8fa77f1b3ef9515508473044a7bcca9b\"><br /></p><p data-lake-id=\"5367bbba6c8de484cecbe75c51fd305a\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F120091%2F1611385116701-f1ab46f1-7d44-4e70-a1d7-a2ecca8123a5.png%22%2C%22originWidth%22%3A1018%2C%22originHeight%22%3A432%2C%22name%22%3A%22image.png%22%2C%22size%22%3A37371%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A813.7539%2C%22y%22%3A63.217194%2C%22width%22%3A177.60303%2C%22height%22%3A21.774870999999997%2C%22text%22%3A%22process.send%22%7D%2C%7B%22x%22%3A24.54623%2C%22y%22%3A137.31715%2C%22width%22%3A274.62891%2C%22height%22%3A30.001329999999996%2C%22text%22%3A%22Listening%5C%22message%5C%22%22%7D%2C%7B%22x%22%3A830.52734%2C%22y%22%3A145.51387%2C%22width%22%3A87.67246%2C%22height%22%3A27.518280000000004%2C%22text%22%3A%22client%22%7D%2C%7B%22x%22%3A291.9143%2C%22y%22%3A177.66376%2C%22width%22%3A305.6729%2C%22height%22%3A55.070719999999994%2C%22text%22%3A%22T--------ipc%22%7D%2C%7B%22x%22%3A62.45407%2C%22y%22%3A221.7345%2C%22width%22%3A219.31577%2C%22height%22%3A32.432050000000004%2C%22text%22%3A%22FloatingTopic%22%7D%2C%7B%22x%22%3A829.68823%2C%22y%22%3A359.5026%2C%22width%22%3A89.01846999999998%2C%22height%22%3A26.689200000000028%2C%22text%22%3A%22client%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22process.send%20Listening%5C%22message%5C%22%20client%20T--------ipc%20FloatingTopic%20client%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A509%2C%22height%22%3A216%7D\"></card></p><p data-lake-id=\"173abd498eba2def73d897c8e61b5117\"><br /></p><h2 id=\"1257f8d9\" data-lake-id=\"27505b0a804090622b5e7aa393282c08\">分析流程</h2><p data-lake-id=\"be11f7e4a9f10919ab396455394cf99f\"><br /></p><p data-lake-id=\"37f32ae5261b4aee82fe1bc46dfbdc4d\">下面分析从一个简单的结构开始，逐渐到复杂结构体，来实现跨进程的传送。</p><p data-lake-id=\"a09b4b81de33fb9fd131306308166a6f\"><br /></p><h3 id=\"3c40155f\" data-lake-id=\"4e16b315b01076dc5c2765743448f543\">可结构化的对象</h3><p data-lake-id=\"2b1d4070d9d19ed62ebbb58bf8846d78\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%224075f026%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20server.js%5Cnconst%20cp%20%3D%20require('child_process')%5Cnconst%20clientProcess%20%3D%20cp.fork('.%2Fclient.js')%5Cnconst%20remoteObj%20%3D%20%7B%5Cn%20%20%20%20normal%3A%20'dddd'%2C%5Cn%20%20%20%20num%3A%202%2C%5Cn%7D%5CnclientProcess.on('message'%2C%20(commandId)%20%3D%3E%20%7B%5Cn%20%20%20%20if%20(commandId%20%3D%3D%3D%20'GET_OBJ')%20%7B%5Cn%20%20%20%20%20%20%20%20clientProcess.send(remoteObj)%5Cn%20%20%20%20%7D%5Cn%7D)%5Cn%5Cn%2F%2F%20client.js%5Cnprocess.send('GET_OBJ')%5Cnprocess.on('message'%2C%20obj%20%3D%3E%20%7B%5Cn%20%20%20%20console.log('Receive%20obj%3A'%2C%20obj)%5Cn%7D)%22%7D\"></card><p data-lake-id=\"c20d62824358e616a8995baa9cd46204\"><br /></p><p data-lake-id=\"c30fbb60b8b481a226f93a8c67de224e\">这里实现一个相当简单的进程间传送数据的例子，当 server 进程 fork 一个 child 进程后，child 发送一个请求，然后 server 接受数据后，发送给 child 一个自身的对象，然后 child 就接受到了这个数据对象。</p><p data-lake-id=\"d68ca2f767649ce2543b90ed04d16743\"><br /></p><p data-lake-id=\"f23e1e66a44440eeb964d1e8cdad8b54\">但一旦这个 remoteObj 对象中包含了一个方法，或者 Promise 这些不可结构化的数据，那么对应的数据就会丢失。</p><p data-lake-id=\"bb1abbaf4c0b9a24c09ca95205dbdbf4\"><br /></p><h3 id=\"65a58f13\" data-lake-id=\"851f49036c672a90d149e11ab196db8e\">对象中包含方法时处理</h3><p data-lake-id=\"dc31661953471b858c5a9cabbb38c6f4\"><br /></p><p data-lake-id=\"800ed36a4c8ccbafe337c1700157bb7b\">其实实现的方式也还好，就是判断这里面是否有 function, 如果有，就使用元信息包裹一下这个 function，记录方法名。因为当 client 进程调用对应的方法的时候，需要向 server 进程发起请求，server 接到请求后，需要找到对应的 remoteObj, 并且定位到方法名，就可以 <code>remoteObj[functionName]()</code> 实现远程方法调用了。</p><p data-lake-id=\"60aab1e97c6e02fa111dab2ad0274f49\"><br /></p><p data-lake-id=\"aad4f67ff2ee2a7b3ae6d8be0849da1e\">既然需要记录方法名等额外数据，就需要 meta 去包裹方法，这里 server 需要需要一个新的方法 valueToMeta，而 client 需要一个解释 meta 的方法， metaToValue。</p><p data-lake-id=\"a76f78d2d4d395db9e029ff09d52a6f6\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2214bd1501%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20server.js%5Cnconst%20valueToMeta%20%3D%20function%20(value)%20%7B%5Cn%20%20%20%20%2F%2F%20Determine%20the%20type%20of%20value.%5Cn%20%20%20%20let%20type%20%3D%20typeof%20value%5Cn%20%20%20%20if%20(type%20%3D%3D%3D%20'object'%20%7C%7C%20type%20%3D%3D%3D%20'function')%20%7B%5Cn%20%20%20%20%20%20%20%20return%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20type%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20value.constructor%20%3F%20value.constructor.name%20%3A%20''%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20id%3A%20objectsRegistry.add(value)%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20members%3A%20parseMembers(value)%2C%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%7D%5Cn%5Cn%2F%2F%20client.js%5Cnasync%20function%20metaToValue(meta)%20%7B%5Cn%20%20%20%20if%20(meta.type%20%3D%3D%3D%20'function')%20%7B%5Cn%20%20%20%20%20%20const%20remoteFunction%20%3D%20async%20function%20(...args)%20%7B%5Cn%20%20%20%20%20%20%20%20const%20commandId%20%3D%20'ELECTRON_BROWSER_FUNCTION_CALL'%5Cn%20%20%20%20%20%20%20%20const%20obj%20%3D%20await%20getRemoteValue(commandId%2C%20%7B%20id%3A%20meta.id%20%7D)%5Cn%20%20%20%20%20%20%20%20return%20await%20metaToValue(obj)%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20ret%20%3D%20remoteFunction%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20ret%20%3D%20%7B%7D%5Cn%20%20%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"d701b8c0733dd155843ff02ae289844c\"><br /></p><p data-lake-id=\"86e2ce584b5b624e260fbde356b172a4\">这里可以看到，判断为 function 后，valueToMeta 会把将 function 解析后变成4个数据字段返回，id 和 members 可以可以暂时不管，因为暂时不考虑 class 类。然后 client 进程就能通过 metaToValue 解析并且还原 remoteObj 的结构。</p><p data-lake-id=\"8b88e26431da9b42d3e3e21080905fb4\"><br /></p><h3 id=\"5ca2543d\" data-lake-id=\"3105adf9d774bb029fed876be6d6cd12\">对象中包含子对象，并且还包含方法</h3><p data-lake-id=\"2bf2f15f6a8b035fd1826b2442d03655\"><br /></p><p data-lake-id=\"faab2c32e8bca02a9498bf1e93a4b27d\">这个时候，就要开始复杂的嵌套分析和解析了。其实也是在上一小节里面，再加上一个嵌套，就是如果分析到一个新的对象，那就把这个子对象存起来，当子对象的方法需要被调用的时候，就需要通过 id 找到子对象，并且通过方法名调用子对象的方法。</p><p data-lake-id=\"517f40e64f81c791317517066df6ee7c\"><br /></p><p data-lake-id=\"95545f64da8b5f8b2a4e9019bfff078a\">这时需要用到上面代码中出现的 parseMembers 方法了，这个方法能解析 object 中的所有自有对象，并且把子对象再次放进 valueToMeta 中，做递归循环。</p><p data-lake-id=\"1359c69733188c0d7d8ec56668fd1cc0\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%223c8f4f54%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20parseMembers(value)%20%7B%5Cn%20%20%20%20const%20members%20%3D%20Object.getOwnPropertyNames(value)%5Cn%20%20%20%20return%20members.map(name%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(IGNORE_FUNCTION_MEMBERS.includes(name))%20return%20false%5Cn%5Cn%20%20%20%20%20%20%20%20const%20meta%20%3D%20valueToMeta(value%5Bname%5D)%5Cn%20%20%20%20%20%20%20%20if%20(meta.type%20%3D%3D%3D%20'function')%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20...meta%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20name%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20type%3A%20'method'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20return%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20...meta%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20name%2C%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D).filter(Boolean)%5Cn%7D%22%7D\"></card><p data-lake-id=\"2b261340bce0d19997cff0fab0e8f503\"><br /></p><p data-lake-id=\"57f5d44e1f63e405dc0e6b56922fc028\">不过这里会忽略一些属性，在 <code>IGNORE_FUNCTION_MEMBERS</code> 中有声明，比如 arguments 这个 function 的自有属性。之所以把 type 改为了 method ，是因为这个一个对象的方法，需要使用 id 去寻找方法的上层对象。</p><p data-lake-id=\"052e281b843d870b787f65c404840b00\"><br /></p><h3 id=\"daaa5388\" data-lake-id=\"ba2dff885431059c665312f7acaaf226\">小节</h3><p data-lake-id=\"410f151d80a2c4bda89d8459406edd07\"><br /></p><p data-lake-id=\"9ea9f7a4fad903d9e71ea5626ae6bc35\">其实通过上面的介绍，已经基本清楚整个 remote 的调用流程了，如果不明白可以直接访问我新建的一个 demo 仓库，里面可以完整地运行一个简单的 remote 调用。</p><p data-lake-id=\"1997136ec4fe75ca2aae0366b8bc6749\"><br /></p><h3 id=\"d098aafd\" data-lake-id=\"81362f2da25b286bb1c2d33eab06e094\">如何使用仓库的内容</h3><p data-lake-id=\"1e39ee4c6c98cf3ef49f508a7fb80a54\"><br /></p><ol start=\"1\" data-lake-id=\"b9f57b0a32eacdb7159bb39bfec996b6\"><li data-lake-id=\"71051b7d8a0cf543931e8924471d281c\">在启动 server.js 后，可以在 Chrome 浏览器的地址栏打开 <code>chrome://inspect</code></li><li data-lake-id=\"378a556801adc5f3cfe4188f401cd20a\">在里面的 Remote Target 中选择 <code>./client.js</code></li><li data-lake-id=\"f8f857526bf9b6948e75f3131d33292f\">跳转到 Console 面板中，执行 <code>const obj = await require('./client.js').getRemoteObj()</code></li><li data-lake-id=\"805df29f53de4863ac91df9ec1e6ee34\">返回了 server 进程的 remoteObj</li></ol><p data-lake-id=\"0c47b9de2163523fc9de117067b0bd8c\"><br /></p><p data-lake-id=\"10c0ba9aba7f6c0b496c17db502d8e15\">试试，应该还挺好玩的 :P。</p><p data-lake-id=\"212d1771a1c7a1ae359316f10139fd6d\"><br /></p><h2 id=\"5a0afc9d\" data-lake-id=\"d81e7f4be0c35c5c0a1bf4b56acbeef7\">其它</h2><p data-lake-id=\"a4eb9d185f790ec82c227fcb9f0973d7\"><br /></p><ol start=\"1\" data-lake-id=\"b65881f6c961dd1f51b9c921c405c9e7\"><li data-lake-id=\"2624185a9ef9634fb97ccfa09bda2cc6\">Electron API 说明中有说实现机制类似 Java 的 <a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" target=\"_blank\">RMI</a>，然后试了一下，的确有些相似。</li><li data-lake-id=\"700d51727202e4746252c3dc706e6902\">在 server.js 代码中有一个 ipc 参数:</li></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%229da1c8b8%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22clientProcess%20%3D%20cp.spawn('node'%2C%20%5B'--inspect%3D9230'%2C%20'.%2Fclient.js'%5D%2C%20%7B%5Cn%20%20%20%20stdio%3A%20%5B'inherit'%2C%20'inherit'%2C%20'inherit'%2C%20'ipc'%5D%2C%5Cn%7D)%22%7D\"></card><ol start=\"2\" data-lake-id=\"8aa18b47cedfeeb3dda76b302d8b3816\"><li data-lake-id=\"ead4445fc22255efe99c29e7cd9ccc92\">这里的 ipc 参数，能让 nodejs 在 spawn 子进程的时候，加上一个 ipc socket 隧道，默认是没有加的，那样将不能使用 process.send 方法。之所以 child_process.fork 方法可以使用 ipc，是因为 fork 其实是 spawn 的一个封装方法，里面有加上 ipc 这个参数。</li><li data-lake-id=\"e27c4b37a108b3c173373c9b2266cbcd\">比如 Date 或者 Promise 等非结构化数据，暂时没有实现，这个库只是作一个简单的示例说明。</li><li data-lake-id=\"d53f6188a6a186ae74ca7201542aab92\">electron 也有类似的代码，里面有完整地实现，可以参看 <code>./electron/lib/browser/remote/server.ts</code> 和 <code>./electron/lib/renderer/api/remote.js</code></li></ol><p data-lake-id=\"2bb8b5bdf86bb09c6c8540265f37f4e9\"><br /></p><h2 id=\"d17a0f0b\" data-lake-id=\"508e59bd3b8b7262966791778a8f6eb2\">参考</h2><p data-lake-id=\"82bda192d1681be796a886808fba9b74\"><br /></p><ul data-lake-id=\"c2f9d9a8a63a3dc5581c02250b922a57\"><li data-lake-id=\"f042f7488d7970db4ec4226edc0d0be3\">Java 的 <a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" target=\"_blank\">RMI</a></li><li data-lake-id=\"bfcfd98c2630e28eb207a9f0a50f4f3b\"><a href=\"https://github.com/electron/electron\" target=\"_blank\">https://github.com/electron/electron</a></li><li data-lake-id=\"de4edf7ca5301f21346022dcdf1935b9\"><a href=\"https://nodejs.org/docs/latest/api/child_process.html\" target=\"_blank\">https://nodejs.org/docs/latest/api/child_process.html</a></li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">刚开始接触 Electron 的时候，很好奇有一个 remote 模块，能很方便地实现跨进程的操作，比如数据共享和方法调用。最近抽空研究了一下，所以成文。</p><p data-lake-id=\"badf486aff8d3c9c662baa52a142bc84\">实现的一个示例 demo: <a href=\"https://github.com/yantze/demo-electron-remote\" target=\"_blank\">https://github.com/yantze/demo-electron-remote</a> 。</p><p data-lake-id=\"0d54de08e4736a72c362a0fc6cad7856\"><br /></p><p data-lake-id=\"6d520685734ad858cffa6c04b03832f6\">默认的 ipc 协议是可以传送可以结构化的数据。remote 需要完成的事情是，对不能结构化的数据，用元信息(meta) 记录，然后 remote 需要被调用的时候，发起 ipc 请求到主进程或者 server 进程，远程调用方法。这里是实现一个简单的 remote 调用机制的流程，方便了解 remote 的整个调用流程。</p><p data-lake-id=\"8fa77f1b3ef9515508473044a7bcca9b\"><br /></p><p data-lake-id=\"5367bbba6c8de484cecbe75c51fd305a\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F120091%2F1611385116701-f1ab46f1-7d44-4e70-a1d7-a2ecca8123a5.png%22%2C%22originWidth%22%3A1018%2C%22originHeight%22%3A432%2C%22name%22%3A%22image.png%22%2C%22size%22%3A37371%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A813.7539%2C%22y%22%3A63.217194%2C%22width%22%3A177.60303%2C%22height%22%3A21.774870999999997%2C%22text%22%3A%22process.send%22%7D%2C%7B%22x%22%3A24.54623%2C%22y%22%3A137.31715%2C%22width%22%3A274.62891%2C%22height%22%3A30.001329999999996%2C%22text%22%3A%22Listening%5C%22message%5C%22%22%7D%2C%7B%22x%22%3A830.52734%2C%22y%22%3A145.51387%2C%22width%22%3A87.67246%2C%22height%22%3A27.518280000000004%2C%22text%22%3A%22client%22%7D%2C%7B%22x%22%3A291.9143%2C%22y%22%3A177.66376%2C%22width%22%3A305.6729%2C%22height%22%3A55.070719999999994%2C%22text%22%3A%22T--------ipc%22%7D%2C%7B%22x%22%3A62.45407%2C%22y%22%3A221.7345%2C%22width%22%3A219.31577%2C%22height%22%3A32.432050000000004%2C%22text%22%3A%22FloatingTopic%22%7D%2C%7B%22x%22%3A829.68823%2C%22y%22%3A359.5026%2C%22width%22%3A89.01846999999998%2C%22height%22%3A26.689200000000028%2C%22text%22%3A%22client%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22process.send%20Listening%5C%22message%5C%22%20client%20T--------ipc%20FloatingTopic%20client%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A509%2C%22height%22%3A216%7D\"></card></p><p data-lake-id=\"173abd498eba2def73d897c8e61b5117\"><br /></p><h2 id=\"1257f8d9\" data-lake-id=\"27505b0a804090622b5e7aa393282c08\">分析流程</h2><p data-lake-id=\"be11f7e4a9f10919ab396455394cf99f\"><br /></p><p data-lake-id=\"37f32ae5261b4aee82fe1bc46dfbdc4d\">下面分析从一个简单的结构开始，逐渐到复杂结构体，来实现跨进程的传送。</p><p data-lake-id=\"a09b4b81de33fb9fd131306308166a6f\"><br /></p><h3 id=\"3c40155f\" data-lake-id=\"4e16b315b01076dc5c2765743448f543\">可结构化的对象</h3><p data-lake-id=\"2b1d4070d9d19ed62ebbb58bf8846d78\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%224075f026%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20server.js%5Cnconst%20cp%20%3D%20require('child_process')%5Cnconst%20clientProcess%20%3D%20cp.fork('.%2Fclient.js')%5Cnconst%20remoteObj%20%3D%20%7B%5Cn%20%20%20%20normal%3A%20'dddd'%2C%5Cn%20%20%20%20num%3A%202%2C%5Cn%7D%5CnclientProcess.on('message'%2C%20(commandId)%20%3D%3E%20%7B%5Cn%20%20%20%20if%20(commandId%20%3D%3D%3D%20'GET_OBJ')%20%7B%5Cn%20%20%20%20%20%20%20%20clientProcess.send(remoteObj)%5Cn%20%20%20%20%7D%5Cn%7D)%5Cn%5Cn%2F%2F%20client.js%5Cnprocess.send('GET_OBJ')%5Cnprocess.on('message'%2C%20obj%20%3D%3E%20%7B%5Cn%20%20%20%20console.log('Receive%20obj%3A'%2C%20obj)%5Cn%7D)%22%7D\"></card><p data-lake-id=\"c20d62824358e616a8995baa9cd46204\"><br /></p><p data-lake-id=\"c30fbb60b8b481a226f93a8c67de224e\">这里实现一个相当简单的进程间传送数据的例子，当 server 进程 fork 一个 child 进程后，child 发送一个请求，然后 server 接受数据后，发送给 child 一个自身的对象，然后 child 就接受到了这个数据对象。</p><p data-lake-id=\"d68ca2f767649ce2543b90ed04d16743\"><br /></p><p data-lake-id=\"f23e1e66a44440eeb964d1e8cdad8b54\">但一旦这个 remoteObj 对象中包含了一个方法，或者 Promise 这些不可结构化的数据，那么对应的数据就会丢失。</p><p data-lake-id=\"bb1abbaf4c0b9a24c09ca95205dbdbf4\"><br /></p><h3 id=\"65a58f13\" data-lake-id=\"851f49036c672a90d149e11ab196db8e\">对象中包含方法时处理</h3><p data-lake-id=\"dc31661953471b858c5a9cabbb38c6f4\"><br /></p><p data-lake-id=\"800ed36a4c8ccbafe337c1700157bb7b\">其实实现的方式也还好，就是判断这里面是否有 function, 如果有，就使用元信息包裹一下这个 function，记录方法名。因为当 client 进程调用对应的方法的时候，需要向 server 进程发起请求，server 接到请求后，需要找到对应的 remoteObj, 并且定位到方法名，就可以 <code>remoteObj[functionName]()</code> 实现远程方法调用了。</p><p data-lake-id=\"60aab1e97c6e02fa111dab2ad0274f49\"><br /></p><p data-lake-id=\"aad4f67ff2ee2a7b3ae6d8be0849da1e\">既然需要记录方法名等额外数据，就需要 meta 去包裹方法，这里 server 需要需要一个新的方法 valueToMeta，而 client 需要一个解释 meta 的方法， metaToValue。</p><p data-lake-id=\"a76f78d2d4d395db9e029ff09d52a6f6\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2214bd1501%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20server.js%5Cnconst%20valueToMeta%20%3D%20function%20(value)%20%7B%5Cn%20%20%20%20%2F%2F%20Determine%20the%20type%20of%20value.%5Cn%20%20%20%20let%20type%20%3D%20typeof%20value%5Cn%20%20%20%20if%20(type%20%3D%3D%3D%20'object'%20%7C%7C%20type%20%3D%3D%3D%20'function')%20%7B%5Cn%20%20%20%20%20%20%20%20return%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20type%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20value.constructor%20%3F%20value.constructor.name%20%3A%20''%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20id%3A%20objectsRegistry.add(value)%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20members%3A%20parseMembers(value)%2C%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%7D%5Cn%5Cn%2F%2F%20client.js%5Cnasync%20function%20metaToValue(meta)%20%7B%5Cn%20%20%20%20if%20(meta.type%20%3D%3D%3D%20'function')%20%7B%5Cn%20%20%20%20%20%20const%20remoteFunction%20%3D%20async%20function%20(...args)%20%7B%5Cn%20%20%20%20%20%20%20%20const%20commandId%20%3D%20'ELECTRON_BROWSER_FUNCTION_CALL'%5Cn%20%20%20%20%20%20%20%20const%20obj%20%3D%20await%20getRemoteValue(commandId%2C%20%7B%20id%3A%20meta.id%20%7D)%5Cn%20%20%20%20%20%20%20%20return%20await%20metaToValue(obj)%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20ret%20%3D%20remoteFunction%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20ret%20%3D%20%7B%7D%5Cn%20%20%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"d701b8c0733dd155843ff02ae289844c\"><br /></p><p data-lake-id=\"86e2ce584b5b624e260fbde356b172a4\">这里可以看到，判断为 function 后，valueToMeta 会把将 function 解析后变成4个数据字段返回，id 和 members 可以可以暂时不管，因为暂时不考虑 class 类。然后 client 进程就能通过 metaToValue 解析并且还原 remoteObj 的结构。</p><p data-lake-id=\"8b88e26431da9b42d3e3e21080905fb4\"><br /></p><h3 id=\"5ca2543d\" data-lake-id=\"3105adf9d774bb029fed876be6d6cd12\">对象中包含子对象，并且还包含方法</h3><p data-lake-id=\"2bf2f15f6a8b035fd1826b2442d03655\"><br /></p><p data-lake-id=\"faab2c32e8bca02a9498bf1e93a4b27d\">这个时候，就要开始复杂的嵌套分析和解析了。其实也是在上一小节里面，再加上一个嵌套，就是如果分析到一个新的对象，那就把这个子对象存起来，当子对象的方法需要被调用的时候，就需要通过 id 找到子对象，并且通过方法名调用子对象的方法。</p><p data-lake-id=\"517f40e64f81c791317517066df6ee7c\"><br /></p><p data-lake-id=\"95545f64da8b5f8b2a4e9019bfff078a\">这时需要用到上面代码中出现的 parseMembers 方法了，这个方法能解析 object 中的所有自有对象，并且把子对象再次放进 valueToMeta 中，做递归循环。</p><p data-lake-id=\"1359c69733188c0d7d8ec56668fd1cc0\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%223c8f4f54%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20parseMembers(value)%20%7B%5Cn%20%20%20%20const%20members%20%3D%20Object.getOwnPropertyNames(value)%5Cn%20%20%20%20return%20members.map(name%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(IGNORE_FUNCTION_MEMBERS.includes(name))%20return%20false%5Cn%5Cn%20%20%20%20%20%20%20%20const%20meta%20%3D%20valueToMeta(value%5Bname%5D)%5Cn%20%20%20%20%20%20%20%20if%20(meta.type%20%3D%3D%3D%20'function')%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20...meta%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20name%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20type%3A%20'method'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20return%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20...meta%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20name%2C%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D).filter(Boolean)%5Cn%7D%22%7D\"></card><p data-lake-id=\"2b261340bce0d19997cff0fab0e8f503\"><br /></p><p data-lake-id=\"57f5d44e1f63e405dc0e6b56922fc028\">不过这里会忽略一些属性，在 <code>IGNORE_FUNCTION_MEMBERS</code> 中有声明，比如 arguments 这个 function 的自有属性。之所以把 type 改为了 method ，是因为这个一个对象的方法，需要使用 id 去寻找方法的上层对象。</p><p data-lake-id=\"052e281b843d870b787f65c404840b00\"><br /></p><h3 id=\"daaa5388\" data-lake-id=\"ba2dff885431059c665312f7acaaf226\">小节</h3><p data-lake-id=\"410f151d80a2c4bda89d8459406edd07\"><br /></p><p data-lake-id=\"9ea9f7a4fad903d9e71ea5626ae6bc35\">其实通过上面的介绍，已经基本清楚整个 remote 的调用流程了，如果不明白可以直接访问我新建的一个 demo 仓库，里面可以完整地运行一个简单的 remote 调用。</p><p data-lake-id=\"1997136ec4fe75ca2aae0366b8bc6749\"><br /></p><h3 id=\"d098aafd\" data-lake-id=\"81362f2da25b286bb1c2d33eab06e094\">如何使用仓库的内容</h3><p data-lake-id=\"1e39ee4c6c98cf3ef49f508a7fb80a54\"><br /></p><ol start=\"1\" data-lake-id=\"b9f57b0a32eacdb7159bb39bfec996b6\"><li data-lake-id=\"71051b7d8a0cf543931e8924471d281c\">在启动 server.js 后，可以在 Chrome 浏览器的地址栏打开 <code>chrome://inspect</code></li><li data-lake-id=\"378a556801adc5f3cfe4188f401cd20a\">在里面的 Remote Target 中选择 <code>./client.js</code></li><li data-lake-id=\"f8f857526bf9b6948e75f3131d33292f\">跳转到 Console 面板中，执行 <code>const obj = await require('./client.js').getRemoteObj()</code></li><li data-lake-id=\"805df29f53de4863ac91df9ec1e6ee34\">返回了 server 进程的 remoteObj</li></ol><p data-lake-id=\"0c47b9de2163523fc9de117067b0bd8c\"><br /></p><p data-lake-id=\"10c0ba9aba7f6c0b496c17db502d8e15\">试试，应该还挺好玩的 :P。</p><p data-lake-id=\"212d1771a1c7a1ae359316f10139fd6d\"><br /></p><h2 id=\"5a0afc9d\" data-lake-id=\"d81e7f4be0c35c5c0a1bf4b56acbeef7\">其它</h2><p data-lake-id=\"a4eb9d185f790ec82c227fcb9f0973d7\"><br /></p><ol start=\"1\" data-lake-id=\"b65881f6c961dd1f51b9c921c405c9e7\"><li data-lake-id=\"2624185a9ef9634fb97ccfa09bda2cc6\">Electron API 说明中有说实现机制类似 Java 的 <a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" target=\"_blank\">RMI</a>，然后试了一下，的确有些相似。</li><li data-lake-id=\"700d51727202e4746252c3dc706e6902\">在 server.js 代码中有一个 ipc 参数:</li></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%229da1c8b8%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22clientProcess%20%3D%20cp.spawn('node'%2C%20%5B'--inspect%3D9230'%2C%20'.%2Fclient.js'%5D%2C%20%7B%5Cn%20%20%20%20stdio%3A%20%5B'inherit'%2C%20'inherit'%2C%20'inherit'%2C%20'ipc'%5D%2C%5Cn%7D)%22%7D\"></card><ol start=\"2\" data-lake-id=\"8aa18b47cedfeeb3dda76b302d8b3816\"><li data-lake-id=\"ead4445fc22255efe99c29e7cd9ccc92\">这里的 ipc 参数，能让 nodejs 在 spawn 子进程的时候，加上一个 ipc socket 隧道，默认是没有加的，那样将不能使用 process.send 方法。之所以 child_process.fork 方法可以使用 ipc，是因为 fork 其实是 spawn 的一个封装方法，里面有加上 ipc 这个参数。</li><li data-lake-id=\"e27c4b37a108b3c173373c9b2266cbcd\">比如 Date 或者 Promise 等非结构化数据，暂时没有实现，这个库只是作一个简单的示例说明。</li><li data-lake-id=\"d53f6188a6a186ae74ca7201542aab92\">electron 也有类似的代码，里面有完整地实现，可以参看 <code>./electron/lib/browser/remote/server.ts</code> 和 <code>./electron/lib/renderer/api/remote.js</code></li></ol><p data-lake-id=\"2bb8b5bdf86bb09c6c8540265f37f4e9\"><br /></p><h2 id=\"d17a0f0b\" data-lake-id=\"508e59bd3b8b7262966791778a8f6eb2\">参考</h2><p data-lake-id=\"82bda192d1681be796a886808fba9b74\"><br /></p><ul data-lake-id=\"c2f9d9a8a63a3dc5581c02250b922a57\"><li data-lake-id=\"f042f7488d7970db4ec4226edc0d0be3\">Java 的 <a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\" target=\"_blank\">RMI</a></li><li data-lake-id=\"bfcfd98c2630e28eb207a9f0a50f4f3b\"><a href=\"https://github.com/electron/electron\" target=\"_blank\">https://github.com/electron/electron</a></li><li data-lake-id=\"de4edf7ca5301f21346022dcdf1935b9\"><a href=\"https://nodejs.org/docs/latest/api/child_process.html\" target=\"_blank\">https://nodejs.org/docs/latest/api/child_process.html</a></li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-01-23T06:59:11.000Z",
    "deleted_at": null,
    "created_at": "2021-01-23T06:54:02.000Z",
    "updated_at": "2021-03-14T12:01:26.000Z",
    "published_at": "2021-01-23T06:59:11.000Z",
    "first_published_at": "2021-01-23T06:54:59.000Z",
    "word_count": 1518,
    "cover": "https://cdn.nlark.com/yuque/0/2021/png/120091/1611384878024-b1c85e8a-93bf-4c13-a8bc-f8d462e02c57.png",
    "description": "刚开始接触 Electron 的时候，很好奇有一个 remote 模块，能很方便地实现跨进程的操作，比如数据共享和方法调用。最近抽空研究了一下，所以成文。实现的一个示例 demo: https://github.com/yantze/demo-electron-remote 。默认的 ipc ...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 30593937,
    "slug": "zuukg9",
    "title": "asar 解析",
    "book_id": 213435,
    "book": {
      "id": 213435,
      "type": "Book",
      "slug": "blog",
      "name": "Blog",
      "user_id": 120091,
      "description": "开放数据",
      "creator_id": 120091,
      "public": 1,
      "items_count": 8,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-08-06T05:06:41.373Z",
      "updated_at": "2021-08-06T05:06:41.000Z",
      "created_at": "2019-01-31T02:12:32.000Z",
      "namespace": "yantze/blog",
      "user": {
        "id": 120091,
        "type": "User",
        "login": "yantze",
        "name": "yantze",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
        "books_count": 6,
        "public_books_count": 2,
        "followers_count": 0,
        "following_count": 2,
        "created_at": "2018-05-06T11:41:31.000Z",
        "updated_at": "2021-07-19T16:15:37.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 120091,
    "creator": {
      "id": 120091,
      "type": "User",
      "login": "yantze",
      "name": "yantze",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
      "books_count": 6,
      "public_books_count": 2,
      "followers_count": 0,
      "following_count": 2,
      "created_at": "2018-05-06T11:41:31.000Z",
      "updated_at": "2021-07-19T16:15:37.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "\n<br />这是一个在 Electron 中常用于把多个文件打包到一个 asar 文件的文件归档格式。缩写简单可以理解为 A Simple Archive，类似于 tar 或者 zip 这种格式。asar 文件简单的包含三个部分，第一部分占 8 bytes 描述文件头的长度，第二部分是一个 json 文件格式，描述包含了哪些文件，第三部分是文件二进制的排列。<br />\n<br />下面是一个asar 文件头的 json 文件信息，通过这种格式信息，能完整的分析出有哪些文件和文件的目录结构:<br />\n\n```json\n{\n  \"header\": {\n    \"files\": {\n      \"child-dir\": {\n        \"files\": {\n          \"index.js\": {\n            \"size\": 27,\n            \"offset\": \"0\"\n          }\n        }\n      },\n      \"README.md\": {\n        \"size\": 13,\n        \"offset\": \"27\"\n      }\n    }\n  },\n  \"headerSize\": 120\n}\n```\n\n<br />下面来分析一个如何从 asar 中读取一个文件。<br />\n\n<a name=\"cace1d67\"></a>\n## 前置环境\n\n<br />做出一个类似这样的文件结构：<br />\n\n```\n└── project\n    ├── README.md\n    └── child-dir\n        └── index.js\n```\n\n<br />然后执行，就会产生一个 project.asar 的包<br />\n\n```bash\nnpm install asar -g\nasar pack project project.asar\n```\n\n\n<a name=\"c38ed022\"></a>\n## 文件头信息\n\n<br />可以通过一个 nodejs 脚本代码来获取文件信息：<br />\n\n```javascript\nconst fs = require('fs')\n\nconst sizeBuf = Buffer.alloc(8)\nconst fd = fs.openSync('./project.asar')\n\nfs.readSync(fd, sizeBuf, 0, 8, null)\n// fs.readSync(fd, buffer, offset, length, position)\n// position 指定从那个地方开始读，如果是 null，就会从文件内置的 position 中读取，并且更新 更新 position\n\n// sizeBuff 保存了文件头的大小，需要通过 chromium-pickle-js 读取前 32 位无符号整型\nconst pickle = require('chromium-pickle-js')\n\nconst sizePickle = pickle.createFromBuffer(sizeBuf)\nconst headerSize = sizePickle.createIterator().readUInt32()\n// headerSize: 120\n\nconst headerBuf = Buffer.alloc(headerSize)\n// headerBuf.length: 120\n\nfs.readSync(fd, headerBuf, 0, headerSize, null)\nconst headerPickle = pickle.createFromBuffer(headerBuf)\nconst header = headerPickle.createIterator().readString()\nfs.closeSync(fd)\n\nconst headInfo = {\n  header: JSON.parse(header),\n  headerSize,\n}\nconsole.log(JSON.stringify(headInfo, null, 2))\n```\n\n<br />最后就会生成跟上面一样的文件结构：<br />\n\n```json\n{\n  \"header\": {\n    \"files\": {\n      \"child-dir\": {\n        \"files\": {\n          \"index.js\": {\n            \"size\": 27,\n            \"offset\": \"0\"\n          }\n        }\n      },\n      \"README.md\": {\n        \"size\": 13,\n        \"offset\": \"27\"\n      }\n    }\n  },\n  \"headerSize\": 120\n}\n```\n\n\n<a name=\"1f084798\"></a>\n## 文件读取\n\n<br />下面来试试读取其中的 `index.js` 文件，先指定一个路径 `child-dir/index.js`。定位到文件大小 27bytes，偏移量为 0。<br />\n\n```javascript\nconst fileInfo = {\n  size: 27,\n  offset: 0,\n}\n\nconst buffer = Buffer.alloc(fileInfo.size)\nconst fd2 = fs.openSync('./project.asar', 'r')\nconst offset = 8 + headInfo.headerSize + parseInt(fileInfo.offset) // offset: 120\nfs.readSync(fd2, buffer, 0, fileInfo.size, offset)\nfs.closeSync(fd2)\n\nconsole.log('file content:', buffer.toString('utf8'))\n// file content: console.log('hello world')\n```\n\n<br />看来可以读取到文件内容了。<br />\n\n<a name=\"12f1d7ef\"></a>\n## 结束\n\n<br />其实可以直接通过编辑器打开 project.asar 文件，里面基本就是没有压缩的文件，是一个很简单的单文件档案。<br />\n\n<a name=\"d17a0f0b\"></a>\n## 参考\n\n<br />文件中的代码都是改编自 asar 原来的代码，有兴趣也可以看看：<br />\n\n- [https://github.com/electron/asar](https://github.com/electron/asar)\n",
    "body_draft": "\n<br />这是一个在 Electron 中常用于把多个文件打包到一个 asar 文件的文件归档格式。缩写简单可以理解为 A Simple Archive，类似于 tar 或者 zip 这种格式。asar 文件简单的包含三个部分，第一部分占 8 bytes 描述文件头的长度，第二部分是一个 json 文件格式，描述包含了哪些文件，第三部分是文件二进制的排列。<br />\n<br />下面是一个asar 文件头的 json 文件信息，通过这种格式信息，能完整的分析出有哪些文件和文件的目录结构:<br />\n\n```json\n{\n  \"header\": {\n    \"files\": {\n      \"child-dir\": {\n        \"files\": {\n          \"index.js\": {\n            \"size\": 27,\n            \"offset\": \"0\"\n          }\n        }\n      },\n      \"README.md\": {\n        \"size\": 13,\n        \"offset\": \"27\"\n      }\n    }\n  },\n  \"headerSize\": 120\n}\n```\n\n<br />下面来分析一个如何从 asar 中读取一个文件。<br />\n\n<a name=\"cace1d67\"></a>\n## 前置环境\n\n<br />做出一个类似这样的文件结构：<br />\n\n```\n└── project\n    ├── README.md\n    └── child-dir\n        └── index.js\n```\n\n<br />然后执行，就会产生一个 project.asar 的包<br />\n\n```bash\nnpm install asar -g\nasar pack project project.asar\n```\n\n\n<a name=\"c38ed022\"></a>\n## 文件头信息\n\n<br />可以通过一个 nodejs 脚本代码来获取文件信息：<br />\n\n```javascript\nconst fs = require('fs')\n\nconst sizeBuf = Buffer.alloc(8)\nconst fd = fs.openSync('./project.asar')\n\nfs.readSync(fd, sizeBuf, 0, 8, null)\n// fs.readSync(fd, buffer, offset, length, position)\n// position 指定从那个地方开始读，如果是 null，就会从文件内置的 position 中读取，并且更新 更新 position\n\n// sizeBuff 保存了文件头的大小，需要通过 chromium-pickle-js 读取前 32 位无符号整型\nconst pickle = require('chromium-pickle-js')\n\nconst sizePickle = pickle.createFromBuffer(sizeBuf)\nconst headerSize = sizePickle.createIterator().readUInt32()\n// headerSize: 120\n\nconst headerBuf = Buffer.alloc(headerSize)\n// headerBuf.length: 120\n\nfs.readSync(fd, headerBuf, 0, headerSize, null)\nconst headerPickle = pickle.createFromBuffer(headerBuf)\nconst header = headerPickle.createIterator().readString()\nfs.closeSync(fd)\n\nconst headInfo = {\n  header: JSON.parse(header),\n  headerSize,\n}\nconsole.log(JSON.stringify(headInfo, null, 2))\n```\n\n<br />最后就会生成跟上面一样的文件结构：<br />\n\n```json\n{\n  \"header\": {\n    \"files\": {\n      \"child-dir\": {\n        \"files\": {\n          \"index.js\": {\n            \"size\": 27,\n            \"offset\": \"0\"\n          }\n        }\n      },\n      \"README.md\": {\n        \"size\": 13,\n        \"offset\": \"27\"\n      }\n    }\n  },\n  \"headerSize\": 120\n}\n```\n\n\n<a name=\"1f084798\"></a>\n## 文件读取\n\n<br />下面来试试读取其中的 `index.js` 文件，先指定一个路径 `child-dir/index.js`。定位到文件大小 27bytes，偏移量为 0。<br />\n\n```javascript\nconst fileInfo = {\n  size: 27,\n  offset: 0,\n}\n\nconst buffer = Buffer.alloc(fileInfo.size)\nconst fd2 = fs.openSync('./project.asar', 'r')\nconst offset = 8 + headInfo.headerSize + parseInt(fileInfo.offset) // offset: 120\nfs.readSync(fd2, buffer, 0, fileInfo.size, offset)\nfs.closeSync(fd2)\n\nconsole.log('file content:', buffer.toString('utf8'))\n// file content: console.log('hello world')\n```\n\n<br />看来可以读取到文件内容了。<br />\n\n<a name=\"12f1d7ef\"></a>\n## 结束\n\n<br />其实可以直接通过编辑器打开 project.asar 文件，里面基本就是没有压缩的文件，是一个很简单的单文件档案。<br />\n\n<a name=\"d17a0f0b\"></a>\n## 参考\n\n<br />文件中的代码都是改编自 asar 原来的代码，有兴趣也可以看看：<br />\n\n- [https://github.com/electron/asar](https://github.com/electron/asar)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B33%2C0%2C1%2C0%5D%2C%5B33%2C0%2C1%2C2%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"0e16fc38a99ef02070669ce4f9ffc138\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d8fee65b01f323723df90b82ac7d0c83\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这是一个在 Electron 中常用于把多个文件打包到一个 asar 文件的文件归档格式。缩写简单可以理解为 A Simple Archive，类似于 tar 或者 zip 这种格式。asar 文件简单的包含三个部分，第一部分占 8 bytes 描述文件头的长度，第二部分是一个 json 文件格式，描述包含了哪些文件，第三部分是文件二进制的排列。</p><p data-lake-id=\"c3ff544e93bffe4c0540596770bd1c17\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"13891872c3226c4937456e28045831ef\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">下面是一个asar 文件头的 json 文件信息，通过这种格式信息，能完整的分析出有哪些文件和文件的目录结构:</p><p data-lake-id=\"9473a88a364ac7ba846c32873eadbb9c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"d9eafe59\" class=\"\" data-language=\"json\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"header\"</span>: {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"files\"</span>: {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"child-dir\"</span>: {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"files\"</span>: {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"index.js\"</span>: {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"size\"</span>: <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">27</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"offset\"</span>: <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"0\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      },\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"README.md\"</span>: {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"size\"</span>: <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">13</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"offset\"</span>: <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"27\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  },\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"headerSize\"</span>: <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">120</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"02c8733f095b2d473db60170a51d1022\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"5921591e8de52faa2ac731813162142c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">下面来分析一个如何从 asar 中读取一个文件。</p><p data-lake-id=\"234cb58cc74ee871e275b3a8074a1125\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"cace1d67\" data-lake-id=\"45b107674f1aa4c42fcae1ec24328b76\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">前置环境</h2><p data-lake-id=\"e518e69cafa80a004194b122dd404b7a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"06ddee8da93bc3b9235bacd84ced97f1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">做出一个类似这样的文件结构：</p><p data-lake-id=\"8fedcef3866203adf3426b1ee68759d0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"bbf08537\" class=\"\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">└── project\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    ├── README.md\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    └── child-dir\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        └── index.js</span></span></pre></div></div></div><p data-lake-id=\"576e17fb975f6188cd49c268a669d440\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6fa224a9cee4dea474183ea310d436d9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后执行，就会产生一个 project.asar 的包</p><p data-lake-id=\"aab5831ee5e66456912f10d76a5949bd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"f5118280\" class=\"\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">npm</span> install asar <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-g</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">asar pack project project.asar</span></span></pre></div></div></div><p data-lake-id=\"aa99ff5433f74d4e2896abb1fd3b57b0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"c38ed022\" data-lake-id=\"f0846dabf0880f589739a878e351ec53\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">文件头信息</h2><p data-lake-id=\"3b7d3d212f82face248af63e804f75f2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"64fe9c43e6299b58047a8387e9801e9c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">可以通过一个 nodejs 脚本代码来获取文件信息：</p><p data-lake-id=\"2a6117358b534465e8882615bfb0d4f0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"ee02b7d1\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fs</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">require</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'fs'</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sizeBuf</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Buffer</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">alloc</span>(<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">8</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fd</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fs</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">openSync</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'./project.asar'</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fs</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">readSync</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fd</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sizeBuf</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">8</span>, <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// fs.readSync(fd, buffer, offset, length, position)</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// position 指定从那个地方开始读，如果是 null，就会从文件内置的 position 中读取，并且更新 更新 position</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// sizeBuff 保存了文件头的大小，需要通过 chromium-pickle-js 读取前 32 位无符号整型</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pickle</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">require</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'chromium-pickle-js'</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sizePickle</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pickle</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createFromBuffer</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sizeBuf</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headerSize</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sizePickle</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createIterator</span>().<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">readUInt32</span>()\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// headerSize: 120</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headerBuf</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Buffer</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">alloc</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headerSize</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// headerBuf.length: 120</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fs</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">readSync</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fd</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headerBuf</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headerSize</span>, <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headerPickle</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pickle</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createFromBuffer</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headerBuf</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">header</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headerPickle</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createIterator</span>().<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">readString</span>()\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fs</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">closeSync</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fd</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headInfo</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">header</span>: <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">JSON</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">parse</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">header</span>),\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headerSize</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">console</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">JSON</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stringify</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headInfo</span>, <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2</span>))</span></span></pre></div></div></div><p data-lake-id=\"38894ec3eda4e8285b517ac0735625e4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"40605b2dcf7d06a0e074dce7a300cb6a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">最后就会生成跟上面一样的文件结构：</p><p data-lake-id=\"41e9e3971496f2853b50c2e08f673898\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"d9eafe59-1\" class=\"\" data-language=\"json\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"header\"</span>: {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"files\"</span>: {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"child-dir\"</span>: {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"files\"</span>: {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"index.js\"</span>: {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"size\"</span>: <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">27</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"offset\"</span>: <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"0\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      },\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"README.md\"</span>: {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"size\"</span>: <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">13</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"offset\"</span>: <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"27\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  },\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-string cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"headerSize\"</span>: <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">120</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"8f8aec4d8f17cf487c6c6fa84afd9570\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"1f084798\" data-lake-id=\"961a69956d664a8b5b718218abd50b32\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">文件读取</h2><p data-lake-id=\"669bf095f3fc77e43ecee27930ed671b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c69c1cef843bd65c3dbae21e2ee16c2e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">下面来试试读取其中的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">index.js</code> 文件，先指定一个路径 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">child-dir/index.js</code>。定位到文件大小 27bytes，偏移量为 0。</p><p data-lake-id=\"b8652c438253e710d96da64d46a29064\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"26d3db7d\" class=\"\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fileInfo</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">size</span>: <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">27</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">offset</span>: <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">buffer</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Buffer</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">alloc</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fileInfo</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">size</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fd2</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fs</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">openSync</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'./project.asar'</span>, <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'r'</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">offset</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">8</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headInfo</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headerSize</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">parseInt</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fileInfo</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">offset</span>) <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// offset: 120</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fs</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">readSync</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fd2</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">buffer</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fileInfo</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">size</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">offset</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fs</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">closeSync</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fd2</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">console</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'file content:'</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">buffer</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toString</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'utf8'</span>))\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// file content: console.log('hello world')</span></span></span></pre></div></div></div><p data-lake-id=\"ec672898544662157a1176eabd37b028\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d01877d5ad898f7db228d18f9f8c0414\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">看来可以读取到文件内容了。</p><p data-lake-id=\"0deb88be2a57be13c5fddb2e70492520\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"12f1d7ef\" data-lake-id=\"84f7c2b1fc89f11ede1d8117f0465e4f\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">结束</h2><p data-lake-id=\"a2397d33dc1adc397aca1fc624620baa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"7b5482ec8f308cd6826130b7a76c9193\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">其实可以直接通过编辑器打开 project.asar 文件，里面基本就是没有压缩的文件，是一个很简单的单文件档案。</p><p data-lake-id=\"148a0e068c389b0508067f89d000b2b4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"d17a0f0b\" data-lake-id=\"a40a5f2f18bcb0858c447f0b763d0c64\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">参考</h2><p data-lake-id=\"d721d8c24dc80d515d52700d69889096\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"44da229fe9ddb614b24200ba56b27d7d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">文件中的代码都是改编自 asar 原来的代码，有兴趣也可以看看：</p><p data-lake-id=\"f67053bd2f1926ce194225c8a64f1ac0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"719ffa89eda3dab91b05411418558aef\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"cfe78e8c617daf7883954f506c29c75b\"><a href=\"https://github.com/electron/asar\" target=\"_blank\">https://github.com/electron/asar</a></li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"0e16fc38a99ef02070669ce4f9ffc138\"><br /></p><p data-lake-id=\"d8fee65b01f323723df90b82ac7d0c83\">这是一个在 Electron 中常用于把多个文件打包到一个 asar 文件的文件归档格式。缩写简单可以理解为 A Simple Archive，类似于 tar 或者 zip 这种格式。asar 文件简单的包含三个部分，第一部分占 8 bytes 描述文件头的长度，第二部分是一个 json 文件格式，描述包含了哪些文件，第三部分是文件二进制的排列。</p><p data-lake-id=\"c3ff544e93bffe4c0540596770bd1c17\"><br /></p><p data-lake-id=\"13891872c3226c4937456e28045831ef\">下面是一个asar 文件头的 json 文件信息，通过这种格式信息，能完整的分析出有哪些文件和文件的目录结构:</p><p data-lake-id=\"9473a88a364ac7ba846c32873eadbb9c\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22d9eafe59%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22header%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22files%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%5C%22child-dir%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%5C%22files%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%5C%22index.js%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%22size%5C%22%3A%2027%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%22offset%5C%22%3A%20%5C%220%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20%5C%22README.md%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%5C%22size%5C%22%3A%2013%2C%5Cn%20%20%20%20%20%20%20%20%5C%22offset%5C%22%3A%20%5C%2227%5C%22%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D%2C%5Cn%20%20%5C%22headerSize%5C%22%3A%20120%5Cn%7D%22%2C%22mode%22%3A%22json%22%7D\"></card><p data-lake-id=\"02c8733f095b2d473db60170a51d1022\"><br /></p><p data-lake-id=\"5921591e8de52faa2ac731813162142c\">下面来分析一个如何从 asar 中读取一个文件。</p><p data-lake-id=\"234cb58cc74ee871e275b3a8074a1125\"><br /></p><h2 id=\"cace1d67\" data-lake-id=\"45b107674f1aa4c42fcae1ec24328b76\">前置环境</h2><p data-lake-id=\"e518e69cafa80a004194b122dd404b7a\"><br /></p><p data-lake-id=\"06ddee8da93bc3b9235bacd84ced97f1\">做出一个类似这样的文件结构：</p><p data-lake-id=\"8fedcef3866203adf3426b1ee68759d0\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22bbf08537%22%2C%22code%22%3A%22%E2%94%94%E2%94%80%E2%94%80%20project%5Cn%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20README.md%5Cn%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20child-dir%5Cn%20%20%20%20%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20index.js%22%2C%22mode%22%3A%22plain%22%7D\"></card><p data-lake-id=\"576e17fb975f6188cd49c268a669d440\"><br /></p><p data-lake-id=\"6fa224a9cee4dea474183ea310d436d9\">然后执行，就会产生一个 project.asar 的包</p><p data-lake-id=\"aab5831ee5e66456912f10d76a5949bd\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22f5118280%22%2C%22code%22%3A%22npm%20install%20asar%20-g%5Cnasar%20pack%20project%20project.asar%22%2C%22mode%22%3A%22bash%22%7D\"></card><p data-lake-id=\"aa99ff5433f74d4e2896abb1fd3b57b0\"><br /></p><h2 id=\"c38ed022\" data-lake-id=\"f0846dabf0880f589739a878e351ec53\">文件头信息</h2><p data-lake-id=\"3b7d3d212f82face248af63e804f75f2\"><br /></p><p data-lake-id=\"64fe9c43e6299b58047a8387e9801e9c\">可以通过一个 nodejs 脚本代码来获取文件信息：</p><p data-lake-id=\"2a6117358b534465e8882615bfb0d4f0\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22ee02b7d1%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20fs%20%3D%20require('fs')%5Cn%5Cnconst%20sizeBuf%20%3D%20Buffer.alloc(8)%5Cnconst%20fd%20%3D%20fs.openSync('.%2Fproject.asar')%5Cn%5Cnfs.readSync(fd%2C%20sizeBuf%2C%200%2C%208%2C%20null)%5Cn%2F%2F%20fs.readSync(fd%2C%20buffer%2C%20offset%2C%20length%2C%20position)%5Cn%2F%2F%20position%20%E6%8C%87%E5%AE%9A%E4%BB%8E%E9%82%A3%E4%B8%AA%E5%9C%B0%E6%96%B9%E5%BC%80%E5%A7%8B%E8%AF%BB%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%98%AF%20null%EF%BC%8C%E5%B0%B1%E4%BC%9A%E4%BB%8E%E6%96%87%E4%BB%B6%E5%86%85%E7%BD%AE%E7%9A%84%20position%20%E4%B8%AD%E8%AF%BB%E5%8F%96%EF%BC%8C%E5%B9%B6%E4%B8%94%E6%9B%B4%E6%96%B0%20%E6%9B%B4%E6%96%B0%20position%5Cn%5Cn%2F%2F%20sizeBuff%20%E4%BF%9D%E5%AD%98%E4%BA%86%E6%96%87%E4%BB%B6%E5%A4%B4%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%8C%E9%9C%80%E8%A6%81%E9%80%9A%E8%BF%87%20chromium-pickle-js%20%E8%AF%BB%E5%8F%96%E5%89%8D%2032%20%E4%BD%8D%E6%97%A0%E7%AC%A6%E5%8F%B7%E6%95%B4%E5%9E%8B%5Cnconst%20pickle%20%3D%20require('chromium-pickle-js')%5Cn%5Cnconst%20sizePickle%20%3D%20pickle.createFromBuffer(sizeBuf)%5Cnconst%20headerSize%20%3D%20sizePickle.createIterator().readUInt32()%5Cn%2F%2F%20headerSize%3A%20120%5Cn%5Cnconst%20headerBuf%20%3D%20Buffer.alloc(headerSize)%5Cn%2F%2F%20headerBuf.length%3A%20120%5Cn%5Cnfs.readSync(fd%2C%20headerBuf%2C%200%2C%20headerSize%2C%20null)%5Cnconst%20headerPickle%20%3D%20pickle.createFromBuffer(headerBuf)%5Cnconst%20header%20%3D%20headerPickle.createIterator().readString()%5Cnfs.closeSync(fd)%5Cn%5Cnconst%20headInfo%20%3D%20%7B%5Cn%20%20header%3A%20JSON.parse(header)%2C%5Cn%20%20headerSize%2C%5Cn%7D%5Cnconsole.log(JSON.stringify(headInfo%2C%20null%2C%202))%22%7D\"></card><p data-lake-id=\"38894ec3eda4e8285b517ac0735625e4\"><br /></p><p data-lake-id=\"40605b2dcf7d06a0e074dce7a300cb6a\">最后就会生成跟上面一样的文件结构：</p><p data-lake-id=\"41e9e3971496f2853b50c2e08f673898\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22d9eafe59-1%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22header%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22files%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%5C%22child-dir%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%5C%22files%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%5C%22index.js%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%22size%5C%22%3A%2027%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%22offset%5C%22%3A%20%5C%220%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20%5C%22README.md%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%5C%22size%5C%22%3A%2013%2C%5Cn%20%20%20%20%20%20%20%20%5C%22offset%5C%22%3A%20%5C%2227%5C%22%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D%2C%5Cn%20%20%5C%22headerSize%5C%22%3A%20120%5Cn%7D%22%2C%22mode%22%3A%22json%22%7D\"></card><p data-lake-id=\"8f8aec4d8f17cf487c6c6fa84afd9570\"><br /></p><h2 id=\"1f084798\" data-lake-id=\"961a69956d664a8b5b718218abd50b32\">文件读取</h2><p data-lake-id=\"669bf095f3fc77e43ecee27930ed671b\"><br /></p><p data-lake-id=\"c69c1cef843bd65c3dbae21e2ee16c2e\">下面来试试读取其中的 <code>index.js</code> 文件，先指定一个路径 <code>child-dir/index.js</code>。定位到文件大小 27bytes，偏移量为 0。</p><p data-lake-id=\"b8652c438253e710d96da64d46a29064\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2226d3db7d%22%2C%22code%22%3A%22const%20fileInfo%20%3D%20%7B%5Cn%20%20size%3A%2027%2C%5Cn%20%20offset%3A%200%2C%5Cn%7D%5Cn%5Cnconst%20buffer%20%3D%20Buffer.alloc(fileInfo.size)%5Cnconst%20fd2%20%3D%20fs.openSync('.%2Fproject.asar'%2C%20'r')%5Cnconst%20offset%20%3D%208%20%2B%20headInfo.headerSize%20%2B%20parseInt(fileInfo.offset)%20%2F%2F%20offset%3A%20120%5Cnfs.readSync(fd2%2C%20buffer%2C%200%2C%20fileInfo.size%2C%20offset)%5Cnfs.closeSync(fd2)%5Cn%5Cnconsole.log('file%20content%3A'%2C%20buffer.toString('utf8'))%5Cn%2F%2F%20file%20content%3A%20console.log('hello%20world')%22%2C%22mode%22%3A%22javascript%22%7D\"></card><p data-lake-id=\"ec672898544662157a1176eabd37b028\"><br /></p><p data-lake-id=\"d01877d5ad898f7db228d18f9f8c0414\">看来可以读取到文件内容了。</p><p data-lake-id=\"0deb88be2a57be13c5fddb2e70492520\"><br /></p><h2 id=\"12f1d7ef\" data-lake-id=\"84f7c2b1fc89f11ede1d8117f0465e4f\">结束</h2><p data-lake-id=\"a2397d33dc1adc397aca1fc624620baa\"><br /></p><p data-lake-id=\"7b5482ec8f308cd6826130b7a76c9193\">其实可以直接通过编辑器打开 project.asar 文件，里面基本就是没有压缩的文件，是一个很简单的单文件档案。</p><p data-lake-id=\"148a0e068c389b0508067f89d000b2b4\"><br /></p><h2 id=\"d17a0f0b\" data-lake-id=\"a40a5f2f18bcb0858c447f0b763d0c64\">参考</h2><p data-lake-id=\"d721d8c24dc80d515d52700d69889096\"><br /></p><p data-lake-id=\"44da229fe9ddb614b24200ba56b27d7d\">文件中的代码都是改编自 asar 原来的代码，有兴趣也可以看看：</p><p data-lake-id=\"f67053bd2f1926ce194225c8a64f1ac0\"><br /></p><ul data-lake-id=\"719ffa89eda3dab91b05411418558aef\"><li data-lake-id=\"cfe78e8c617daf7883954f506c29c75b\"><a href=\"https://github.com/electron/asar\" target=\"_blank\">https://github.com/electron/asar</a></li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"0e16fc38a99ef02070669ce4f9ffc138\"><br /></p><p data-lake-id=\"d8fee65b01f323723df90b82ac7d0c83\">这是一个在 Electron 中常用于把多个文件打包到一个 asar 文件的文件归档格式。缩写简单可以理解为 A Simple Archive，类似于 tar 或者 zip 这种格式。asar 文件简单的包含三个部分，第一部分占 8 bytes 描述文件头的长度，第二部分是一个 json 文件格式，描述包含了哪些文件，第三部分是文件二进制的排列。</p><p data-lake-id=\"c3ff544e93bffe4c0540596770bd1c17\"><br /></p><p data-lake-id=\"13891872c3226c4937456e28045831ef\">下面是一个asar 文件头的 json 文件信息，通过这种格式信息，能完整的分析出有哪些文件和文件的目录结构:</p><p data-lake-id=\"9473a88a364ac7ba846c32873eadbb9c\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22d9eafe59%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22header%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22files%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%5C%22child-dir%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%5C%22files%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%5C%22index.js%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%22size%5C%22%3A%2027%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%22offset%5C%22%3A%20%5C%220%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20%5C%22README.md%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%5C%22size%5C%22%3A%2013%2C%5Cn%20%20%20%20%20%20%20%20%5C%22offset%5C%22%3A%20%5C%2227%5C%22%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D%2C%5Cn%20%20%5C%22headerSize%5C%22%3A%20120%5Cn%7D%22%2C%22mode%22%3A%22json%22%7D\"></card><p data-lake-id=\"02c8733f095b2d473db60170a51d1022\"><br /></p><p data-lake-id=\"5921591e8de52faa2ac731813162142c\">下面来分析一个如何从 asar 中读取一个文件。</p><p data-lake-id=\"234cb58cc74ee871e275b3a8074a1125\"><br /></p><h2 id=\"cace1d67\" data-lake-id=\"45b107674f1aa4c42fcae1ec24328b76\">前置环境</h2><p data-lake-id=\"e518e69cafa80a004194b122dd404b7a\"><br /></p><p data-lake-id=\"06ddee8da93bc3b9235bacd84ced97f1\">做出一个类似这样的文件结构：</p><p data-lake-id=\"8fedcef3866203adf3426b1ee68759d0\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22bbf08537%22%2C%22code%22%3A%22%E2%94%94%E2%94%80%E2%94%80%20project%5Cn%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20README.md%5Cn%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20child-dir%5Cn%20%20%20%20%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20index.js%22%2C%22mode%22%3A%22plain%22%7D\"></card><p data-lake-id=\"576e17fb975f6188cd49c268a669d440\"><br /></p><p data-lake-id=\"6fa224a9cee4dea474183ea310d436d9\">然后执行，就会产生一个 project.asar 的包</p><p data-lake-id=\"aab5831ee5e66456912f10d76a5949bd\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22f5118280%22%2C%22code%22%3A%22npm%20install%20asar%20-g%5Cnasar%20pack%20project%20project.asar%22%2C%22mode%22%3A%22bash%22%7D\"></card><p data-lake-id=\"aa99ff5433f74d4e2896abb1fd3b57b0\"><br /></p><h2 id=\"c38ed022\" data-lake-id=\"f0846dabf0880f589739a878e351ec53\">文件头信息</h2><p data-lake-id=\"3b7d3d212f82face248af63e804f75f2\"><br /></p><p data-lake-id=\"64fe9c43e6299b58047a8387e9801e9c\">可以通过一个 nodejs 脚本代码来获取文件信息：</p><p data-lake-id=\"2a6117358b534465e8882615bfb0d4f0\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22ee02b7d1%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20fs%20%3D%20require('fs')%5Cn%5Cnconst%20sizeBuf%20%3D%20Buffer.alloc(8)%5Cnconst%20fd%20%3D%20fs.openSync('.%2Fproject.asar')%5Cn%5Cnfs.readSync(fd%2C%20sizeBuf%2C%200%2C%208%2C%20null)%5Cn%2F%2F%20fs.readSync(fd%2C%20buffer%2C%20offset%2C%20length%2C%20position)%5Cn%2F%2F%20position%20%E6%8C%87%E5%AE%9A%E4%BB%8E%E9%82%A3%E4%B8%AA%E5%9C%B0%E6%96%B9%E5%BC%80%E5%A7%8B%E8%AF%BB%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%98%AF%20null%EF%BC%8C%E5%B0%B1%E4%BC%9A%E4%BB%8E%E6%96%87%E4%BB%B6%E5%86%85%E7%BD%AE%E7%9A%84%20position%20%E4%B8%AD%E8%AF%BB%E5%8F%96%EF%BC%8C%E5%B9%B6%E4%B8%94%E6%9B%B4%E6%96%B0%20%E6%9B%B4%E6%96%B0%20position%5Cn%5Cn%2F%2F%20sizeBuff%20%E4%BF%9D%E5%AD%98%E4%BA%86%E6%96%87%E4%BB%B6%E5%A4%B4%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%8C%E9%9C%80%E8%A6%81%E9%80%9A%E8%BF%87%20chromium-pickle-js%20%E8%AF%BB%E5%8F%96%E5%89%8D%2032%20%E4%BD%8D%E6%97%A0%E7%AC%A6%E5%8F%B7%E6%95%B4%E5%9E%8B%5Cnconst%20pickle%20%3D%20require('chromium-pickle-js')%5Cn%5Cnconst%20sizePickle%20%3D%20pickle.createFromBuffer(sizeBuf)%5Cnconst%20headerSize%20%3D%20sizePickle.createIterator().readUInt32()%5Cn%2F%2F%20headerSize%3A%20120%5Cn%5Cnconst%20headerBuf%20%3D%20Buffer.alloc(headerSize)%5Cn%2F%2F%20headerBuf.length%3A%20120%5Cn%5Cnfs.readSync(fd%2C%20headerBuf%2C%200%2C%20headerSize%2C%20null)%5Cnconst%20headerPickle%20%3D%20pickle.createFromBuffer(headerBuf)%5Cnconst%20header%20%3D%20headerPickle.createIterator().readString()%5Cnfs.closeSync(fd)%5Cn%5Cnconst%20headInfo%20%3D%20%7B%5Cn%20%20header%3A%20JSON.parse(header)%2C%5Cn%20%20headerSize%2C%5Cn%7D%5Cnconsole.log(JSON.stringify(headInfo%2C%20null%2C%202))%22%7D\"></card><p data-lake-id=\"38894ec3eda4e8285b517ac0735625e4\"><br /></p><p data-lake-id=\"40605b2dcf7d06a0e074dce7a300cb6a\">最后就会生成跟上面一样的文件结构：</p><p data-lake-id=\"41e9e3971496f2853b50c2e08f673898\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22d9eafe59-1%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22header%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22files%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%5C%22child-dir%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%5C%22files%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%5C%22index.js%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%22size%5C%22%3A%2027%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%22offset%5C%22%3A%20%5C%220%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20%5C%22README.md%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%5C%22size%5C%22%3A%2013%2C%5Cn%20%20%20%20%20%20%20%20%5C%22offset%5C%22%3A%20%5C%2227%5C%22%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D%2C%5Cn%20%20%5C%22headerSize%5C%22%3A%20120%5Cn%7D%22%2C%22mode%22%3A%22json%22%7D\"></card><p data-lake-id=\"8f8aec4d8f17cf487c6c6fa84afd9570\"><br /></p><h2 id=\"1f084798\" data-lake-id=\"961a69956d664a8b5b718218abd50b32\">文件读取</h2><p data-lake-id=\"669bf095f3fc77e43ecee27930ed671b\"><br /></p><p data-lake-id=\"c69c1cef843bd65c3dbae21e2ee16c2e\">下面来试试读取其中的 <code>index.js</code> 文件，先指定一个路径 <code>child-dir/index.js</code>。定位到文件大小 27bytes，偏移量为 0。</p><p data-lake-id=\"b8652c438253e710d96da64d46a29064\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2226d3db7d%22%2C%22code%22%3A%22const%20fileInfo%20%3D%20%7B%5Cn%20%20size%3A%2027%2C%5Cn%20%20offset%3A%200%2C%5Cn%7D%5Cn%5Cnconst%20buffer%20%3D%20Buffer.alloc(fileInfo.size)%5Cnconst%20fd2%20%3D%20fs.openSync('.%2Fproject.asar'%2C%20'r')%5Cnconst%20offset%20%3D%208%20%2B%20headInfo.headerSize%20%2B%20parseInt(fileInfo.offset)%20%2F%2F%20offset%3A%20120%5Cnfs.readSync(fd2%2C%20buffer%2C%200%2C%20fileInfo.size%2C%20offset)%5Cnfs.closeSync(fd2)%5Cn%5Cnconsole.log('file%20content%3A'%2C%20buffer.toString('utf8'))%5Cn%2F%2F%20file%20content%3A%20console.log('hello%20world')%22%2C%22mode%22%3A%22javascript%22%7D\"></card><p data-lake-id=\"ec672898544662157a1176eabd37b028\"><br /></p><p data-lake-id=\"d01877d5ad898f7db228d18f9f8c0414\">看来可以读取到文件内容了。</p><p data-lake-id=\"0deb88be2a57be13c5fddb2e70492520\"><br /></p><h2 id=\"12f1d7ef\" data-lake-id=\"84f7c2b1fc89f11ede1d8117f0465e4f\">结束</h2><p data-lake-id=\"a2397d33dc1adc397aca1fc624620baa\"><br /></p><p data-lake-id=\"7b5482ec8f308cd6826130b7a76c9193\">其实可以直接通过编辑器打开 project.asar 文件，里面基本就是没有压缩的文件，是一个很简单的单文件档案。</p><p data-lake-id=\"148a0e068c389b0508067f89d000b2b4\"><br /></p><h2 id=\"d17a0f0b\" data-lake-id=\"a40a5f2f18bcb0858c447f0b763d0c64\">参考</h2><p data-lake-id=\"d721d8c24dc80d515d52700d69889096\"><br /></p><p data-lake-id=\"44da229fe9ddb614b24200ba56b27d7d\">文件中的代码都是改编自 asar 原来的代码，有兴趣也可以看看：</p><p data-lake-id=\"f67053bd2f1926ce194225c8a64f1ac0\"><br /></p><ul data-lake-id=\"719ffa89eda3dab91b05411418558aef\"><li data-lake-id=\"cfe78e8c617daf7883954f506c29c75b\"><a href=\"https://github.com/electron/asar\" target=\"_blank\">https://github.com/electron/asar</a></li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-01-23T04:53:13.000Z",
    "deleted_at": null,
    "created_at": "2021-01-23T04:52:39.000Z",
    "updated_at": "2021-01-23T04:53:15.000Z",
    "published_at": "2021-01-23T04:53:13.000Z",
    "first_published_at": "2021-01-23T04:53:13.000Z",
    "word_count": 803,
    "cover": null,
    "description": "这是一个在 Electron 中常用于把多个文件打包到一个 asar 文件的文件归档格式。缩写简单可以理解为 A Simple Archive，类似于 tar 或者 zip 这种格式。asar 文件简单的包含三个部分，第一部分占 8 bytes 描述文件头的长度，第二部分是一个 json 文件...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 30593894,
    "slug": "vfiz5q",
    "title": "Vim",
    "book_id": 213435,
    "book": {
      "id": 213435,
      "type": "Book",
      "slug": "blog",
      "name": "Blog",
      "user_id": 120091,
      "description": "开放数据",
      "creator_id": 120091,
      "public": 1,
      "items_count": 8,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-08-06T05:06:41.373Z",
      "updated_at": "2021-08-06T05:06:41.000Z",
      "created_at": "2019-01-31T02:12:32.000Z",
      "namespace": "yantze/blog",
      "user": {
        "id": 120091,
        "type": "User",
        "login": "yantze",
        "name": "yantze",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
        "books_count": 6,
        "public_books_count": 2,
        "followers_count": 0,
        "following_count": 2,
        "created_at": "2018-05-06T11:41:31.000Z",
        "updated_at": "2021-07-19T16:15:37.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 120091,
    "creator": {
      "id": 120091,
      "type": "User",
      "login": "yantze",
      "name": "yantze",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
      "books_count": 6,
      "public_books_count": 2,
      "followers_count": 0,
      "following_count": 2,
      "created_at": "2018-05-06T11:41:31.000Z",
      "updated_at": "2021-07-19T16:15:37.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "VIM 稳定、实用、设计理论化，在自身领域能力极强，强烈的对称观念。<br />\n<br />对于极复杂的大型工程一般使用 IDE，不强求， something else。<br />\n<br />最开始接触VIM的时候，听人说VIM很好，就用了一下VIM，看VIM简陋不堪，所以就搁置了几个月，后来看到了[Ruchee](https://github.com/ruchee/vimrc)的vim配置文档，他的配置简单容易部署，所以后来在几分钟就建好了一个漂亮的vim编辑器的时候，高效编辑，高度灵活，我就喜欢上了这款编辑器。<br />下面是我github上[vim项目](https://github.com/yantze/vimrc)的一部分说明<br />\n\n<a name=\"mC73B\"></a>\n#### shortcut\n\n\n```\nCtrl+P          快速查找当前文件夹下所有子目录的文件,ctrl+j/k上下选择文件\n:ag             查找当前目录下的所有文件的关键字\n,gd             使用YCM的快速查找头文件定义,类似vs中的F12\n,ci             注释当前行(可选中)\n,cm             块注释(可选中)\nkey<Tab>        UltiSnip And YCM 可以自动补全，UltiSnip对py，ycm对c好一些\n                <c-j/k>上下选择下一个瞄准位\n<c-n><c-j/k>    用<c-n>当前选中的行，用<c-j/k>来移动行的位置(vim-multipe-cursors)\n<m-j/k>         用alt/command+j/k移动当前行的位置(功能同上)\n<c-n>           不停的选中<c-n>,可以执行多光标编辑\n                <c-p>回到前一个,<c-x>放弃当前这个光标到下一个\n                其中i,a,I,A可以在insert模式，c,s可以在normal模式，c是清除当前选中的文字\n                有个小bug,就是在多光标选中模式下，要先按i或者a这个键，再按I/A\n,mt             生成每个语言的ctags文件，可以通过ctrl+]跳转和ctrl+t返回\n+/-             +可以扩大选择区域/-相反\n,bb /,bn<type char> 按等于号对其或者自定义符号对齐\n:Sw             当需要root权限保存时，不用重新打开\n:DiffSaved      比较在保存文件之后修改了什么那些内容\n:Man glob       查看linux关于glob的man文档(only linux/mac)\n:Man glob.php   查看从php.net中访问glob的相关语法和示例(only linux/mac)\nK               判断文件类型，自动调用:Man function/command name\n```\n\n\n<a name=\"mV6X0\"></a>\n#### PHP补全\n可以使用Ctrl+x,Ctrl+o来补全内容<br />\n\n<a name=\"q5f8c\"></a>\n### vim学习\n如果是初学者，要学会这几个技巧<br />vim有很多的‘模式’，在normal模式下<br />jkhl: 这四个键分别代表：下上左右<br />按字母i，进入insert插入模式，然后就可以输入文字<br />按ESC键，退出insert进入normal模式<br />退出要先按英文冒号:然后输入q<br />\n<br />这些是基本的规则，如果要熟练的话，需要做一些高级的练习：<br />\n<br />[简明Vim练级攻略](http://coolshell.cn/articles/5426.html)<br />\n<br />[vim游戏](http://vim-adventures.com/)<br />\n\n<a name=\"6yisr\"></a>\n### 一些常用快捷键说明\n\n\n```\n/xxx                    查找xxx字符串\n,ci                     注释选定行(自动识别文件类型后添加注释)\n,n/,p                   切换buffer的标签(因为vim的一个窗口里面有多个buffer)\n                        同时设置了新的快捷键F2/F3对应,n/,p\n10G                     数字10和大写的G，跳到第十行\n\n:s/^/#                  用\"#\"注释当前行 ,\":s/<search>/<replace>\"\n:%s/x/b                 在所有行替换x为b,\":%s/<search>/<replace>\"\n:2,50s/x/b              在2~50行替换x为b\n:.,+3s/x/b              在前行和当前行后面的三行，替换x为b\n:set notextmode         这个可以去掉^M这个符号\n:set pastetoggle        可以解决在linux命令行复制内容的时候，\n                        内容被识别为vim操作和乱序缩进,在我的配置中快捷键为F4\n\nf<char>                 查找当前行的字符\ngb                      go browser，光标下如果是url链接，自动用默认浏览器打开链接，\n                        如果是选中的字符串，就用浏览器搜索, ,gb是另外一个插件提供的同样功能\ngf                      如果光标下是一个文件路径，则可以用vim自动打开这个文件\ngd                      找到光标下的标签定义\nCtrl+Tab/Ctrl+Shift+Tab 切换vim标签\nCtrl+w,v/h              在gvim下创建多窗口\nCtrl+h/j/k/l            在gvim下切换多窗口\n]p                      和p的功能差不多，但是它会自动调整被粘贴的文本的缩进去适应当前代码的位置\nK                       在Man里面查找光标当前所在处的词\nCtrl+X,Ctrl+O           自动补全,ycm占用Ctrl+n/p\nzz                      把当前行移到屏幕中间\n```\n\n\n<a name=\"FQOax\"></a>\n### 一些不常用但是实用的设置\n\n\n```\n:set display=uhex       这个是用来查看^@这种不可显示的字符，自动转换这些字符为hex进制\n                        也可以ga查看当前光标的进制\n,16                     转换当前文件为16进制，,r16为恢复，只有十六进制部分修改才有用\n:vert command           垂直打开command中的命令,示例 :vert h manpageview\n```\n\n\n<a name=\"XyBgI\"></a>\n#### Tips\n\n\n```\nc/c++/objc/objc++   可以使用YCM\n路径补全            可以使用YCM\n光标定位            <c-o/i>上下选择前一次后一次光标位.\n各个语言的补全      看~/.vim/snippets\nctags               可以自行在c/php等头文件建立ctags文件\n                    c比如/usr/local/include, php比如pear的包管理中\n```\n\n\n<a name=\"J23OZ\"></a>\n#### Snip\n一旦你输入下面的字符，按Tab键自动补全<br />\n\n```\n#!\nclass\nhtml5\n```\n\n\n<a name=\"e3b16bd9\"></a>\n#### leader和buffer\n\n<br />leader默认是一个按钮，指的是反斜杠''，不过我在配置中设置成了',',减少小指的负担。<br />\n<br />buffer其实就是你当前下面的buffer而已。<br />\n<br />当你了解到了基本的使用方法后，你可以读看看我在.vimrc中的文档，里面有很多详细的技巧，熟悉后能和sublime和notepad++一样顺手。<br />\n<br />当然_vimrc.bundles这个文件里面是需要加载的插件，里面有介绍每个插件是拿来干嘛的，也可以了解一下。<br />\n<br />我之前学习vim的时候，收集到的一些资料，这次重新复习了里面的内容，整理了一下发布了出来，就把它当成中级vim的入门手册吧<br />\n<br />[下载地址](https://github.com/yantze/vimrc/blob/master/VIMdoc.md)。<br />\n\n<a name=\"c59nx\"></a>\n### Thanks\n\n<br />这份vim配置的所以完成，会如此热爱vim，是看到了ruchee的vimrc的配置,其完善的配置让我感觉vim是如此的简单<br />\n<br />[ruchee](https://github.com/ruchee/vimrc)<br />\n<br />我也参考了很多的vim配置:<br />\n<br />[vimfiles](https://github.com/coderhwz/vimfiles)<br />\n<br />[dotfiles](https://github.com/luin/dotfiles)<br />\n<br />[vimrc](https://github.com/rhyzx/vimrc)<br />\n<br />前段时间找到了vim的集成配置，功很强大<br />\n<br />[The Ultimate Vim Distribution](http://vim.spf13.com/)<br />\n<br />初学教程<br />\n<br />[Learn Vimscript the Hard Way](http://learnvimscriptthehardway.stevelosh.com/)<br />\n<br />[为什么Vim使用HJKL键作为方向键](http://www.cnbeta.com/articles/185694.htm)\n",
    "body_draft": "VIM 稳定、实用、设计理论化，在自身领域能力极强，强烈的对称观念。<br />\n<br />对于极复杂的大型工程一般使用 IDE，不强求， something else。<br />\n<br />最开始接触VIM的时候，听人说VIM很好，就用了一下VIM，看VIM简陋不堪，所以就搁置了几个月，后来看到了[Ruchee](https://github.com/ruchee/vimrc)的vim配置文档，他的配置简单容易部署，所以后来在几分钟就建好了一个漂亮的vim编辑器的时候，高效编辑，高度灵活，我就喜欢上了这款编辑器。<br />下面是我github上[vim项目](https://github.com/yantze/vimrc)的一部分说明<br />\n\n<a name=\"mC73B\"></a>\n#### shortcut\n\n\n```\nCtrl+P          快速查找当前文件夹下所有子目录的文件,ctrl+j/k上下选择文件\n:ag             查找当前目录下的所有文件的关键字\n,gd             使用YCM的快速查找头文件定义,类似vs中的F12\n,ci             注释当前行(可选中)\n,cm             块注释(可选中)\nkey<Tab>        UltiSnip And YCM 可以自动补全，UltiSnip对py，ycm对c好一些\n                <c-j/k>上下选择下一个瞄准位\n<c-n><c-j/k>    用<c-n>当前选中的行，用<c-j/k>来移动行的位置(vim-multipe-cursors)\n<m-j/k>         用alt/command+j/k移动当前行的位置(功能同上)\n<c-n>           不停的选中<c-n>,可以执行多光标编辑\n                <c-p>回到前一个,<c-x>放弃当前这个光标到下一个\n                其中i,a,I,A可以在insert模式，c,s可以在normal模式，c是清除当前选中的文字\n                有个小bug,就是在多光标选中模式下，要先按i或者a这个键，再按I/A\n,mt             生成每个语言的ctags文件，可以通过ctrl+]跳转和ctrl+t返回\n+/-             +可以扩大选择区域/-相反\n,bb /,bn<type char> 按等于号对其或者自定义符号对齐\n:Sw             当需要root权限保存时，不用重新打开\n:DiffSaved      比较在保存文件之后修改了什么那些内容\n:Man glob       查看linux关于glob的man文档(only linux/mac)\n:Man glob.php   查看从php.net中访问glob的相关语法和示例(only linux/mac)\nK               判断文件类型，自动调用:Man function/command name\n```\n\n\n<a name=\"mV6X0\"></a>\n#### PHP补全\n可以使用Ctrl+x,Ctrl+o来补全内容<br />\n\n<a name=\"q5f8c\"></a>\n### vim学习\n如果是初学者，要学会这几个技巧<br />vim有很多的‘模式’，在normal模式下<br />jkhl: 这四个键分别代表：下上左右<br />按字母i，进入insert插入模式，然后就可以输入文字<br />按ESC键，退出insert进入normal模式<br />退出要先按英文冒号:然后输入q<br />\n<br />这些是基本的规则，如果要熟练的话，需要做一些高级的练习：<br />\n<br />[简明Vim练级攻略](http://coolshell.cn/articles/5426.html)<br />\n<br />[vim游戏](http://vim-adventures.com/)<br />\n\n<a name=\"6yisr\"></a>\n### 一些常用快捷键说明\n\n\n```\n/xxx                    查找xxx字符串\n,ci                     注释选定行(自动识别文件类型后添加注释)\n,n/,p                   切换buffer的标签(因为vim的一个窗口里面有多个buffer)\n                        同时设置了新的快捷键F2/F3对应,n/,p\n10G                     数字10和大写的G，跳到第十行\n\n:s/^/#                  用\"#\"注释当前行 ,\":s/<search>/<replace>\"\n:%s/x/b                 在所有行替换x为b,\":%s/<search>/<replace>\"\n:2,50s/x/b              在2~50行替换x为b\n:.,+3s/x/b              在前行和当前行后面的三行，替换x为b\n:set notextmode         这个可以去掉^M这个符号\n:set pastetoggle        可以解决在linux命令行复制内容的时候，\n                        内容被识别为vim操作和乱序缩进,在我的配置中快捷键为F4\n\nf<char>                 查找当前行的字符\ngb                      go browser，光标下如果是url链接，自动用默认浏览器打开链接，\n                        如果是选中的字符串，就用浏览器搜索, ,gb是另外一个插件提供的同样功能\ngf                      如果光标下是一个文件路径，则可以用vim自动打开这个文件\ngd                      找到光标下的标签定义\nCtrl+Tab/Ctrl+Shift+Tab 切换vim标签\nCtrl+w,v/h              在gvim下创建多窗口\nCtrl+h/j/k/l            在gvim下切换多窗口\n]p                      和p的功能差不多，但是它会自动调整被粘贴的文本的缩进去适应当前代码的位置\nK                       在Man里面查找光标当前所在处的词\nCtrl+X,Ctrl+O           自动补全,ycm占用Ctrl+n/p\nzz                      把当前行移到屏幕中间\n```\n\n\n<a name=\"FQOax\"></a>\n### 一些不常用但是实用的设置\n\n\n```\n:set display=uhex       这个是用来查看^@这种不可显示的字符，自动转换这些字符为hex进制\n                        也可以ga查看当前光标的进制\n,16                     转换当前文件为16进制，,r16为恢复，只有十六进制部分修改才有用\n:vert command           垂直打开command中的命令,示例 :vert h manpageview\n```\n\n\n<a name=\"XyBgI\"></a>\n#### Tips\n\n\n```\nc/c++/objc/objc++   可以使用YCM\n路径补全            可以使用YCM\n光标定位            <c-o/i>上下选择前一次后一次光标位.\n各个语言的补全      看~/.vim/snippets\nctags               可以自行在c/php等头文件建立ctags文件\n                    c比如/usr/local/include, php比如pear的包管理中\n```\n\n\n<a name=\"J23OZ\"></a>\n#### Snip\n一旦你输入下面的字符，按Tab键自动补全<br />\n\n```\n#!\nclass\nhtml5\n```\n\n\n<a name=\"e3b16bd9\"></a>\n#### leader和buffer\n\n<br />leader默认是一个按钮，指的是反斜杠''，不过我在配置中设置成了',',减少小指的负担。<br />\n<br />buffer其实就是你当前下面的buffer而已。<br />\n<br />当你了解到了基本的使用方法后，你可以读看看我在.vimrc中的文档，里面有很多详细的技巧，熟悉后能和sublime和notepad++一样顺手。<br />\n<br />当然_vimrc.bundles这个文件里面是需要加载的插件，里面有介绍每个插件是拿来干嘛的，也可以了解一下。<br />\n<br />我之前学习vim的时候，收集到的一些资料，这次重新复习了里面的内容，整理了一下发布了出来，就把它当成中级vim的入门手册吧<br />\n<br />[下载地址](https://github.com/yantze/vimrc/blob/master/VIMdoc.md)。<br />\n\n<a name=\"c59nx\"></a>\n### Thanks\n\n<br />这份vim配置的所以完成，会如此热爱vim，是看到了ruchee的vimrc的配置,其完善的配置让我感觉vim是如此的简单<br />\n<br />[ruchee](https://github.com/ruchee/vimrc)<br />\n<br />我也参考了很多的vim配置:<br />\n<br />[vimfiles](https://github.com/coderhwz/vimfiles)<br />\n<br />[dotfiles](https://github.com/luin/dotfiles)<br />\n<br />[vimrc](https://github.com/rhyzx/vimrc)<br />\n<br />前段时间找到了vim的集成配置，功很强大<br />\n<br />[The Ultimate Vim Distribution](http://vim.spf13.com/)<br />\n<br />初学教程<br />\n<br />[Learn Vimscript the Hard Way](http://learnvimscriptthehardway.stevelosh.com/)<br />\n<br />[为什么Vim使用HJKL键作为方向键](http://www.cnbeta.com/articles/185694.htm)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B62%2C0%5D%2C%5B62%2C0%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"8f0e49af74c80cf1bbc9f0158eeb4180\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">VIM 稳定、实用、设计理论化，在自身领域能力极强，强烈的对称观念。</p><p data-lake-id=\"78a21ada88deb5234a862539abf1912e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f947f285f857dbab2bb1f958fd13f355\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">对于极复杂的大型工程一般使用 IDE，不强求， something else。</p><p data-lake-id=\"d94bebe90f857a04e27c4ea6aed1776e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"b26c6ddf79fccf73836e4a47b6157735\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">最开始接触VIM的时候，听人说VIM很好，就用了一下VIM，看VIM简陋不堪，所以就搁置了几个月，后来看到了<a href=\"https://github.com/ruchee/vimrc\" target=\"_blank\">Ruchee</a>的vim配置文档，他的配置简单容易部署，所以后来在几分钟就建好了一个漂亮的vim编辑器的时候，高效编辑，高度灵活，我就喜欢上了这款编辑器。</p><p data-lake-id=\"37b41e23585579b6bc9b129799203147\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">下面是我github上<a href=\"https://github.com/yantze/vimrc\" target=\"_blank\">vim项目</a>的一部分说明</p><p data-lake-id=\"19df3a252e3ca16c0ebfec26abab989a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 data-lake-id=\"0973695489853f1337cf7fef3a2d1873\" id=\"mC73B\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">shortcut</h4><p data-lake-id=\"99ea7f6e98aa34bb10cdf7321e2d6542\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"dcac409d\" class=\"\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Ctrl+P          快速查找当前文件夹下所有子目录的文件,ctrl+j/k上下选择文件\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:ag             查找当前目录下的所有文件的关键字\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,gd             使用YCM的快速查找头文件定义,类似vs中的F12\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,ci             注释当前行(可选中)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,cm             块注释(可选中)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">key&lt;Tab&gt;        UltiSnip And YCM 可以自动补全，UltiSnip对py，ycm对c好一些\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                &lt;c-j/k&gt;上下选择下一个瞄准位\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;c-n&gt;&lt;c-j/k&gt;    用&lt;c-n&gt;当前选中的行，用&lt;c-j/k&gt;来移动行的位置(vim-multipe-cursors)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;m-j/k&gt;         用alt/command+j/k移动当前行的位置(功能同上)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;c-n&gt;           不停的选中&lt;c-n&gt;,可以执行多光标编辑\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                &lt;c-p&gt;回到前一个,&lt;c-x&gt;放弃当前这个光标到下一个\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                其中i,a,I,A可以在insert模式，c,s可以在normal模式，c是清除当前选中的文字\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                有个小bug,就是在多光标选中模式下，要先按i或者a这个键，再按I/A\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,mt             生成每个语言的ctags文件，可以通过ctrl+]跳转和ctrl+t返回\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+/-             +可以扩大选择区域/-相反\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,bb /,bn&lt;type char&gt; 按等于号对其或者自定义符号对齐\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:Sw             当需要root权限保存时，不用重新打开\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:DiffSaved      比较在保存文件之后修改了什么那些内容\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:Man glob       查看linux关于glob的man文档(only linux/mac)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:Man glob.php   查看从php.net中访问glob的相关语法和示例(only linux/mac)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">K               判断文件类型，自动调用:Man function/command name</span></span></pre></div></div></div><p data-lake-id=\"b882e55e6c18ca852298ff1d178a1449\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 data-lake-id=\"6f63c8d2c2b567156f17208b6965c1ab\" id=\"mV6X0\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">PHP补全</h4><p data-lake-id=\"f1954d1e0d9d709472df3e45a252808d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">可以使用Ctrl+x,Ctrl+o来补全内容</p><p data-lake-id=\"43167cd4dfefa1eb376b9c286087575a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"a4780c0f308b9b91bfd3b1c1fb2545c3\" id=\"q5f8c\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">vim学习</h3><p data-lake-id=\"400ca8a1f547f2d77fb96f7a58d54fc2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果是初学者，要学会这几个技巧</p><p data-lake-id=\"d68b036b496a5e6b702a13b8c39113d8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">vim有很多的‘模式’，在normal模式下</p><p data-lake-id=\"63b990c250fa569ddd919610f38f4674\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">jkhl: 这四个键分别代表：下上左右</p><p data-lake-id=\"79b973c40c5db8d730d6a1f89b4002f6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">按字母i，进入insert插入模式，然后就可以输入文字</p><p data-lake-id=\"96c9e834040d8a0ceab71fee846a27e5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">按ESC键，退出insert进入normal模式</p><p data-lake-id=\"a7e6d749d8fd61ad5c4752ee9d1f9317\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">退出要先按英文冒号:然后输入q</p><p data-lake-id=\"a55164b07236c5c9baa96b4c4757d8e9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"aa2c0c2cb0cd4e66d8d23ebf9b16f49d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这些是基本的规则，如果要熟练的话，需要做一些高级的练习：</p><p data-lake-id=\"fac4495193e5c78bd432ff472d0f5e9e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"1836cf29df53a497d0980766c4197f67\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"http://coolshell.cn/articles/5426.html\" target=\"_blank\">简明Vim练级攻略</a></p><p data-lake-id=\"9a8a4236c7d1de9cf6cd7b280a38024f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"bc70f372d2c50c378718b65ad0d7cbac\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"http://vim-adventures.com/\" target=\"_blank\">vim游戏</a></p><p data-lake-id=\"a7e4c5e922b49e898c98fa48e9fee317\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"79a76f308e7ba8bc9f297ba4dd60c861\" id=\"6yisr\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">一些常用快捷键说明</h3><p data-lake-id=\"ef50061ed42a0556a7b10a9050b16c44\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"5c798d98\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/xxx                    查找xxx字符串\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,ci                     注释选定行(自动识别文件类型后添加注释)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,n/,p                   切换buffer的标签(因为vim的一个窗口里面有多个buffer)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                        同时设置了新的快捷键F2/F3对应,n/,p\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">10G                     数字10和大写的G，跳到第十行\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:s/^/#                  用\"#\"注释当前行 ,\":s/&lt;search&gt;/&lt;replace&gt;\"\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:%s/x/b                 在所有行替换x为b,\":%s/&lt;search&gt;/&lt;replace&gt;\"\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:2,50s/x/b              在2~50行替换x为b\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:.,+3s/x/b              在前行和当前行后面的三行，替换x为b\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:set notextmode         这个可以去掉^M这个符号\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:set pastetoggle        可以解决在linux命令行复制内容的时候，\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                        内容被识别为vim操作和乱序缩进,在我的配置中快捷键为F4\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">f&lt;char&gt;                 查找当前行的字符\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">gb                      go browser，光标下如果是url链接，自动用默认浏览器打开链接，\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                        如果是选中的字符串，就用浏览器搜索, ,gb是另外一个插件提供的同样功能\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">gf                      如果光标下是一个文件路径，则可以用vim自动打开这个文件\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">gd                      找到光标下的标签定义\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Ctrl+Tab/Ctrl+Shift+Tab 切换vim标签\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Ctrl+w,v/h              在gvim下创建多窗口\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Ctrl+h/j/k/l            在gvim下切换多窗口\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">]p                      和p的功能差不多，但是它会自动调整被粘贴的文本的缩进去适应当前代码的位置\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">K                       在Man里面查找光标当前所在处的词\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Ctrl+X,Ctrl+O           自动补全,ycm占用Ctrl+n/p\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">zz                      把当前行移到屏幕中间</span></span></pre></div></div></div><p data-lake-id=\"743e523bcc73244cac2c17556cca9953\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"cd68e4d5a3dc6a69409bc31c1ec6a185\" id=\"FQOax\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">一些不常用但是实用的设置</h3><p data-lake-id=\"de05e88613517674717477170f34f519\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"1392bfcf\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:set display=uhex       这个是用来查看^@这种不可显示的字符，自动转换这些字符为hex进制\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                        也可以ga查看当前光标的进制\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,16                     转换当前文件为16进制，,r16为恢复，只有十六进制部分修改才有用\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:vert command           垂直打开command中的命令,示例 :vert h manpageview</span></span></pre></div></div></div><p data-lake-id=\"a33b42f82eab348bfaf7bb9dc16dbd86\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 data-lake-id=\"a224c709dabae717385ae160095354cc\" id=\"XyBgI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">Tips</h4><p data-lake-id=\"fc9233995988a73086f2f7b99f7d1835\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"7be0434f\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">c/c++/objc/objc++   可以使用YCM\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">路径补全            可以使用YCM\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">光标定位            &lt;c-o/i&gt;上下选择前一次后一次光标位.\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">各个语言的补全      看~/.vim/snippets\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ctags               可以自行在c/php等头文件建立ctags文件\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                    c比如/usr/local/include, php比如pear的包管理中</span></span></pre></div></div></div><p data-lake-id=\"9db4fdb0d7d456e20f2ca597ecabc357\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 data-lake-id=\"1ebb80e45c03909167d969c557667308\" id=\"J23OZ\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">Snip</h4><p data-lake-id=\"874211c5bf058c6ac2bde4238e8fce79\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一旦你输入下面的字符，按Tab键自动补全</p><p data-lake-id=\"02ba989ce141293a88c287d875056c76\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"caded67c\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#!\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">class\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">html5</span></span></pre></div></div></div><p data-lake-id=\"2c5fbd35569a818040ca56b5ca8d138f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 id=\"e3b16bd9\" data-lake-id=\"dc2ea719a00799acb4de924765f930fd\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">leader和buffer</h4><p data-lake-id=\"8f7baee39e4707f257b53f77b8073cce\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a62527d6f9f7bb32dbb5a13a8c93dd52\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">leader默认是一个按钮，指的是反斜杠''，不过我在配置中设置成了',',减少小指的负担。</p><p data-lake-id=\"6953fa89d0801118511b1dfb23c8ce11\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d2ff25b82ff6a34be27c63dd10007fc0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">buffer其实就是你当前下面的buffer而已。</p><p data-lake-id=\"5f5231edfde3cfc83238b1649c9b75ae\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"1eeb5426d44f861656c88e34187cb279\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当你了解到了基本的使用方法后，你可以读看看我在.vimrc中的文档，里面有很多详细的技巧，熟悉后能和sublime和notepad++一样顺手。</p><p data-lake-id=\"cb465cb6a75789017cc05716834aa744\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4db8f39ba396bc01e91721bde6f44b47\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当然_vimrc.bundles这个文件里面是需要加载的插件，里面有介绍每个插件是拿来干嘛的，也可以了解一下。</p><p data-lake-id=\"fae86ffb4260d450c9274185cf524bcd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"be99b69ad270861db45249154a05ea29\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我之前学习vim的时候，收集到的一些资料，这次重新复习了里面的内容，整理了一下发布了出来，就把它当成中级vim的入门手册吧</p><p data-lake-id=\"48145dda5a48b8ee13486bbf21e3a77b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9138abfb1260a75754c67277bb779516\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://github.com/yantze/vimrc/blob/master/VIMdoc.md\" target=\"_blank\">下载地址</a>。</p><p data-lake-id=\"08e8a0862a62ec535978935e6cfacbb2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"5c1d61869614a2a6e34740b6fd2b1ed0\" id=\"c59nx\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">Thanks</h3><p data-lake-id=\"71e33a0e1b1d09e92d9a6bab68e43bc4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"cda9edfb7ac7fcc228e50475a1b752bd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这份vim配置的所以完成，会如此热爱vim，是看到了ruchee的vimrc的配置,其完善的配置让我感觉vim是如此的简单</p><p data-lake-id=\"6d488e420898fe40b289f282dde1e97b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c88965397fe5aaf7d67a4d1a45f29aa3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://github.com/ruchee/vimrc\" target=\"_blank\">ruchee</a></p><p data-lake-id=\"4cb8865dbc7341417a54d8b6680b6c23\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"19851ea62b100c134855e07ba8d1a82d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我也参考了很多的vim配置:</p><p data-lake-id=\"8fdb83d93e2d55fb7aa99d5307658cc0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"183738970b81c801035a07d8f2a92a32\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://github.com/coderhwz/vimfiles\" target=\"_blank\">vimfiles</a></p><p data-lake-id=\"937521e8fd933727d340ef77136507f1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6b0d2a163d7f275b705dbec293b2edcb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://github.com/luin/dotfiles\" target=\"_blank\">dotfiles</a></p><p data-lake-id=\"14fb355cac3fca27b83fceb913aef998\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4e6cfdf38dc85517e25d6a96eb8983c1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://github.com/rhyzx/vimrc\" target=\"_blank\">vimrc</a></p><p data-lake-id=\"189821aa2b38ee39f7cc48575b3da709\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"0237eb8cd76cfee297b73ba427b09d8e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">前段时间找到了vim的集成配置，功很强大</p><p data-lake-id=\"f7fa99385fb95949ecd467a16570bc02\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"60c7cecde79540976ab1a2b7a7afccb2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"http://vim.spf13.com/\" target=\"_blank\">The Ultimate Vim Distribution</a></p><p data-lake-id=\"f8f0382af7015d3a81e92c7656b090f4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"bf57f31ec8191c524e11dd8a014fc7c7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">初学教程</p><p data-lake-id=\"06844a19248e1c46bb47073634ebffea\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d97f245dacfd55589fc485407d5e0fef\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"http://learnvimscriptthehardway.stevelosh.com/\" target=\"_blank\">Learn Vimscript the Hard Way</a></p><p data-lake-id=\"b6e0c2ee3ce12a419cef6bb088d7fae1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"3e662b0f3e9a30e37800c63f01fbe33b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"http://www.cnbeta.com/articles/185694.htm\" target=\"_blank\">为什么Vim使用HJKL键作为方向键</a></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"8f0e49af74c80cf1bbc9f0158eeb4180\">VIM 稳定、实用、设计理论化，在自身领域能力极强，强烈的对称观念。</p><p data-lake-id=\"78a21ada88deb5234a862539abf1912e\"><br /></p><p data-lake-id=\"f947f285f857dbab2bb1f958fd13f355\">对于极复杂的大型工程一般使用 IDE，不强求， something else。</p><p data-lake-id=\"d94bebe90f857a04e27c4ea6aed1776e\"><br /></p><p data-lake-id=\"b26c6ddf79fccf73836e4a47b6157735\">最开始接触VIM的时候，听人说VIM很好，就用了一下VIM，看VIM简陋不堪，所以就搁置了几个月，后来看到了<a href=\"https://github.com/ruchee/vimrc\" target=\"_blank\">Ruchee</a>的vim配置文档，他的配置简单容易部署，所以后来在几分钟就建好了一个漂亮的vim编辑器的时候，高效编辑，高度灵活，我就喜欢上了这款编辑器。</p><p data-lake-id=\"37b41e23585579b6bc9b129799203147\">下面是我github上<a href=\"https://github.com/yantze/vimrc\" target=\"_blank\">vim项目</a>的一部分说明</p><p data-lake-id=\"19df3a252e3ca16c0ebfec26abab989a\"><br /></p><h4 data-lake-id=\"0973695489853f1337cf7fef3a2d1873\" id=\"mC73B\">shortcut</h4><p data-lake-id=\"99ea7f6e98aa34bb10cdf7321e2d6542\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22dcac409d%22%2C%22code%22%3A%22Ctrl%2BP%20%20%20%20%20%20%20%20%20%20%E5%BF%AB%E9%80%9F%E6%9F%A5%E6%89%BE%E5%BD%93%E5%89%8D%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E6%89%80%E6%9C%89%E5%AD%90%E7%9B%AE%E5%BD%95%E7%9A%84%E6%96%87%E4%BB%B6%2Cctrl%2Bj%2Fk%E4%B8%8A%E4%B8%8B%E9%80%89%E6%8B%A9%E6%96%87%E4%BB%B6%5Cn%3Aag%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%9F%A5%E6%89%BE%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%5Cn%2Cgd%20%20%20%20%20%20%20%20%20%20%20%20%20%E4%BD%BF%E7%94%A8YCM%E7%9A%84%E5%BF%AB%E9%80%9F%E6%9F%A5%E6%89%BE%E5%A4%B4%E6%96%87%E4%BB%B6%E5%AE%9A%E4%B9%89%2C%E7%B1%BB%E4%BC%BCvs%E4%B8%AD%E7%9A%84F12%5Cn%2Cci%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%B3%A8%E9%87%8A%E5%BD%93%E5%89%8D%E8%A1%8C(%E5%8F%AF%E9%80%89%E4%B8%AD)%5Cn%2Ccm%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%9D%97%E6%B3%A8%E9%87%8A(%E5%8F%AF%E9%80%89%E4%B8%AD)%5Cnkey%3CTab%3E%20%20%20%20%20%20%20%20UltiSnip%20And%20YCM%20%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8%EF%BC%8CUltiSnip%E5%AF%B9py%EF%BC%8Cycm%E5%AF%B9c%E5%A5%BD%E4%B8%80%E4%BA%9B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cc-j%2Fk%3E%E4%B8%8A%E4%B8%8B%E9%80%89%E6%8B%A9%E4%B8%8B%E4%B8%80%E4%B8%AA%E7%9E%84%E5%87%86%E4%BD%8D%5Cn%3Cc-n%3E%3Cc-j%2Fk%3E%20%20%20%20%E7%94%A8%3Cc-n%3E%E5%BD%93%E5%89%8D%E9%80%89%E4%B8%AD%E7%9A%84%E8%A1%8C%EF%BC%8C%E7%94%A8%3Cc-j%2Fk%3E%E6%9D%A5%E7%A7%BB%E5%8A%A8%E8%A1%8C%E7%9A%84%E4%BD%8D%E7%BD%AE(vim-multipe-cursors)%5Cn%3Cm-j%2Fk%3E%20%20%20%20%20%20%20%20%20%E7%94%A8alt%2Fcommand%2Bj%2Fk%E7%A7%BB%E5%8A%A8%E5%BD%93%E5%89%8D%E8%A1%8C%E7%9A%84%E4%BD%8D%E7%BD%AE(%E5%8A%9F%E8%83%BD%E5%90%8C%E4%B8%8A)%5Cn%3Cc-n%3E%20%20%20%20%20%20%20%20%20%20%20%E4%B8%8D%E5%81%9C%E7%9A%84%E9%80%89%E4%B8%AD%3Cc-n%3E%2C%E5%8F%AF%E4%BB%A5%E6%89%A7%E8%A1%8C%E5%A4%9A%E5%85%89%E6%A0%87%E7%BC%96%E8%BE%91%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cc-p%3E%E5%9B%9E%E5%88%B0%E5%89%8D%E4%B8%80%E4%B8%AA%2C%3Cc-x%3E%E6%94%BE%E5%BC%83%E5%BD%93%E5%89%8D%E8%BF%99%E4%B8%AA%E5%85%89%E6%A0%87%E5%88%B0%E4%B8%8B%E4%B8%80%E4%B8%AA%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%85%B6%E4%B8%ADi%2Ca%2CI%2CA%E5%8F%AF%E4%BB%A5%E5%9C%A8insert%E6%A8%A1%E5%BC%8F%EF%BC%8Cc%2Cs%E5%8F%AF%E4%BB%A5%E5%9C%A8normal%E6%A8%A1%E5%BC%8F%EF%BC%8Cc%E6%98%AF%E6%B8%85%E9%99%A4%E5%BD%93%E5%89%8D%E9%80%89%E4%B8%AD%E7%9A%84%E6%96%87%E5%AD%97%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%9C%89%E4%B8%AA%E5%B0%8Fbug%2C%E5%B0%B1%E6%98%AF%E5%9C%A8%E5%A4%9A%E5%85%89%E6%A0%87%E9%80%89%E4%B8%AD%E6%A8%A1%E5%BC%8F%E4%B8%8B%EF%BC%8C%E8%A6%81%E5%85%88%E6%8C%89i%E6%88%96%E8%80%85a%E8%BF%99%E4%B8%AA%E9%94%AE%EF%BC%8C%E5%86%8D%E6%8C%89I%2FA%5Cn%2Cmt%20%20%20%20%20%20%20%20%20%20%20%20%20%E7%94%9F%E6%88%90%E6%AF%8F%E4%B8%AA%E8%AF%AD%E8%A8%80%E7%9A%84ctags%E6%96%87%E4%BB%B6%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87ctrl%2B%5D%E8%B7%B3%E8%BD%AC%E5%92%8Cctrl%2Bt%E8%BF%94%E5%9B%9E%5Cn%2B%2F-%20%20%20%20%20%20%20%20%20%20%20%20%20%2B%E5%8F%AF%E4%BB%A5%E6%89%A9%E5%A4%A7%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F%2F-%E7%9B%B8%E5%8F%8D%5Cn%2Cbb%20%2F%2Cbn%3Ctype%20char%3E%20%E6%8C%89%E7%AD%89%E4%BA%8E%E5%8F%B7%E5%AF%B9%E5%85%B6%E6%88%96%E8%80%85%E8%87%AA%E5%AE%9A%E4%B9%89%E7%AC%A6%E5%8F%B7%E5%AF%B9%E9%BD%90%5Cn%3ASw%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%BD%93%E9%9C%80%E8%A6%81root%E6%9D%83%E9%99%90%E4%BF%9D%E5%AD%98%E6%97%B6%EF%BC%8C%E4%B8%8D%E7%94%A8%E9%87%8D%E6%96%B0%E6%89%93%E5%BC%80%5Cn%3ADiffSaved%20%20%20%20%20%20%E6%AF%94%E8%BE%83%E5%9C%A8%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6%E4%B9%8B%E5%90%8E%E4%BF%AE%E6%94%B9%E4%BA%86%E4%BB%80%E4%B9%88%E9%82%A3%E4%BA%9B%E5%86%85%E5%AE%B9%5Cn%3AMan%20glob%20%20%20%20%20%20%20%E6%9F%A5%E7%9C%8Blinux%E5%85%B3%E4%BA%8Eglob%E7%9A%84man%E6%96%87%E6%A1%A3(only%20linux%2Fmac)%5Cn%3AMan%20glob.php%20%20%20%E6%9F%A5%E7%9C%8B%E4%BB%8Ephp.net%E4%B8%AD%E8%AE%BF%E9%97%AEglob%E7%9A%84%E7%9B%B8%E5%85%B3%E8%AF%AD%E6%B3%95%E5%92%8C%E7%A4%BA%E4%BE%8B(only%20linux%2Fmac)%5CnK%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%88%A4%E6%96%AD%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%87%AA%E5%8A%A8%E8%B0%83%E7%94%A8%3AMan%20function%2Fcommand%20name%22%2C%22mode%22%3A%22plain%22%7D\"></card><p data-lake-id=\"b882e55e6c18ca852298ff1d178a1449\"><br /></p><h4 data-lake-id=\"6f63c8d2c2b567156f17208b6965c1ab\" id=\"mV6X0\">PHP补全</h4><p data-lake-id=\"f1954d1e0d9d709472df3e45a252808d\">可以使用Ctrl+x,Ctrl+o来补全内容</p><p data-lake-id=\"43167cd4dfefa1eb376b9c286087575a\"><br /></p><h3 data-lake-id=\"a4780c0f308b9b91bfd3b1c1fb2545c3\" id=\"q5f8c\">vim学习</h3><p data-lake-id=\"400ca8a1f547f2d77fb96f7a58d54fc2\">如果是初学者，要学会这几个技巧</p><p data-lake-id=\"d68b036b496a5e6b702a13b8c39113d8\">vim有很多的‘模式’，在normal模式下</p><p data-lake-id=\"63b990c250fa569ddd919610f38f4674\">jkhl: 这四个键分别代表：下上左右</p><p data-lake-id=\"79b973c40c5db8d730d6a1f89b4002f6\">按字母i，进入insert插入模式，然后就可以输入文字</p><p data-lake-id=\"96c9e834040d8a0ceab71fee846a27e5\">按ESC键，退出insert进入normal模式</p><p data-lake-id=\"a7e6d749d8fd61ad5c4752ee9d1f9317\">退出要先按英文冒号:然后输入q</p><p data-lake-id=\"a55164b07236c5c9baa96b4c4757d8e9\"><br /></p><p data-lake-id=\"aa2c0c2cb0cd4e66d8d23ebf9b16f49d\">这些是基本的规则，如果要熟练的话，需要做一些高级的练习：</p><p data-lake-id=\"fac4495193e5c78bd432ff472d0f5e9e\"><br /></p><p data-lake-id=\"1836cf29df53a497d0980766c4197f67\"><a href=\"http://coolshell.cn/articles/5426.html\" target=\"_blank\">简明Vim练级攻略</a></p><p data-lake-id=\"9a8a4236c7d1de9cf6cd7b280a38024f\"><br /></p><p data-lake-id=\"bc70f372d2c50c378718b65ad0d7cbac\"><a href=\"http://vim-adventures.com/\" target=\"_blank\">vim游戏</a></p><p data-lake-id=\"a7e4c5e922b49e898c98fa48e9fee317\"><br /></p><h3 data-lake-id=\"79a76f308e7ba8bc9f297ba4dd60c861\" id=\"6yisr\">一些常用快捷键说明</h3><p data-lake-id=\"ef50061ed42a0556a7b10a9050b16c44\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%225c798d98%22%2C%22code%22%3A%22%2Fxxx%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%9F%A5%E6%89%BExxx%E5%AD%97%E7%AC%A6%E4%B8%B2%5Cn%2Cci%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%B3%A8%E9%87%8A%E9%80%89%E5%AE%9A%E8%A1%8C(%E8%87%AA%E5%8A%A8%E8%AF%86%E5%88%AB%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E5%90%8E%E6%B7%BB%E5%8A%A0%E6%B3%A8%E9%87%8A)%5Cn%2Cn%2F%2Cp%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%88%87%E6%8D%A2buffer%E7%9A%84%E6%A0%87%E7%AD%BE(%E5%9B%A0%E4%B8%BAvim%E7%9A%84%E4%B8%80%E4%B8%AA%E7%AA%97%E5%8F%A3%E9%87%8C%E9%9D%A2%E6%9C%89%E5%A4%9A%E4%B8%AAbuffer)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%90%8C%E6%97%B6%E8%AE%BE%E7%BD%AE%E4%BA%86%E6%96%B0%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AEF2%2FF3%E5%AF%B9%E5%BA%94%2Cn%2F%2Cp%5Cn10G%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%95%B0%E5%AD%9710%E5%92%8C%E5%A4%A7%E5%86%99%E7%9A%84G%EF%BC%8C%E8%B7%B3%E5%88%B0%E7%AC%AC%E5%8D%81%E8%A1%8C%5Cn%5Cn%3As%2F%5E%2F%23%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E7%94%A8%5C%22%23%5C%22%E6%B3%A8%E9%87%8A%E5%BD%93%E5%89%8D%E8%A1%8C%20%2C%5C%22%3As%2F%3Csearch%3E%2F%3Creplace%3E%5C%22%5Cn%3A%25s%2Fx%2Fb%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%9C%A8%E6%89%80%E6%9C%89%E8%A1%8C%E6%9B%BF%E6%8D%A2x%E4%B8%BAb%2C%5C%22%3A%25s%2F%3Csearch%3E%2F%3Creplace%3E%5C%22%5Cn%3A2%2C50s%2Fx%2Fb%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%9C%A82~50%E8%A1%8C%E6%9B%BF%E6%8D%A2x%E4%B8%BAb%5Cn%3A.%2C%2B3s%2Fx%2Fb%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%9C%A8%E5%89%8D%E8%A1%8C%E5%92%8C%E5%BD%93%E5%89%8D%E8%A1%8C%E5%90%8E%E9%9D%A2%E7%9A%84%E4%B8%89%E8%A1%8C%EF%BC%8C%E6%9B%BF%E6%8D%A2x%E4%B8%BAb%5Cn%3Aset%20notextmode%20%20%20%20%20%20%20%20%20%E8%BF%99%E4%B8%AA%E5%8F%AF%E4%BB%A5%E5%8E%BB%E6%8E%89%5EM%E8%BF%99%E4%B8%AA%E7%AC%A6%E5%8F%B7%5Cn%3Aset%20pastetoggle%20%20%20%20%20%20%20%20%E5%8F%AF%E4%BB%A5%E8%A7%A3%E5%86%B3%E5%9C%A8linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%A4%8D%E5%88%B6%E5%86%85%E5%AE%B9%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%86%85%E5%AE%B9%E8%A2%AB%E8%AF%86%E5%88%AB%E4%B8%BAvim%E6%93%8D%E4%BD%9C%E5%92%8C%E4%B9%B1%E5%BA%8F%E7%BC%A9%E8%BF%9B%2C%E5%9C%A8%E6%88%91%E7%9A%84%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%B8%BAF4%5Cn%5Cnf%3Cchar%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%9F%A5%E6%89%BE%E5%BD%93%E5%89%8D%E8%A1%8C%E7%9A%84%E5%AD%97%E7%AC%A6%5Cngb%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20go%20browser%EF%BC%8C%E5%85%89%E6%A0%87%E4%B8%8B%E5%A6%82%E6%9E%9C%E6%98%AFurl%E9%93%BE%E6%8E%A5%EF%BC%8C%E8%87%AA%E5%8A%A8%E7%94%A8%E9%BB%98%E8%AE%A4%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%93%E5%BC%80%E9%93%BE%E6%8E%A5%EF%BC%8C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%A6%82%E6%9E%9C%E6%98%AF%E9%80%89%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%B0%B1%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E6%90%9C%E7%B4%A2%2C%20%2Cgb%E6%98%AF%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E6%8F%92%E4%BB%B6%E6%8F%90%E4%BE%9B%E7%9A%84%E5%90%8C%E6%A0%B7%E5%8A%9F%E8%83%BD%5Cngf%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%A6%82%E6%9E%9C%E5%85%89%E6%A0%87%E4%B8%8B%E6%98%AF%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%EF%BC%8C%E5%88%99%E5%8F%AF%E4%BB%A5%E7%94%A8vim%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E8%BF%99%E4%B8%AA%E6%96%87%E4%BB%B6%5Cngd%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%89%BE%E5%88%B0%E5%85%89%E6%A0%87%E4%B8%8B%E7%9A%84%E6%A0%87%E7%AD%BE%E5%AE%9A%E4%B9%89%5CnCtrl%2BTab%2FCtrl%2BShift%2BTab%20%E5%88%87%E6%8D%A2vim%E6%A0%87%E7%AD%BE%5CnCtrl%2Bw%2Cv%2Fh%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%9C%A8gvim%E4%B8%8B%E5%88%9B%E5%BB%BA%E5%A4%9A%E7%AA%97%E5%8F%A3%5CnCtrl%2Bh%2Fj%2Fk%2Fl%20%20%20%20%20%20%20%20%20%20%20%20%E5%9C%A8gvim%E4%B8%8B%E5%88%87%E6%8D%A2%E5%A4%9A%E7%AA%97%E5%8F%A3%5Cn%5Dp%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%92%8Cp%E7%9A%84%E5%8A%9F%E8%83%BD%E5%B7%AE%E4%B8%8D%E5%A4%9A%EF%BC%8C%E4%BD%86%E6%98%AF%E5%AE%83%E4%BC%9A%E8%87%AA%E5%8A%A8%E8%B0%83%E6%95%B4%E8%A2%AB%E7%B2%98%E8%B4%B4%E7%9A%84%E6%96%87%E6%9C%AC%E7%9A%84%E7%BC%A9%E8%BF%9B%E5%8E%BB%E9%80%82%E5%BA%94%E5%BD%93%E5%89%8D%E4%BB%A3%E7%A0%81%E7%9A%84%E4%BD%8D%E7%BD%AE%5CnK%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%9C%A8Man%E9%87%8C%E9%9D%A2%E6%9F%A5%E6%89%BE%E5%85%89%E6%A0%87%E5%BD%93%E5%89%8D%E6%89%80%E5%9C%A8%E5%A4%84%E7%9A%84%E8%AF%8D%5CnCtrl%2BX%2CCtrl%2BO%20%20%20%20%20%20%20%20%20%20%20%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8%2Cycm%E5%8D%A0%E7%94%A8Ctrl%2Bn%2Fp%5Cnzz%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%8A%8A%E5%BD%93%E5%89%8D%E8%A1%8C%E7%A7%BB%E5%88%B0%E5%B1%8F%E5%B9%95%E4%B8%AD%E9%97%B4%22%7D\"></card><p data-lake-id=\"743e523bcc73244cac2c17556cca9953\"><br /></p><h3 data-lake-id=\"cd68e4d5a3dc6a69409bc31c1ec6a185\" id=\"FQOax\">一些不常用但是实用的设置</h3><p data-lake-id=\"de05e88613517674717477170f34f519\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%221392bfcf%22%2C%22code%22%3A%22%3Aset%20display%3Duhex%20%20%20%20%20%20%20%E8%BF%99%E4%B8%AA%E6%98%AF%E7%94%A8%E6%9D%A5%E6%9F%A5%E7%9C%8B%5E%40%E8%BF%99%E7%A7%8D%E4%B8%8D%E5%8F%AF%E6%98%BE%E7%A4%BA%E7%9A%84%E5%AD%97%E7%AC%A6%EF%BC%8C%E8%87%AA%E5%8A%A8%E8%BD%AC%E6%8D%A2%E8%BF%99%E4%BA%9B%E5%AD%97%E7%AC%A6%E4%B8%BAhex%E8%BF%9B%E5%88%B6%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E4%B9%9F%E5%8F%AF%E4%BB%A5ga%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E5%85%89%E6%A0%87%E7%9A%84%E8%BF%9B%E5%88%B6%5Cn%2C16%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E8%BD%AC%E6%8D%A2%E5%BD%93%E5%89%8D%E6%96%87%E4%BB%B6%E4%B8%BA16%E8%BF%9B%E5%88%B6%EF%BC%8C%2Cr16%E4%B8%BA%E6%81%A2%E5%A4%8D%EF%BC%8C%E5%8F%AA%E6%9C%89%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E9%83%A8%E5%88%86%E4%BF%AE%E6%94%B9%E6%89%8D%E6%9C%89%E7%94%A8%5Cn%3Avert%20command%20%20%20%20%20%20%20%20%20%20%20%E5%9E%82%E7%9B%B4%E6%89%93%E5%BC%80command%E4%B8%AD%E7%9A%84%E5%91%BD%E4%BB%A4%2C%E7%A4%BA%E4%BE%8B%20%3Avert%20h%20manpageview%22%7D\"></card><p data-lake-id=\"a33b42f82eab348bfaf7bb9dc16dbd86\"><br /></p><h4 data-lake-id=\"a224c709dabae717385ae160095354cc\" id=\"XyBgI\">Tips</h4><p data-lake-id=\"fc9233995988a73086f2f7b99f7d1835\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227be0434f%22%2C%22code%22%3A%22c%2Fc%2B%2B%2Fobjc%2Fobjc%2B%2B%20%20%20%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8YCM%5Cn%E8%B7%AF%E5%BE%84%E8%A1%A5%E5%85%A8%20%20%20%20%20%20%20%20%20%20%20%20%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8YCM%5Cn%E5%85%89%E6%A0%87%E5%AE%9A%E4%BD%8D%20%20%20%20%20%20%20%20%20%20%20%20%3Cc-o%2Fi%3E%E4%B8%8A%E4%B8%8B%E9%80%89%E6%8B%A9%E5%89%8D%E4%B8%80%E6%AC%A1%E5%90%8E%E4%B8%80%E6%AC%A1%E5%85%89%E6%A0%87%E4%BD%8D.%5Cn%E5%90%84%E4%B8%AA%E8%AF%AD%E8%A8%80%E7%9A%84%E8%A1%A5%E5%85%A8%20%20%20%20%20%20%E7%9C%8B~%2F.vim%2Fsnippets%5Cnctags%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%8F%AF%E4%BB%A5%E8%87%AA%E8%A1%8C%E5%9C%A8c%2Fphp%E7%AD%89%E5%A4%B4%E6%96%87%E4%BB%B6%E5%BB%BA%E7%AB%8Bctags%E6%96%87%E4%BB%B6%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20c%E6%AF%94%E5%A6%82%2Fusr%2Flocal%2Finclude%2C%20php%E6%AF%94%E5%A6%82pear%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E4%B8%AD%22%7D\"></card><p data-lake-id=\"9db4fdb0d7d456e20f2ca597ecabc357\"><br /></p><h4 data-lake-id=\"1ebb80e45c03909167d969c557667308\" id=\"J23OZ\">Snip</h4><p data-lake-id=\"874211c5bf058c6ac2bde4238e8fce79\">一旦你输入下面的字符，按Tab键自动补全</p><p data-lake-id=\"02ba989ce141293a88c287d875056c76\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22caded67c%22%2C%22code%22%3A%22%23!%5Cnclass%5Cnhtml5%22%7D\"></card><p data-lake-id=\"2c5fbd35569a818040ca56b5ca8d138f\"><br /></p><h4 id=\"e3b16bd9\" data-lake-id=\"dc2ea719a00799acb4de924765f930fd\">leader和buffer</h4><p data-lake-id=\"8f7baee39e4707f257b53f77b8073cce\"><br /></p><p data-lake-id=\"a62527d6f9f7bb32dbb5a13a8c93dd52\">leader默认是一个按钮，指的是反斜杠''，不过我在配置中设置成了',',减少小指的负担。</p><p data-lake-id=\"6953fa89d0801118511b1dfb23c8ce11\"><br /></p><p data-lake-id=\"d2ff25b82ff6a34be27c63dd10007fc0\">buffer其实就是你当前下面的buffer而已。</p><p data-lake-id=\"5f5231edfde3cfc83238b1649c9b75ae\"><br /></p><p data-lake-id=\"1eeb5426d44f861656c88e34187cb279\">当你了解到了基本的使用方法后，你可以读看看我在.vimrc中的文档，里面有很多详细的技巧，熟悉后能和sublime和notepad++一样顺手。</p><p data-lake-id=\"cb465cb6a75789017cc05716834aa744\"><br /></p><p data-lake-id=\"4db8f39ba396bc01e91721bde6f44b47\">当然_vimrc.bundles这个文件里面是需要加载的插件，里面有介绍每个插件是拿来干嘛的，也可以了解一下。</p><p data-lake-id=\"fae86ffb4260d450c9274185cf524bcd\"><br /></p><p data-lake-id=\"be99b69ad270861db45249154a05ea29\">我之前学习vim的时候，收集到的一些资料，这次重新复习了里面的内容，整理了一下发布了出来，就把它当成中级vim的入门手册吧</p><p data-lake-id=\"48145dda5a48b8ee13486bbf21e3a77b\"><br /></p><p data-lake-id=\"9138abfb1260a75754c67277bb779516\"><a href=\"https://github.com/yantze/vimrc/blob/master/VIMdoc.md\" target=\"_blank\">下载地址</a>。</p><p data-lake-id=\"08e8a0862a62ec535978935e6cfacbb2\"><br /></p><h3 data-lake-id=\"5c1d61869614a2a6e34740b6fd2b1ed0\" id=\"c59nx\">Thanks</h3><p data-lake-id=\"71e33a0e1b1d09e92d9a6bab68e43bc4\"><br /></p><p data-lake-id=\"cda9edfb7ac7fcc228e50475a1b752bd\">这份vim配置的所以完成，会如此热爱vim，是看到了ruchee的vimrc的配置,其完善的配置让我感觉vim是如此的简单</p><p data-lake-id=\"6d488e420898fe40b289f282dde1e97b\"><cursor /><br /></p><p data-lake-id=\"c88965397fe5aaf7d67a4d1a45f29aa3\"><a href=\"https://github.com/ruchee/vimrc\" target=\"_blank\">ruchee</a></p><p data-lake-id=\"4cb8865dbc7341417a54d8b6680b6c23\"><br /></p><p data-lake-id=\"19851ea62b100c134855e07ba8d1a82d\">我也参考了很多的vim配置:</p><p data-lake-id=\"8fdb83d93e2d55fb7aa99d5307658cc0\"><br /></p><p data-lake-id=\"183738970b81c801035a07d8f2a92a32\"><a href=\"https://github.com/coderhwz/vimfiles\" target=\"_blank\">vimfiles</a></p><p data-lake-id=\"937521e8fd933727d340ef77136507f1\"><br /></p><p data-lake-id=\"6b0d2a163d7f275b705dbec293b2edcb\"><a href=\"https://github.com/luin/dotfiles\" target=\"_blank\">dotfiles</a></p><p data-lake-id=\"14fb355cac3fca27b83fceb913aef998\"><br /></p><p data-lake-id=\"4e6cfdf38dc85517e25d6a96eb8983c1\"><a href=\"https://github.com/rhyzx/vimrc\" target=\"_blank\">vimrc</a></p><p data-lake-id=\"189821aa2b38ee39f7cc48575b3da709\"><br /></p><p data-lake-id=\"0237eb8cd76cfee297b73ba427b09d8e\">前段时间找到了vim的集成配置，功很强大</p><p data-lake-id=\"f7fa99385fb95949ecd467a16570bc02\"><br /></p><p data-lake-id=\"60c7cecde79540976ab1a2b7a7afccb2\"><a href=\"http://vim.spf13.com/\" target=\"_blank\">The Ultimate Vim Distribution</a></p><p data-lake-id=\"f8f0382af7015d3a81e92c7656b090f4\"><br /></p><p data-lake-id=\"bf57f31ec8191c524e11dd8a014fc7c7\">初学教程</p><p data-lake-id=\"06844a19248e1c46bb47073634ebffea\"><br /></p><p data-lake-id=\"d97f245dacfd55589fc485407d5e0fef\"><a href=\"http://learnvimscriptthehardway.stevelosh.com/\" target=\"_blank\">Learn Vimscript the Hard Way</a></p><p data-lake-id=\"b6e0c2ee3ce12a419cef6bb088d7fae1\"><br /></p><p data-lake-id=\"3e662b0f3e9a30e37800c63f01fbe33b\"><a href=\"http://www.cnbeta.com/articles/185694.htm\" target=\"_blank\">为什么Vim使用HJKL键作为方向键</a></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"8f0e49af74c80cf1bbc9f0158eeb4180\">VIM 稳定、实用、设计理论化，在自身领域能力极强，强烈的对称观念。</p><p data-lake-id=\"78a21ada88deb5234a862539abf1912e\"><br /></p><p data-lake-id=\"f947f285f857dbab2bb1f958fd13f355\">对于极复杂的大型工程一般使用 IDE，不强求， something else。</p><p data-lake-id=\"d94bebe90f857a04e27c4ea6aed1776e\"><br /></p><p data-lake-id=\"b26c6ddf79fccf73836e4a47b6157735\">最开始接触VIM的时候，听人说VIM很好，就用了一下VIM，看VIM简陋不堪，所以就搁置了几个月，后来看到了<a href=\"https://github.com/ruchee/vimrc\" target=\"_blank\">Ruchee</a>的vim配置文档，他的配置简单容易部署，所以后来在几分钟就建好了一个漂亮的vim编辑器的时候，高效编辑，高度灵活，我就喜欢上了这款编辑器。</p><p data-lake-id=\"37b41e23585579b6bc9b129799203147\">下面是我github上<a href=\"https://github.com/yantze/vimrc\" target=\"_blank\">vim项目</a>的一部分说明</p><p data-lake-id=\"19df3a252e3ca16c0ebfec26abab989a\"><br /></p><h4 data-lake-id=\"0973695489853f1337cf7fef3a2d1873\" id=\"mC73B\">shortcut</h4><p data-lake-id=\"99ea7f6e98aa34bb10cdf7321e2d6542\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22dcac409d%22%2C%22code%22%3A%22Ctrl%2BP%20%20%20%20%20%20%20%20%20%20%E5%BF%AB%E9%80%9F%E6%9F%A5%E6%89%BE%E5%BD%93%E5%89%8D%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E6%89%80%E6%9C%89%E5%AD%90%E7%9B%AE%E5%BD%95%E7%9A%84%E6%96%87%E4%BB%B6%2Cctrl%2Bj%2Fk%E4%B8%8A%E4%B8%8B%E9%80%89%E6%8B%A9%E6%96%87%E4%BB%B6%5Cn%3Aag%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%9F%A5%E6%89%BE%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%5Cn%2Cgd%20%20%20%20%20%20%20%20%20%20%20%20%20%E4%BD%BF%E7%94%A8YCM%E7%9A%84%E5%BF%AB%E9%80%9F%E6%9F%A5%E6%89%BE%E5%A4%B4%E6%96%87%E4%BB%B6%E5%AE%9A%E4%B9%89%2C%E7%B1%BB%E4%BC%BCvs%E4%B8%AD%E7%9A%84F12%5Cn%2Cci%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%B3%A8%E9%87%8A%E5%BD%93%E5%89%8D%E8%A1%8C(%E5%8F%AF%E9%80%89%E4%B8%AD)%5Cn%2Ccm%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%9D%97%E6%B3%A8%E9%87%8A(%E5%8F%AF%E9%80%89%E4%B8%AD)%5Cnkey%3CTab%3E%20%20%20%20%20%20%20%20UltiSnip%20And%20YCM%20%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8%EF%BC%8CUltiSnip%E5%AF%B9py%EF%BC%8Cycm%E5%AF%B9c%E5%A5%BD%E4%B8%80%E4%BA%9B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cc-j%2Fk%3E%E4%B8%8A%E4%B8%8B%E9%80%89%E6%8B%A9%E4%B8%8B%E4%B8%80%E4%B8%AA%E7%9E%84%E5%87%86%E4%BD%8D%5Cn%3Cc-n%3E%3Cc-j%2Fk%3E%20%20%20%20%E7%94%A8%3Cc-n%3E%E5%BD%93%E5%89%8D%E9%80%89%E4%B8%AD%E7%9A%84%E8%A1%8C%EF%BC%8C%E7%94%A8%3Cc-j%2Fk%3E%E6%9D%A5%E7%A7%BB%E5%8A%A8%E8%A1%8C%E7%9A%84%E4%BD%8D%E7%BD%AE(vim-multipe-cursors)%5Cn%3Cm-j%2Fk%3E%20%20%20%20%20%20%20%20%20%E7%94%A8alt%2Fcommand%2Bj%2Fk%E7%A7%BB%E5%8A%A8%E5%BD%93%E5%89%8D%E8%A1%8C%E7%9A%84%E4%BD%8D%E7%BD%AE(%E5%8A%9F%E8%83%BD%E5%90%8C%E4%B8%8A)%5Cn%3Cc-n%3E%20%20%20%20%20%20%20%20%20%20%20%E4%B8%8D%E5%81%9C%E7%9A%84%E9%80%89%E4%B8%AD%3Cc-n%3E%2C%E5%8F%AF%E4%BB%A5%E6%89%A7%E8%A1%8C%E5%A4%9A%E5%85%89%E6%A0%87%E7%BC%96%E8%BE%91%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cc-p%3E%E5%9B%9E%E5%88%B0%E5%89%8D%E4%B8%80%E4%B8%AA%2C%3Cc-x%3E%E6%94%BE%E5%BC%83%E5%BD%93%E5%89%8D%E8%BF%99%E4%B8%AA%E5%85%89%E6%A0%87%E5%88%B0%E4%B8%8B%E4%B8%80%E4%B8%AA%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%85%B6%E4%B8%ADi%2Ca%2CI%2CA%E5%8F%AF%E4%BB%A5%E5%9C%A8insert%E6%A8%A1%E5%BC%8F%EF%BC%8Cc%2Cs%E5%8F%AF%E4%BB%A5%E5%9C%A8normal%E6%A8%A1%E5%BC%8F%EF%BC%8Cc%E6%98%AF%E6%B8%85%E9%99%A4%E5%BD%93%E5%89%8D%E9%80%89%E4%B8%AD%E7%9A%84%E6%96%87%E5%AD%97%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%9C%89%E4%B8%AA%E5%B0%8Fbug%2C%E5%B0%B1%E6%98%AF%E5%9C%A8%E5%A4%9A%E5%85%89%E6%A0%87%E9%80%89%E4%B8%AD%E6%A8%A1%E5%BC%8F%E4%B8%8B%EF%BC%8C%E8%A6%81%E5%85%88%E6%8C%89i%E6%88%96%E8%80%85a%E8%BF%99%E4%B8%AA%E9%94%AE%EF%BC%8C%E5%86%8D%E6%8C%89I%2FA%5Cn%2Cmt%20%20%20%20%20%20%20%20%20%20%20%20%20%E7%94%9F%E6%88%90%E6%AF%8F%E4%B8%AA%E8%AF%AD%E8%A8%80%E7%9A%84ctags%E6%96%87%E4%BB%B6%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87ctrl%2B%5D%E8%B7%B3%E8%BD%AC%E5%92%8Cctrl%2Bt%E8%BF%94%E5%9B%9E%5Cn%2B%2F-%20%20%20%20%20%20%20%20%20%20%20%20%20%2B%E5%8F%AF%E4%BB%A5%E6%89%A9%E5%A4%A7%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F%2F-%E7%9B%B8%E5%8F%8D%5Cn%2Cbb%20%2F%2Cbn%3Ctype%20char%3E%20%E6%8C%89%E7%AD%89%E4%BA%8E%E5%8F%B7%E5%AF%B9%E5%85%B6%E6%88%96%E8%80%85%E8%87%AA%E5%AE%9A%E4%B9%89%E7%AC%A6%E5%8F%B7%E5%AF%B9%E9%BD%90%5Cn%3ASw%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%BD%93%E9%9C%80%E8%A6%81root%E6%9D%83%E9%99%90%E4%BF%9D%E5%AD%98%E6%97%B6%EF%BC%8C%E4%B8%8D%E7%94%A8%E9%87%8D%E6%96%B0%E6%89%93%E5%BC%80%5Cn%3ADiffSaved%20%20%20%20%20%20%E6%AF%94%E8%BE%83%E5%9C%A8%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6%E4%B9%8B%E5%90%8E%E4%BF%AE%E6%94%B9%E4%BA%86%E4%BB%80%E4%B9%88%E9%82%A3%E4%BA%9B%E5%86%85%E5%AE%B9%5Cn%3AMan%20glob%20%20%20%20%20%20%20%E6%9F%A5%E7%9C%8Blinux%E5%85%B3%E4%BA%8Eglob%E7%9A%84man%E6%96%87%E6%A1%A3(only%20linux%2Fmac)%5Cn%3AMan%20glob.php%20%20%20%E6%9F%A5%E7%9C%8B%E4%BB%8Ephp.net%E4%B8%AD%E8%AE%BF%E9%97%AEglob%E7%9A%84%E7%9B%B8%E5%85%B3%E8%AF%AD%E6%B3%95%E5%92%8C%E7%A4%BA%E4%BE%8B(only%20linux%2Fmac)%5CnK%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%88%A4%E6%96%AD%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%87%AA%E5%8A%A8%E8%B0%83%E7%94%A8%3AMan%20function%2Fcommand%20name%22%2C%22mode%22%3A%22plain%22%7D\"></card><p data-lake-id=\"b882e55e6c18ca852298ff1d178a1449\"><br /></p><h4 data-lake-id=\"6f63c8d2c2b567156f17208b6965c1ab\" id=\"mV6X0\">PHP补全</h4><p data-lake-id=\"f1954d1e0d9d709472df3e45a252808d\">可以使用Ctrl+x,Ctrl+o来补全内容</p><p data-lake-id=\"43167cd4dfefa1eb376b9c286087575a\"><br /></p><h3 data-lake-id=\"a4780c0f308b9b91bfd3b1c1fb2545c3\" id=\"q5f8c\">vim学习</h3><p data-lake-id=\"400ca8a1f547f2d77fb96f7a58d54fc2\">如果是初学者，要学会这几个技巧</p><p data-lake-id=\"d68b036b496a5e6b702a13b8c39113d8\">vim有很多的‘模式’，在normal模式下</p><p data-lake-id=\"63b990c250fa569ddd919610f38f4674\">jkhl: 这四个键分别代表：下上左右</p><p data-lake-id=\"79b973c40c5db8d730d6a1f89b4002f6\">按字母i，进入insert插入模式，然后就可以输入文字</p><p data-lake-id=\"96c9e834040d8a0ceab71fee846a27e5\">按ESC键，退出insert进入normal模式</p><p data-lake-id=\"a7e6d749d8fd61ad5c4752ee9d1f9317\">退出要先按英文冒号:然后输入q</p><p data-lake-id=\"a55164b07236c5c9baa96b4c4757d8e9\"><br /></p><p data-lake-id=\"aa2c0c2cb0cd4e66d8d23ebf9b16f49d\">这些是基本的规则，如果要熟练的话，需要做一些高级的练习：</p><p data-lake-id=\"fac4495193e5c78bd432ff472d0f5e9e\"><br /></p><p data-lake-id=\"1836cf29df53a497d0980766c4197f67\"><a href=\"http://coolshell.cn/articles/5426.html\" target=\"_blank\">简明Vim练级攻略</a></p><p data-lake-id=\"9a8a4236c7d1de9cf6cd7b280a38024f\"><br /></p><p data-lake-id=\"bc70f372d2c50c378718b65ad0d7cbac\"><a href=\"http://vim-adventures.com/\" target=\"_blank\">vim游戏</a></p><p data-lake-id=\"a7e4c5e922b49e898c98fa48e9fee317\"><br /></p><h3 data-lake-id=\"79a76f308e7ba8bc9f297ba4dd60c861\" id=\"6yisr\">一些常用快捷键说明</h3><p data-lake-id=\"ef50061ed42a0556a7b10a9050b16c44\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%225c798d98%22%2C%22code%22%3A%22%2Fxxx%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%9F%A5%E6%89%BExxx%E5%AD%97%E7%AC%A6%E4%B8%B2%5Cn%2Cci%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%B3%A8%E9%87%8A%E9%80%89%E5%AE%9A%E8%A1%8C(%E8%87%AA%E5%8A%A8%E8%AF%86%E5%88%AB%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E5%90%8E%E6%B7%BB%E5%8A%A0%E6%B3%A8%E9%87%8A)%5Cn%2Cn%2F%2Cp%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%88%87%E6%8D%A2buffer%E7%9A%84%E6%A0%87%E7%AD%BE(%E5%9B%A0%E4%B8%BAvim%E7%9A%84%E4%B8%80%E4%B8%AA%E7%AA%97%E5%8F%A3%E9%87%8C%E9%9D%A2%E6%9C%89%E5%A4%9A%E4%B8%AAbuffer)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%90%8C%E6%97%B6%E8%AE%BE%E7%BD%AE%E4%BA%86%E6%96%B0%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AEF2%2FF3%E5%AF%B9%E5%BA%94%2Cn%2F%2Cp%5Cn10G%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%95%B0%E5%AD%9710%E5%92%8C%E5%A4%A7%E5%86%99%E7%9A%84G%EF%BC%8C%E8%B7%B3%E5%88%B0%E7%AC%AC%E5%8D%81%E8%A1%8C%5Cn%5Cn%3As%2F%5E%2F%23%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E7%94%A8%5C%22%23%5C%22%E6%B3%A8%E9%87%8A%E5%BD%93%E5%89%8D%E8%A1%8C%20%2C%5C%22%3As%2F%3Csearch%3E%2F%3Creplace%3E%5C%22%5Cn%3A%25s%2Fx%2Fb%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%9C%A8%E6%89%80%E6%9C%89%E8%A1%8C%E6%9B%BF%E6%8D%A2x%E4%B8%BAb%2C%5C%22%3A%25s%2F%3Csearch%3E%2F%3Creplace%3E%5C%22%5Cn%3A2%2C50s%2Fx%2Fb%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%9C%A82~50%E8%A1%8C%E6%9B%BF%E6%8D%A2x%E4%B8%BAb%5Cn%3A.%2C%2B3s%2Fx%2Fb%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%9C%A8%E5%89%8D%E8%A1%8C%E5%92%8C%E5%BD%93%E5%89%8D%E8%A1%8C%E5%90%8E%E9%9D%A2%E7%9A%84%E4%B8%89%E8%A1%8C%EF%BC%8C%E6%9B%BF%E6%8D%A2x%E4%B8%BAb%5Cn%3Aset%20notextmode%20%20%20%20%20%20%20%20%20%E8%BF%99%E4%B8%AA%E5%8F%AF%E4%BB%A5%E5%8E%BB%E6%8E%89%5EM%E8%BF%99%E4%B8%AA%E7%AC%A6%E5%8F%B7%5Cn%3Aset%20pastetoggle%20%20%20%20%20%20%20%20%E5%8F%AF%E4%BB%A5%E8%A7%A3%E5%86%B3%E5%9C%A8linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%A4%8D%E5%88%B6%E5%86%85%E5%AE%B9%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%86%85%E5%AE%B9%E8%A2%AB%E8%AF%86%E5%88%AB%E4%B8%BAvim%E6%93%8D%E4%BD%9C%E5%92%8C%E4%B9%B1%E5%BA%8F%E7%BC%A9%E8%BF%9B%2C%E5%9C%A8%E6%88%91%E7%9A%84%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%B8%BAF4%5Cn%5Cnf%3Cchar%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%9F%A5%E6%89%BE%E5%BD%93%E5%89%8D%E8%A1%8C%E7%9A%84%E5%AD%97%E7%AC%A6%5Cngb%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20go%20browser%EF%BC%8C%E5%85%89%E6%A0%87%E4%B8%8B%E5%A6%82%E6%9E%9C%E6%98%AFurl%E9%93%BE%E6%8E%A5%EF%BC%8C%E8%87%AA%E5%8A%A8%E7%94%A8%E9%BB%98%E8%AE%A4%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%93%E5%BC%80%E9%93%BE%E6%8E%A5%EF%BC%8C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%A6%82%E6%9E%9C%E6%98%AF%E9%80%89%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%B0%B1%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E6%90%9C%E7%B4%A2%2C%20%2Cgb%E6%98%AF%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E6%8F%92%E4%BB%B6%E6%8F%90%E4%BE%9B%E7%9A%84%E5%90%8C%E6%A0%B7%E5%8A%9F%E8%83%BD%5Cngf%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%A6%82%E6%9E%9C%E5%85%89%E6%A0%87%E4%B8%8B%E6%98%AF%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%EF%BC%8C%E5%88%99%E5%8F%AF%E4%BB%A5%E7%94%A8vim%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E8%BF%99%E4%B8%AA%E6%96%87%E4%BB%B6%5Cngd%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%89%BE%E5%88%B0%E5%85%89%E6%A0%87%E4%B8%8B%E7%9A%84%E6%A0%87%E7%AD%BE%E5%AE%9A%E4%B9%89%5CnCtrl%2BTab%2FCtrl%2BShift%2BTab%20%E5%88%87%E6%8D%A2vim%E6%A0%87%E7%AD%BE%5CnCtrl%2Bw%2Cv%2Fh%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%9C%A8gvim%E4%B8%8B%E5%88%9B%E5%BB%BA%E5%A4%9A%E7%AA%97%E5%8F%A3%5CnCtrl%2Bh%2Fj%2Fk%2Fl%20%20%20%20%20%20%20%20%20%20%20%20%E5%9C%A8gvim%E4%B8%8B%E5%88%87%E6%8D%A2%E5%A4%9A%E7%AA%97%E5%8F%A3%5Cn%5Dp%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%92%8Cp%E7%9A%84%E5%8A%9F%E8%83%BD%E5%B7%AE%E4%B8%8D%E5%A4%9A%EF%BC%8C%E4%BD%86%E6%98%AF%E5%AE%83%E4%BC%9A%E8%87%AA%E5%8A%A8%E8%B0%83%E6%95%B4%E8%A2%AB%E7%B2%98%E8%B4%B4%E7%9A%84%E6%96%87%E6%9C%AC%E7%9A%84%E7%BC%A9%E8%BF%9B%E5%8E%BB%E9%80%82%E5%BA%94%E5%BD%93%E5%89%8D%E4%BB%A3%E7%A0%81%E7%9A%84%E4%BD%8D%E7%BD%AE%5CnK%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%9C%A8Man%E9%87%8C%E9%9D%A2%E6%9F%A5%E6%89%BE%E5%85%89%E6%A0%87%E5%BD%93%E5%89%8D%E6%89%80%E5%9C%A8%E5%A4%84%E7%9A%84%E8%AF%8D%5CnCtrl%2BX%2CCtrl%2BO%20%20%20%20%20%20%20%20%20%20%20%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8%2Cycm%E5%8D%A0%E7%94%A8Ctrl%2Bn%2Fp%5Cnzz%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E6%8A%8A%E5%BD%93%E5%89%8D%E8%A1%8C%E7%A7%BB%E5%88%B0%E5%B1%8F%E5%B9%95%E4%B8%AD%E9%97%B4%22%7D\"></card><p data-lake-id=\"743e523bcc73244cac2c17556cca9953\"><br /></p><h3 data-lake-id=\"cd68e4d5a3dc6a69409bc31c1ec6a185\" id=\"FQOax\">一些不常用但是实用的设置</h3><p data-lake-id=\"de05e88613517674717477170f34f519\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%221392bfcf%22%2C%22code%22%3A%22%3Aset%20display%3Duhex%20%20%20%20%20%20%20%E8%BF%99%E4%B8%AA%E6%98%AF%E7%94%A8%E6%9D%A5%E6%9F%A5%E7%9C%8B%5E%40%E8%BF%99%E7%A7%8D%E4%B8%8D%E5%8F%AF%E6%98%BE%E7%A4%BA%E7%9A%84%E5%AD%97%E7%AC%A6%EF%BC%8C%E8%87%AA%E5%8A%A8%E8%BD%AC%E6%8D%A2%E8%BF%99%E4%BA%9B%E5%AD%97%E7%AC%A6%E4%B8%BAhex%E8%BF%9B%E5%88%B6%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E4%B9%9F%E5%8F%AF%E4%BB%A5ga%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E5%85%89%E6%A0%87%E7%9A%84%E8%BF%9B%E5%88%B6%5Cn%2C16%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E8%BD%AC%E6%8D%A2%E5%BD%93%E5%89%8D%E6%96%87%E4%BB%B6%E4%B8%BA16%E8%BF%9B%E5%88%B6%EF%BC%8C%2Cr16%E4%B8%BA%E6%81%A2%E5%A4%8D%EF%BC%8C%E5%8F%AA%E6%9C%89%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E9%83%A8%E5%88%86%E4%BF%AE%E6%94%B9%E6%89%8D%E6%9C%89%E7%94%A8%5Cn%3Avert%20command%20%20%20%20%20%20%20%20%20%20%20%E5%9E%82%E7%9B%B4%E6%89%93%E5%BC%80command%E4%B8%AD%E7%9A%84%E5%91%BD%E4%BB%A4%2C%E7%A4%BA%E4%BE%8B%20%3Avert%20h%20manpageview%22%7D\"></card><p data-lake-id=\"a33b42f82eab348bfaf7bb9dc16dbd86\"><br /></p><h4 data-lake-id=\"a224c709dabae717385ae160095354cc\" id=\"XyBgI\">Tips</h4><p data-lake-id=\"fc9233995988a73086f2f7b99f7d1835\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227be0434f%22%2C%22code%22%3A%22c%2Fc%2B%2B%2Fobjc%2Fobjc%2B%2B%20%20%20%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8YCM%5Cn%E8%B7%AF%E5%BE%84%E8%A1%A5%E5%85%A8%20%20%20%20%20%20%20%20%20%20%20%20%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8YCM%5Cn%E5%85%89%E6%A0%87%E5%AE%9A%E4%BD%8D%20%20%20%20%20%20%20%20%20%20%20%20%3Cc-o%2Fi%3E%E4%B8%8A%E4%B8%8B%E9%80%89%E6%8B%A9%E5%89%8D%E4%B8%80%E6%AC%A1%E5%90%8E%E4%B8%80%E6%AC%A1%E5%85%89%E6%A0%87%E4%BD%8D.%5Cn%E5%90%84%E4%B8%AA%E8%AF%AD%E8%A8%80%E7%9A%84%E8%A1%A5%E5%85%A8%20%20%20%20%20%20%E7%9C%8B~%2F.vim%2Fsnippets%5Cnctags%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%E5%8F%AF%E4%BB%A5%E8%87%AA%E8%A1%8C%E5%9C%A8c%2Fphp%E7%AD%89%E5%A4%B4%E6%96%87%E4%BB%B6%E5%BB%BA%E7%AB%8Bctags%E6%96%87%E4%BB%B6%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20c%E6%AF%94%E5%A6%82%2Fusr%2Flocal%2Finclude%2C%20php%E6%AF%94%E5%A6%82pear%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E4%B8%AD%22%7D\"></card><p data-lake-id=\"9db4fdb0d7d456e20f2ca597ecabc357\"><br /></p><h4 data-lake-id=\"1ebb80e45c03909167d969c557667308\" id=\"J23OZ\">Snip</h4><p data-lake-id=\"874211c5bf058c6ac2bde4238e8fce79\">一旦你输入下面的字符，按Tab键自动补全</p><p data-lake-id=\"02ba989ce141293a88c287d875056c76\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22caded67c%22%2C%22code%22%3A%22%23!%5Cnclass%5Cnhtml5%22%7D\"></card><p data-lake-id=\"2c5fbd35569a818040ca56b5ca8d138f\"><br /></p><h4 id=\"e3b16bd9\" data-lake-id=\"dc2ea719a00799acb4de924765f930fd\">leader和buffer</h4><p data-lake-id=\"8f7baee39e4707f257b53f77b8073cce\"><br /></p><p data-lake-id=\"a62527d6f9f7bb32dbb5a13a8c93dd52\">leader默认是一个按钮，指的是反斜杠''，不过我在配置中设置成了',',减少小指的负担。</p><p data-lake-id=\"6953fa89d0801118511b1dfb23c8ce11\"><br /></p><p data-lake-id=\"d2ff25b82ff6a34be27c63dd10007fc0\">buffer其实就是你当前下面的buffer而已。</p><p data-lake-id=\"5f5231edfde3cfc83238b1649c9b75ae\"><br /></p><p data-lake-id=\"1eeb5426d44f861656c88e34187cb279\">当你了解到了基本的使用方法后，你可以读看看我在.vimrc中的文档，里面有很多详细的技巧，熟悉后能和sublime和notepad++一样顺手。</p><p data-lake-id=\"cb465cb6a75789017cc05716834aa744\"><br /></p><p data-lake-id=\"4db8f39ba396bc01e91721bde6f44b47\">当然_vimrc.bundles这个文件里面是需要加载的插件，里面有介绍每个插件是拿来干嘛的，也可以了解一下。</p><p data-lake-id=\"fae86ffb4260d450c9274185cf524bcd\"><br /></p><p data-lake-id=\"be99b69ad270861db45249154a05ea29\">我之前学习vim的时候，收集到的一些资料，这次重新复习了里面的内容，整理了一下发布了出来，就把它当成中级vim的入门手册吧</p><p data-lake-id=\"48145dda5a48b8ee13486bbf21e3a77b\"><br /></p><p data-lake-id=\"9138abfb1260a75754c67277bb779516\"><a href=\"https://github.com/yantze/vimrc/blob/master/VIMdoc.md\" target=\"_blank\">下载地址</a>。</p><p data-lake-id=\"08e8a0862a62ec535978935e6cfacbb2\"><br /></p><h3 data-lake-id=\"5c1d61869614a2a6e34740b6fd2b1ed0\" id=\"c59nx\">Thanks</h3><p data-lake-id=\"71e33a0e1b1d09e92d9a6bab68e43bc4\"><br /></p><p data-lake-id=\"cda9edfb7ac7fcc228e50475a1b752bd\">这份vim配置的所以完成，会如此热爱vim，是看到了ruchee的vimrc的配置,其完善的配置让我感觉vim是如此的简单</p><p data-lake-id=\"6d488e420898fe40b289f282dde1e97b\"><cursor /><br /></p><p data-lake-id=\"c88965397fe5aaf7d67a4d1a45f29aa3\"><a href=\"https://github.com/ruchee/vimrc\" target=\"_blank\">ruchee</a></p><p data-lake-id=\"4cb8865dbc7341417a54d8b6680b6c23\"><br /></p><p data-lake-id=\"19851ea62b100c134855e07ba8d1a82d\">我也参考了很多的vim配置:</p><p data-lake-id=\"8fdb83d93e2d55fb7aa99d5307658cc0\"><br /></p><p data-lake-id=\"183738970b81c801035a07d8f2a92a32\"><a href=\"https://github.com/coderhwz/vimfiles\" target=\"_blank\">vimfiles</a></p><p data-lake-id=\"937521e8fd933727d340ef77136507f1\"><br /></p><p data-lake-id=\"6b0d2a163d7f275b705dbec293b2edcb\"><a href=\"https://github.com/luin/dotfiles\" target=\"_blank\">dotfiles</a></p><p data-lake-id=\"14fb355cac3fca27b83fceb913aef998\"><br /></p><p data-lake-id=\"4e6cfdf38dc85517e25d6a96eb8983c1\"><a href=\"https://github.com/rhyzx/vimrc\" target=\"_blank\">vimrc</a></p><p data-lake-id=\"189821aa2b38ee39f7cc48575b3da709\"><br /></p><p data-lake-id=\"0237eb8cd76cfee297b73ba427b09d8e\">前段时间找到了vim的集成配置，功很强大</p><p data-lake-id=\"f7fa99385fb95949ecd467a16570bc02\"><br /></p><p data-lake-id=\"60c7cecde79540976ab1a2b7a7afccb2\"><a href=\"http://vim.spf13.com/\" target=\"_blank\">The Ultimate Vim Distribution</a></p><p data-lake-id=\"f8f0382af7015d3a81e92c7656b090f4\"><br /></p><p data-lake-id=\"bf57f31ec8191c524e11dd8a014fc7c7\">初学教程</p><p data-lake-id=\"06844a19248e1c46bb47073634ebffea\"><br /></p><p data-lake-id=\"d97f245dacfd55589fc485407d5e0fef\"><a href=\"http://learnvimscriptthehardway.stevelosh.com/\" target=\"_blank\">Learn Vimscript the Hard Way</a></p><p data-lake-id=\"b6e0c2ee3ce12a419cef6bb088d7fae1\"><br /></p><p data-lake-id=\"3e662b0f3e9a30e37800c63f01fbe33b\"><a href=\"http://www.cnbeta.com/articles/185694.htm\" target=\"_blank\">为什么Vim使用HJKL键作为方向键</a></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-01-23T04:52:34.000Z",
    "deleted_at": null,
    "created_at": "2021-01-23T04:50:42.000Z",
    "updated_at": "2021-01-23T04:52:34.000Z",
    "published_at": "2021-01-23T04:52:34.000Z",
    "first_published_at": "2021-01-23T04:51:22.000Z",
    "word_count": 1630,
    "cover": null,
    "description": "VIM 稳定、实用、设计理论化，在自身领域能力极强，强烈的对称观念。对于极复杂的大型工程一般使用 IDE，不强求， something else。最开始接触VIM的时候，听人说VIM很好，就用了一下VIM，看VIM简陋不堪，所以就搁置了几个月，后来看到了Ruchee的vim配置文档，他的配置简...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 2367644,
    "slug": "rgktw5",
    "title": "助眠食物",
    "book_id": 213435,
    "book": {
      "id": 213435,
      "type": "Book",
      "slug": "blog",
      "name": "Blog",
      "user_id": 120091,
      "description": "开放数据",
      "creator_id": 120091,
      "public": 1,
      "items_count": 8,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-08-06T05:06:41.373Z",
      "updated_at": "2021-08-06T05:06:41.000Z",
      "created_at": "2019-01-31T02:12:32.000Z",
      "namespace": "yantze/blog",
      "user": {
        "id": 120091,
        "type": "User",
        "login": "yantze",
        "name": "yantze",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
        "books_count": 6,
        "public_books_count": 2,
        "followers_count": 0,
        "following_count": 2,
        "created_at": "2018-05-06T11:41:31.000Z",
        "updated_at": "2021-07-19T16:15:37.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 120091,
    "creator": {
      "id": 120091,
      "type": "User",
      "login": "yantze",
      "name": "yantze",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
      "books_count": 6,
      "public_books_count": 2,
      "followers_count": 0,
      "following_count": 2,
      "created_at": "2018-05-06T11:41:31.000Z",
      "updated_at": "2021-07-19T16:15:37.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "[助眠食物.xmind](https://www.yuque.com/attachments/yuque/0/2019/xmind/120091/1565851305057-944f545e-8bfd-47e1-a3ed-cfd94e473fd4.xmind?_lake_card=%7B%22uid%22%3A%221565851301589-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2019%2Fxmind%2F120091%2F1565851305057-944f545e-8bfd-47e1-a3ed-cfd94e473fd4.xmind%22%2C%22name%22%3A%22%E5%8A%A9%E7%9C%A0%E9%A3%9F%E7%89%A9.xmind%22%2C%22size%22%3A740389%2C%22type%22%3A%22application%2Fvnd.xmind.workbook%22%2C%22ext%22%3A%22xmind%22%2C%22progress%22%3A%7B%22percent%22%3A0%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22M0dV0%22%2C%22card%22%3A%22file%22%7D)\n",
    "body_draft": "[助眠食物.xmind](https://www.yuque.com/attachments/yuque/0/2019/xmind/120091/1565851305057-944f545e-8bfd-47e1-a3ed-cfd94e473fd4.xmind?_lake_card=%7B%22uid%22%3A%221565851301589-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2019%2Fxmind%2F120091%2F1565851305057-944f545e-8bfd-47e1-a3ed-cfd94e473fd4.xmind%22%2C%22name%22%3A%22%E5%8A%A9%E7%9C%A0%E9%A3%9F%E7%89%A9.xmind%22%2C%22size%22%3A740389%2C%22type%22%3A%22application%2Fvnd.xmind.workbook%22%2C%22ext%22%3A%22xmind%22%2C%22progress%22%3A%7B%22percent%22%3A0%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22M0dV0%22%2C%22card%22%3A%22file%22%7D)\n",
    "body_html": "<!doctype html><p><a href=\"https://www.yuque.com/attachments/yuque/0/2019/xmind/120091/1565851305057-944f545e-8bfd-47e1-a3ed-cfd94e473fd4.xmind?_lake_card=%7B%22uid%22%3A%221565851301589-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2019%2Fxmind%2F120091%2F1565851305057-944f545e-8bfd-47e1-a3ed-cfd94e473fd4.xmind%22%2C%22name%22%3A%22%E5%8A%A9%E7%9C%A0%E9%A3%9F%E7%89%A9.xmind%22%2C%22size%22%3A740389%2C%22type%22%3A%22application%2Fvnd.xmind.workbook%22%2C%22ext%22%3A%22xmind%22%2C%22progress%22%3A%7B%22percent%22%3A0%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22M0dV0%22%2C%22card%22%3A%22file%22%7D\" target=\"_blank\">助眠食物.xmind</a></p>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><p><card type=\"inline\" name=\"file\" value=\"data:%7B%22uid%22%3A%221565851301589-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2019%2Fxmind%2F120091%2F1565851305057-944f545e-8bfd-47e1-a3ed-cfd94e473fd4.xmind%22%2C%22name%22%3A%22%E5%8A%A9%E7%9C%A0%E9%A3%9F%E7%89%A9.xmind%22%2C%22size%22%3A740389%2C%22type%22%3A%22application%2Fvnd.xmind.workbook%22%2C%22ext%22%3A%22xmind%22%2C%22progress%22%3A%7B%22percent%22%3A0%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22M0dV0%22%7D\"></card><cursor /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><p><card type=\"inline\" name=\"file\" value=\"data:%7B%22uid%22%3A%221565851301589-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2019%2Fxmind%2F120091%2F1565851305057-944f545e-8bfd-47e1-a3ed-cfd94e473fd4.xmind%22%2C%22name%22%3A%22%E5%8A%A9%E7%9C%A0%E9%A3%9F%E7%89%A9.xmind%22%2C%22size%22%3A740389%2C%22type%22%3A%22application%2Fvnd.xmind.workbook%22%2C%22ext%22%3A%22xmind%22%2C%22progress%22%3A%7B%22percent%22%3A0%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22M0dV0%22%7D\"></card><cursor /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-08-15T06:42:07.000Z",
    "deleted_at": null,
    "created_at": "2019-08-15T06:41:33.000Z",
    "updated_at": "2021-01-22T17:07:00.000Z",
    "published_at": "2019-08-15T06:42:07.000Z",
    "first_published_at": "2019-08-15T06:42:07.000Z",
    "word_count": 5,
    "cover": null,
    "description": "助眠食物.xmind",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 2123006,
    "slug": "1d57cfee-0735-4304-888f-d1598d455ef8",
    "title": "Preface - Grokking Algorithms: An illustrated guide for programmers and other curious people",
    "book_id": 213435,
    "book": {
      "id": 213435,
      "type": "Book",
      "slug": "blog",
      "name": "Blog",
      "user_id": 120091,
      "description": "开放数据",
      "creator_id": 120091,
      "public": 1,
      "items_count": 8,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-08-06T05:06:41.373Z",
      "updated_at": "2021-08-06T05:06:41.000Z",
      "created_at": "2019-01-31T02:12:32.000Z",
      "namespace": "yantze/blog",
      "user": {
        "id": 120091,
        "type": "User",
        "login": "yantze",
        "name": "yantze",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
        "books_count": 6,
        "public_books_count": 2,
        "followers_count": 0,
        "following_count": 2,
        "created_at": "2018-05-06T11:41:31.000Z",
        "updated_at": "2021-07-19T16:15:37.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 120091,
    "creator": {
      "id": 120091,
      "type": "User",
      "login": "yantze",
      "name": "yantze",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
      "books_count": 6,
      "public_books_count": 2,
      "followers_count": 0,
      "following_count": 2,
      "created_at": "2018-05-06T11:41:31.000Z",
      "updated_at": "2021-07-19T16:15:37.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"Preface\"></a>\n## Preface\n\n![](https://learning.oreilly.com/library/view/grokking-algorithms-an/9781617292231/common.jpg#alt=)\n\nI first got into programming as a hobby. _Visual Basic 6 for Dummies_ taught me the basics, and I kept reading books to learn more. But the subject of algorithms was impenetrable for me. I remember savoring the table of contents of my first algorithms book, thinking “I’m finally going to understand these topics!” But it was dense stuff, and I gave up after a few weeks. It wasn’t until I had my first good algorithms professor that I realized how simple and elegant these ideas were.\n\nA few years ago, I wrote my first illustrated blog post. I’m a visual learner, and I really liked the illustrated style. Since then, I’ve written a few illustrated posts on functional programming, Git, machine learning, and concurrency. By the way: I was a mediocre writer when I started out. Explaining technical concepts is hard. Coming up with good examples takes time, and explaining a difficult concept takes time. So it’s easiest to gloss over the hard stuff. I thought I was doing a pretty good job, until after one of my posts got popular, a coworker came up to me and said, “I read your post and I still don’t understand this.” I still had a lot to learn about writing.\n\nSomewhere in the middle of writing these blog posts, Manning reached out to me and asked if I wanted to write an illustrated book. Well, it turns out that Manning editors know a lot about explaining technical concepts, and they taught me how to teach. I wrote this book to scratch a particular itch: I wanted to write a book that explained hard technical topics well, and I wanted an easy-to-read algorithms book. My writing has come a long way since that first blog post, and I hope you find this book an easy and informative read.\n",
    "body_draft": "<a name=\"Preface\"></a>\n## Preface\n\n![](https://learning.oreilly.com/library/view/grokking-algorithms-an/9781617292231/common.jpg#alt=)\n\nI first got into programming as a hobby. _Visual Basic 6 for Dummies_ taught me the basics, and I kept reading books to learn more. But the subject of algorithms was impenetrable for me. I remember savoring the table of contents of my first algorithms book, thinking “I’m finally going to understand these topics!” But it was dense stuff, and I gave up after a few weeks. It wasn’t until I had my first good algorithms professor that I realized how simple and elegant these ideas were.\n\nA few years ago, I wrote my first illustrated blog post. I’m a visual learner, and I really liked the illustrated style. Since then, I’ve written a few illustrated posts on functional programming, Git, machine learning, and concurrency. By the way: I was a mediocre writer when I started out. Explaining technical concepts is hard. Coming up with good examples takes time, and explaining a difficult concept takes time. So it’s easiest to gloss over the hard stuff. I thought I was doing a pretty good job, until after one of my posts got popular, a coworker came up to me and said, “I read your post and I still don’t understand this.” I still had a lot to learn about writing.\n\nSomewhere in the middle of writing these blog posts, Manning reached out to me and asked if I wanted to write an illustrated book. Well, it turns out that Manning editors know a lot about explaining technical concepts, and they taught me how to teach. I wrote this book to scratch a particular itch: I wanted to write a book that explained hard technical topics well, and I wanted an easy-to-read algorithms book. My writing has come a long way since that first blog post, and I hope you find this book an easy and informative read.\n",
    "body_html": "<!doctype html><h2 id=\"Preface\">Preface</h2><p><br /></p><p><img src=\"https://learning.oreilly.com/library/view/grokking-algorithms-an/9781617292231/common.jpg#alt=\" style=\"max-width: 600px;\" /></p><p><br /></p><p>I first got into programming as a hobby. <em>Visual Basic 6 for Dummies</em> taught me the basics, and I kept reading books to learn more. But the subject of algorithms was impenetrable for me. I remember savoring the table of contents of my first algorithms book, thinking “I’m finally going to understand these topics!” But it was dense stuff, and I gave up after a few weeks. It wasn’t until I had my first good algorithms professor that I realized how simple and elegant these ideas were.</p><p><br /></p><p>A few years ago, I wrote my first illustrated blog post. I’m a visual learner, and I really liked the illustrated style. Since then, I’ve written a few illustrated posts on functional programming, Git, machine learning, and concurrency. By the way: I was a mediocre writer when I started out. Explaining technical concepts is hard. Coming up with good examples takes time, and explaining a difficult concept takes time. So it’s easiest to gloss over the hard stuff. I thought I was doing a pretty good job, until after one of my posts got popular, a coworker came up to me and said, “I read your post and I still don’t understand this.” I still had a lot to learn about writing.</p><p><br /></p><p>Somewhere in the middle of writing these blog posts, Manning reached out to me and asked if I wanted to write an illustrated book. Well, it turns out that Manning editors know a lot about explaining technical concepts, and they taught me how to teach. I wrote this book to scratch a particular itch: I wanted to write a book that explained hard technical topics well, and I wanted an easy-to-read algorithms book. My writing has come a long way since that first blog post, and I hope you find this book an easy and informative read.</p>",
    "body_lake": "<!doctype lake><h2 id=\"Preface\">Preface</h2><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Flearning.oreilly.com%2Flibrary%2Fview%2Fgrokking-algorithms-an%2F9781617292231%2Fcommon.jpg%22%2C%22alt%22%3A%22%22%7D\"></card></p><p><br /></p><p>I first got into programming as a hobby. <em>Visual Basic 6 for Dummies</em> taught me the basics, and I kept reading books to learn more. But the subject of algorithms was impenetrable for me. I remember savoring the table of contents of my first algorithms book, thinking “I’m finally going to understand these topics!” But it was dense stuff, and I gave up after a few weeks. It wasn’t until I had my first good algorithms professor that I realized how simple and elegant these ideas were.</p><p><br /></p><p>A few years ago, I wrote my first illustrated blog post. I’m a visual learner, and I really liked the illustrated style. Since then, I’ve written a few illustrated posts on functional programming, Git, machine learning, and concurrency. By the way: I was a mediocre writer when I started out. Explaining technical concepts is hard. Coming up with good examples takes time, and explaining a difficult concept takes time. So it’s easiest to gloss over the hard stuff. I thought I was doing a pretty good job, until after one of my posts got popular, a coworker came up to me and said, “I read your post and I still don’t understand this.” I still had a lot to learn about writing.</p><p><br /></p><p>Somewhere in the middle of writing these blog posts, Manning reached out to me and asked if I wanted to write an illustrated book. Well, it turns out that Manning editors know a lot about explaining technical concepts, and they taught me how to teach. I wrote this book to scratch a particular itch: I wanted to write a book that explained hard technical topics well, and I wanted an easy-to-read algorithms book. My writing has come a long way since that first blog post, and I hope you find this book an easy and informative read.</p>",
    "body_draft_lake": "<!doctype lake><h2 id=\"Preface\">Preface</h2><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Flearning.oreilly.com%2Flibrary%2Fview%2Fgrokking-algorithms-an%2F9781617292231%2Fcommon.jpg%22%2C%22alt%22%3A%22%22%7D\"></card></p><p><br /></p><p>I first got into programming as a hobby. <em>Visual Basic 6 for Dummies</em> taught me the basics, and I kept reading books to learn more. But the subject of algorithms was impenetrable for me. I remember savoring the table of contents of my first algorithms book, thinking “I’m finally going to understand these topics!” But it was dense stuff, and I gave up after a few weeks. It wasn’t until I had my first good algorithms professor that I realized how simple and elegant these ideas were.</p><p><br /></p><p>A few years ago, I wrote my first illustrated blog post. I’m a visual learner, and I really liked the illustrated style. Since then, I’ve written a few illustrated posts on functional programming, Git, machine learning, and concurrency. By the way: I was a mediocre writer when I started out. Explaining technical concepts is hard. Coming up with good examples takes time, and explaining a difficult concept takes time. So it’s easiest to gloss over the hard stuff. I thought I was doing a pretty good job, until after one of my posts got popular, a coworker came up to me and said, “I read your post and I still don’t understand this.” I still had a lot to learn about writing.</p><p><br /></p><p>Somewhere in the middle of writing these blog posts, Manning reached out to me and asked if I wanted to write an illustrated book. Well, it turns out that Manning editors know a lot about explaining technical concepts, and they taught me how to teach. I wrote this book to scratch a particular itch: I wanted to write a book that explained hard technical topics well, and I wanted an easy-to-read algorithms book. My writing has come a long way since that first blog post, and I hope you find this book an easy and informative read.</p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-01-23T06:52:56.000Z",
    "deleted_at": null,
    "created_at": "2019-07-15T11:09:39.000Z",
    "updated_at": "2021-01-23T06:52:56.000Z",
    "published_at": "2021-01-23T06:52:56.000Z",
    "first_published_at": null,
    "word_count": 323,
    "cover": null,
    "description": "PrefaceI first got into programming as a hobby. Visual Basic 6 for Dummies taught me the basics, and I kept reading books to learn more. But the su...",
    "custom_description": null,
    "hits": 3,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 2122988,
    "slug": "0bf31716-7785-4618-a596-cf2050d5a40d",
    "title": "李扬：Libra对中国最直接的冲击可能是支付_金融频道_财新网",
    "book_id": 213435,
    "book": {
      "id": 213435,
      "type": "Book",
      "slug": "blog",
      "name": "Blog",
      "user_id": 120091,
      "description": "开放数据",
      "creator_id": 120091,
      "public": 1,
      "items_count": 8,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-08-06T05:06:41.373Z",
      "updated_at": "2021-08-06T05:06:41.000Z",
      "created_at": "2019-01-31T02:12:32.000Z",
      "namespace": "yantze/blog",
      "user": {
        "id": 120091,
        "type": "User",
        "login": "yantze",
        "name": "yantze",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
        "books_count": 6,
        "public_books_count": 2,
        "followers_count": 0,
        "following_count": 2,
        "created_at": "2018-05-06T11:41:31.000Z",
        "updated_at": "2021-07-19T16:15:37.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 120091,
    "creator": {
      "id": 120091,
      "type": "User",
      "login": "yantze",
      "name": "yantze",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
      "books_count": 6,
      "public_books_count": 2,
      "followers_count": 0,
      "following_count": 2,
      "created_at": "2018-05-06T11:41:31.000Z",
      "updated_at": "2021-07-19T16:15:37.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "2019年07月12日 21:23 来源于 [财新网](http://www.caixin.com/)\n\n可以听文章啦！\n\nLibra在跨境多币种支付方面具有较大优势，中国的移动支付行业必须保持忧患意识\n\n**【财新网】（记者 张宇哲）**“初步的研究显示，Libra很可能对中国最大、最直接的冲击是支付，而且这个领域可能也是现有的监管体系中，监管力量最薄弱，最边缘化的地方。”中国社会科学院学部委员、国家金融与发展实验室理事长[李扬](http://www.caixin.com/hot/liyang.html)指出。\n\n7月12日，在由中国支付清算协会主办、[微信支付](http://www.caixin.com/hot/weixinzhifu.html)协办的“移动支付创新服务产业升级及高质量发展研讨会”上，李扬表示，Facebook推出Libra并声称为其是一种加密货币，但它本身还有很多的纠葛并未完全确定，“Libra要成为一种货币还需走很远的路”。\n\n李扬解释称，货币是一个国家的主权，而大国绝对不会轻易放弃对货币主权的控制，Libra的币值存在于两套系统中，一套类似于国际货币基金组织的特别提款权（SDR），将若干币种经某种权重加权来形成资产包；另外一套则是将它筹集的资金再投资于一系列传统上由中央银行投资的高流动性资产中，这类似于货币市场基金。在日常运行中，它是基于一揽子货币、还是基于货币市场基金，这是有冲突的，“这是Libra目前仍需探索的方向。”\n\n但李扬认为，尤如当年国内基于互联网的各种第三方支付企业出现一样，Libra首先冲击的也是支付领域。“过去，中国筑起了一道网络长城，正是在这种保护下我们获得了长足的发展。未来，在和国外的支付机构合作时，我们将面临真正的挑战。”\n\n李扬指出，Facebook打算推出的Libra有望覆盖27亿用户，这是在中国14亿人口之外经济发展活跃的人口，它在跨境多币种支付方面具有较大优势；更重要的是，Libra是基于脸书、谷歌、推特等社交门户网站的。“中国的移动支付行业必须保持忧患意识，在全球化的新形势和新格局下，我们面临着新的任务和新的挑战。”\n\n他认为，目前国内支付行业也进入了季节性的调整时期。\n\n市场研究机构益普索近日发布的《2019第一季度第三方移动支付用户研究报告》显示，[腾讯金融](http://www.caixin.com/hot/tengxunjinrong.html)旗下[财付通](http://www.caixin.com/hot/caifutong.html)（包括微信支付和QQ钱包）和[支付宝](http://www.caixin.com/hot/zhifubao.html)的用户渗透率分别为89.2%和69.5%。按交易笔数计，财付通市场份额为51%，支付宝为41%。调查还发现，大部分（64.4%）移动支付用户同时是财付通和支付宝的用户，近四分之一（24.8%）的用户只使用财付通服务，5.1%的用户只使用支付宝。以交易笔数计，财付通和支付宝占比分别为51%和41%，财付通占有优势；以交易金额计，财付通和支付宝的交易金额占比分别为45%和46%，几近持平。而无论以何种口径，两巨头市场占比合计都在90%以上。[![](https://www.caixin.com/favicon.ico#alt=)](http://finance.caixin.com/2019-07-12/101439190.html)\n\n**更多资讯见专题报道：[全球争议Libra](http://tag.caixin.com/special/BQ01.00000795)**\n\n[财新传媒新近在微信平台推出实验性单品“我闻”/“金融人·事”，对金融圈有更多垂直报道。可点此[订阅](https://appc0zlouli8646.h5.xiaoeknow.com/homepage)。]\n\n责任编辑：霍侃 | 版面编辑：许金玲(ZN037)\n",
    "body_draft": "2019年07月12日 21:23 来源于 [财新网](http://www.caixin.com/)\n\n可以听文章啦！\n\nLibra在跨境多币种支付方面具有较大优势，中国的移动支付行业必须保持忧患意识\n\n**【财新网】（记者 张宇哲）**“初步的研究显示，Libra很可能对中国最大、最直接的冲击是支付，而且这个领域可能也是现有的监管体系中，监管力量最薄弱，最边缘化的地方。”中国社会科学院学部委员、国家金融与发展实验室理事长[李扬](http://www.caixin.com/hot/liyang.html)指出。\n\n7月12日，在由中国支付清算协会主办、[微信支付](http://www.caixin.com/hot/weixinzhifu.html)协办的“移动支付创新服务产业升级及高质量发展研讨会”上，李扬表示，Facebook推出Libra并声称为其是一种加密货币，但它本身还有很多的纠葛并未完全确定，“Libra要成为一种货币还需走很远的路”。\n\n李扬解释称，货币是一个国家的主权，而大国绝对不会轻易放弃对货币主权的控制，Libra的币值存在于两套系统中，一套类似于国际货币基金组织的特别提款权（SDR），将若干币种经某种权重加权来形成资产包；另外一套则是将它筹集的资金再投资于一系列传统上由中央银行投资的高流动性资产中，这类似于货币市场基金。在日常运行中，它是基于一揽子货币、还是基于货币市场基金，这是有冲突的，“这是Libra目前仍需探索的方向。”\n\n但李扬认为，尤如当年国内基于互联网的各种第三方支付企业出现一样，Libra首先冲击的也是支付领域。“过去，中国筑起了一道网络长城，正是在这种保护下我们获得了长足的发展。未来，在和国外的支付机构合作时，我们将面临真正的挑战。”\n\n李扬指出，Facebook打算推出的Libra有望覆盖27亿用户，这是在中国14亿人口之外经济发展活跃的人口，它在跨境多币种支付方面具有较大优势；更重要的是，Libra是基于脸书、谷歌、推特等社交门户网站的。“中国的移动支付行业必须保持忧患意识，在全球化的新形势和新格局下，我们面临着新的任务和新的挑战。”\n\n他认为，目前国内支付行业也进入了季节性的调整时期。\n\n市场研究机构益普索近日发布的《2019第一季度第三方移动支付用户研究报告》显示，[腾讯金融](http://www.caixin.com/hot/tengxunjinrong.html)旗下[财付通](http://www.caixin.com/hot/caifutong.html)（包括微信支付和QQ钱包）和[支付宝](http://www.caixin.com/hot/zhifubao.html)的用户渗透率分别为89.2%和69.5%。按交易笔数计，财付通市场份额为51%，支付宝为41%。调查还发现，大部分（64.4%）移动支付用户同时是财付通和支付宝的用户，近四分之一（24.8%）的用户只使用财付通服务，5.1%的用户只使用支付宝。以交易笔数计，财付通和支付宝占比分别为51%和41%，财付通占有优势；以交易金额计，财付通和支付宝的交易金额占比分别为45%和46%，几近持平。而无论以何种口径，两巨头市场占比合计都在90%以上。[![](https://www.caixin.com/favicon.ico#alt=)](http://finance.caixin.com/2019-07-12/101439190.html)\n\n**更多资讯见专题报道：[全球争议Libra](http://tag.caixin.com/special/BQ01.00000795)**\n\n[财新传媒新近在微信平台推出实验性单品“我闻”/“金融人·事”，对金融圈有更多垂直报道。可点此[订阅](https://appc0zlouli8646.h5.xiaoeknow.com/homepage)。]\n\n责任编辑：霍侃 | 版面编辑：许金玲(ZN037)\n",
    "body_html": "<!doctype html><p>2019年07月12日 21:23 来源于 <a href=\"http://www.caixin.com/\" target=\"_blank\">财新网</a></p><p><br /></p><p>可以听文章啦！</p><p><br /></p><p>Libra在跨境多币种支付方面具有较大优势，中国的移动支付行业必须保持忧患意识</p><p><br /></p><p><strong>【财新网】（记者 张宇哲）</strong>“初步的研究显示，Libra很可能对中国最大、最直接的冲击是支付，而且这个领域可能也是现有的监管体系中，监管力量最薄弱，最边缘化的地方。”中国社会科学院学部委员、国家金融与发展实验室理事长<a href=\"http://www.caixin.com/hot/liyang.html\" target=\"_blank\">李扬</a>指出。</p><p><br /></p><p>7月12日，在由中国支付清算协会主办、<a href=\"http://www.caixin.com/hot/weixinzhifu.html\" target=\"_blank\">微信支付</a>协办的“移动支付创新服务产业升级及高质量发展研讨会”上，李扬表示，Facebook推出Libra并声称为其是一种加密货币，但它本身还有很多的纠葛并未完全确定，“Libra要成为一种货币还需走很远的路”。</p><p><br /></p><p>李扬解释称，货币是一个国家的主权，而大国绝对不会轻易放弃对货币主权的控制，Libra的币值存在于两套系统中，一套类似于国际货币基金组织的特别提款权（SDR），将若干币种经某种权重加权来形成资产包；另外一套则是将它筹集的资金再投资于一系列传统上由中央银行投资的高流动性资产中，这类似于货币市场基金。在日常运行中，它是基于一揽子货币、还是基于货币市场基金，这是有冲突的，“这是Libra目前仍需探索的方向。”</p><p><br /></p><p>但李扬认为，尤如当年国内基于互联网的各种第三方支付企业出现一样，Libra首先冲击的也是支付领域。“过去，中国筑起了一道网络长城，正是在这种保护下我们获得了长足的发展。未来，在和国外的支付机构合作时，我们将面临真正的挑战。”</p><p><br /></p><p>李扬指出，Facebook打算推出的Libra有望覆盖27亿用户，这是在中国14亿人口之外经济发展活跃的人口，它在跨境多币种支付方面具有较大优势；更重要的是，Libra是基于脸书、谷歌、推特等社交门户网站的。“中国的移动支付行业必须保持忧患意识，在全球化的新形势和新格局下，我们面临着新的任务和新的挑战。”</p><p><br /></p><p>他认为，目前国内支付行业也进入了季节性的调整时期。</p><p><br /></p><p>市场研究机构益普索近日发布的《2019第一季度第三方移动支付用户研究报告》显示，<a href=\"http://www.caixin.com/hot/tengxunjinrong.html\" target=\"_blank\">腾讯金融</a>旗下<a href=\"http://www.caixin.com/hot/caifutong.html\" target=\"_blank\">财付通</a>（包括微信支付和QQ钱包）和<a href=\"http://www.caixin.com/hot/zhifubao.html\" target=\"_blank\">支付宝</a>的用户渗透率分别为89.2%和69.5%。按交易笔数计，财付通市场份额为51%，支付宝为41%。调查还发现，大部分（64.4%）移动支付用户同时是财付通和支付宝的用户，近四分之一（24.8%）的用户只使用财付通服务，5.1%的用户只使用支付宝。以交易笔数计，财付通和支付宝占比分别为51%和41%，财付通占有优势；以交易金额计，财付通和支付宝的交易金额占比分别为45%和46%，几近持平。而无论以何种口径，两巨头市场占比合计都在90%以上。<a href=\"http://finance.caixin.com/2019-07-12/101439190.html\" target=\"_blank\"><img src=\"https://www.caixin.com/favicon.ico#alt=\" style=\"max-width: 600px;\" /></a></p><p><br /></p><p><strong>更多资讯见专题报道：<a href=\"http://tag.caixin.com/special/BQ01.00000795\" target=\"_blank\">全球争议Libra</a></strong></p><p><br /></p><p>[财新传媒新近在微信平台推出实验性单品“我闻”/“金融人·事”，对金融圈有更多垂直报道。可点此<a href=\"https://appc0zlouli8646.h5.xiaoeknow.com/homepage\" target=\"_blank\">订阅</a>。]</p><p><br /></p><p>责任编辑：霍侃 | 版面编辑：许金玲(ZN037)</p>",
    "body_lake": "<!doctype lake><p>2019年07月12日 21:23 来源于 <a href=\"http://www.caixin.com/\" target=\"_blank\">财新网</a></p><p><br /></p><p>可以听文章啦！</p><p><br /></p><p>Libra在跨境多币种支付方面具有较大优势，中国的移动支付行业必须保持忧患意识</p><p><br /></p><p><strong>【财新网】（记者 张宇哲）</strong>“初步的研究显示，Libra很可能对中国最大、最直接的冲击是支付，而且这个领域可能也是现有的监管体系中，监管力量最薄弱，最边缘化的地方。”中国社会科学院学部委员、国家金融与发展实验室理事长<a href=\"http://www.caixin.com/hot/liyang.html\" target=\"_blank\">李扬</a>指出。</p><p><br /></p><p>7月12日，在由中国支付清算协会主办、<a href=\"http://www.caixin.com/hot/weixinzhifu.html\" target=\"_blank\">微信支付</a>协办的“移动支付创新服务产业升级及高质量发展研讨会”上，李扬表示，Facebook推出Libra并声称为其是一种加密货币，但它本身还有很多的纠葛并未完全确定，“Libra要成为一种货币还需走很远的路”。</p><p><br /></p><p>李扬解释称，货币是一个国家的主权，而大国绝对不会轻易放弃对货币主权的控制，Libra的币值存在于两套系统中，一套类似于国际货币基金组织的特别提款权（SDR），将若干币种经某种权重加权来形成资产包；另外一套则是将它筹集的资金再投资于一系列传统上由中央银行投资的高流动性资产中，这类似于货币市场基金。在日常运行中，它是基于一揽子货币、还是基于货币市场基金，这是有冲突的，“这是Libra目前仍需探索的方向。”</p><p><br /></p><p>但李扬认为，尤如当年国内基于互联网的各种第三方支付企业出现一样，Libra首先冲击的也是支付领域。“过去，中国筑起了一道网络长城，正是在这种保护下我们获得了长足的发展。未来，在和国外的支付机构合作时，我们将面临真正的挑战。”</p><p><br /></p><p>李扬指出，Facebook打算推出的Libra有望覆盖27亿用户，这是在中国14亿人口之外经济发展活跃的人口，它在跨境多币种支付方面具有较大优势；更重要的是，Libra是基于脸书、谷歌、推特等社交门户网站的。“中国的移动支付行业必须保持忧患意识，在全球化的新形势和新格局下，我们面临着新的任务和新的挑战。”</p><p><br /></p><p>他认为，目前国内支付行业也进入了季节性的调整时期。</p><p><br /></p><p>市场研究机构益普索近日发布的《2019第一季度第三方移动支付用户研究报告》显示，<a href=\"http://www.caixin.com/hot/tengxunjinrong.html\" target=\"_blank\">腾讯金融</a>旗下<a href=\"http://www.caixin.com/hot/caifutong.html\" target=\"_blank\">财付通</a>（包括微信支付和QQ钱包）和<a href=\"http://www.caixin.com/hot/zhifubao.html\" target=\"_blank\">支付宝</a>的用户渗透率分别为89.2%和69.5%。按交易笔数计，财付通市场份额为51%，支付宝为41%。调查还发现，大部分（64.4%）移动支付用户同时是财付通和支付宝的用户，近四分之一（24.8%）的用户只使用财付通服务，5.1%的用户只使用支付宝。以交易笔数计，财付通和支付宝占比分别为51%和41%，财付通占有优势；以交易金额计，财付通和支付宝的交易金额占比分别为45%和46%，几近持平。而无论以何种口径，两巨头市场占比合计都在90%以上。<a href=\"http://finance.caixin.com/2019-07-12/101439190.html\" target=\"_blank\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fwww.caixin.com%2Ffavicon.ico%22%2C%22alt%22%3A%22%22%7D\"></card></a></p><p><br /></p><p><strong>更多资讯见专题报道：<a href=\"http://tag.caixin.com/special/BQ01.00000795\" target=\"_blank\">全球争议Libra</a></strong></p><p><br /></p><p>[财新传媒新近在微信平台推出实验性单品“我闻”/“金融人·事”，对金融圈有更多垂直报道。可点此<a href=\"https://appc0zlouli8646.h5.xiaoeknow.com/homepage\" target=\"_blank\">订阅</a>。]</p><p><br /></p><p>责任编辑：霍侃 | 版面编辑：许金玲(ZN037)</p>",
    "body_draft_lake": "<!doctype lake><p>2019年07月12日 21:23 来源于 <a href=\"http://www.caixin.com/\" target=\"_blank\">财新网</a></p><p><br /></p><p>可以听文章啦！</p><p><br /></p><p>Libra在跨境多币种支付方面具有较大优势，中国的移动支付行业必须保持忧患意识</p><p><br /></p><p><strong>【财新网】（记者 张宇哲）</strong>“初步的研究显示，Libra很可能对中国最大、最直接的冲击是支付，而且这个领域可能也是现有的监管体系中，监管力量最薄弱，最边缘化的地方。”中国社会科学院学部委员、国家金融与发展实验室理事长<a href=\"http://www.caixin.com/hot/liyang.html\" target=\"_blank\">李扬</a>指出。</p><p><br /></p><p>7月12日，在由中国支付清算协会主办、<a href=\"http://www.caixin.com/hot/weixinzhifu.html\" target=\"_blank\">微信支付</a>协办的“移动支付创新服务产业升级及高质量发展研讨会”上，李扬表示，Facebook推出Libra并声称为其是一种加密货币，但它本身还有很多的纠葛并未完全确定，“Libra要成为一种货币还需走很远的路”。</p><p><br /></p><p>李扬解释称，货币是一个国家的主权，而大国绝对不会轻易放弃对货币主权的控制，Libra的币值存在于两套系统中，一套类似于国际货币基金组织的特别提款权（SDR），将若干币种经某种权重加权来形成资产包；另外一套则是将它筹集的资金再投资于一系列传统上由中央银行投资的高流动性资产中，这类似于货币市场基金。在日常运行中，它是基于一揽子货币、还是基于货币市场基金，这是有冲突的，“这是Libra目前仍需探索的方向。”</p><p><br /></p><p>但李扬认为，尤如当年国内基于互联网的各种第三方支付企业出现一样，Libra首先冲击的也是支付领域。“过去，中国筑起了一道网络长城，正是在这种保护下我们获得了长足的发展。未来，在和国外的支付机构合作时，我们将面临真正的挑战。”</p><p><br /></p><p>李扬指出，Facebook打算推出的Libra有望覆盖27亿用户，这是在中国14亿人口之外经济发展活跃的人口，它在跨境多币种支付方面具有较大优势；更重要的是，Libra是基于脸书、谷歌、推特等社交门户网站的。“中国的移动支付行业必须保持忧患意识，在全球化的新形势和新格局下，我们面临着新的任务和新的挑战。”</p><p><br /></p><p>他认为，目前国内支付行业也进入了季节性的调整时期。</p><p><br /></p><p>市场研究机构益普索近日发布的《2019第一季度第三方移动支付用户研究报告》显示，<a href=\"http://www.caixin.com/hot/tengxunjinrong.html\" target=\"_blank\">腾讯金融</a>旗下<a href=\"http://www.caixin.com/hot/caifutong.html\" target=\"_blank\">财付通</a>（包括微信支付和QQ钱包）和<a href=\"http://www.caixin.com/hot/zhifubao.html\" target=\"_blank\">支付宝</a>的用户渗透率分别为89.2%和69.5%。按交易笔数计，财付通市场份额为51%，支付宝为41%。调查还发现，大部分（64.4%）移动支付用户同时是财付通和支付宝的用户，近四分之一（24.8%）的用户只使用财付通服务，5.1%的用户只使用支付宝。以交易笔数计，财付通和支付宝占比分别为51%和41%，财付通占有优势；以交易金额计，财付通和支付宝的交易金额占比分别为45%和46%，几近持平。而无论以何种口径，两巨头市场占比合计都在90%以上。<a href=\"http://finance.caixin.com/2019-07-12/101439190.html\" target=\"_blank\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fwww.caixin.com%2Ffavicon.ico%22%2C%22alt%22%3A%22%22%7D\"></card></a></p><p><br /></p><p><strong>更多资讯见专题报道：<a href=\"http://tag.caixin.com/special/BQ01.00000795\" target=\"_blank\">全球争议Libra</a></strong></p><p><br /></p><p>[财新传媒新近在微信平台推出实验性单品“我闻”/“金融人·事”，对金融圈有更多垂直报道。可点此<a href=\"https://appc0zlouli8646.h5.xiaoeknow.com/homepage\" target=\"_blank\">订阅</a>。]</p><p><br /></p><p>责任编辑：霍侃 | 版面编辑：许金玲(ZN037)</p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-01-23T06:52:56.000Z",
    "deleted_at": null,
    "created_at": "2019-07-15T11:07:22.000Z",
    "updated_at": "2021-01-23T06:52:56.000Z",
    "published_at": "2021-01-23T06:52:56.000Z",
    "first_published_at": null,
    "word_count": 1063,
    "cover": null,
    "description": "2019年07月12日 21:23 来源于 财新网可以听文章啦！Libra在跨境多币种支付方面具有较大优势，中国的移动支付行业必须保持忧患意识【财新网】（记者 张宇哲）“初步的研究显示，Libra很可能对中国最大、最直接的冲击是支付，而且这个领域可能也是现有的监管体系中，监管力量最薄弱，最边缘...",
    "custom_description": null,
    "hits": 25,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1213201,
    "slug": "help_for_markdown.app.md",
    "title": "Welcome to Markdown.app",
    "book_id": 213435,
    "book": {
      "id": 213435,
      "type": "Book",
      "slug": "blog",
      "name": "Blog",
      "user_id": 120091,
      "description": "开放数据",
      "creator_id": 120091,
      "public": 1,
      "items_count": 8,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-08-06T05:06:41.373Z",
      "updated_at": "2021-08-06T05:06:41.000Z",
      "created_at": "2019-01-31T02:12:32.000Z",
      "namespace": "yantze/blog",
      "user": {
        "id": 120091,
        "type": "User",
        "login": "yantze",
        "name": "yantze",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
        "books_count": 6,
        "public_books_count": 2,
        "followers_count": 0,
        "following_count": 2,
        "created_at": "2018-05-06T11:41:31.000Z",
        "updated_at": "2021-07-19T16:15:37.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 120091,
    "creator": {
      "id": 120091,
      "type": "User",
      "login": "yantze",
      "name": "yantze",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2021/png/120091/1609858442233-avatar/01ceeec8-b554-4e59-88f0-e1fafeaa02b8.png",
      "books_count": 6,
      "public_books_count": 2,
      "followers_count": 0,
      "following_count": 2,
      "created_at": "2018-05-06T11:41:31.000Z",
      "updated_at": "2021-07-19T16:15:37.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"g0efny\"></a>\n## Overview\n[Markdown.app](https://markdown.app) is a free software, which is base on [MarkEditor](https://www.markeditor.com).<br />\n<br />In another way, `Markdown.app` is a lite version of **MarkEditor**.<br />If you want to get a much much more powerful tool, try **MarkEditor**. But if you just need an APP to edit a markdown document, `Markdown.app` is good enough.<br />\n\n<a name=\"5ewvbm\"></a>\n## Different to MarkEditor\n**MarkEditor** is 10+ times powerful than `Markdown.app`.<br />`Markdown.app` is focused on `writing in Markdown`, and **MarkEditor** is focused on `writing & productiveness`.<br />\n<br />By the way, to keep the compatibility between **MarkEditor**  and `Markdown.app`, they are using the same UI for **App Preferences**. Some configs you can see in `Markdown.app`, only working in **MarkEditor** in fact.<br />\n\n<a name=\"tw97hs\"></a>\n## Features for Markdown.app\n\n- Markdown syntax auto highlight\n\n- Markdown syntax marker bar\n\n- line number bar\n\n- previewer bar (realtime)\n\n- independent previewer window\n\n- preview in browser (realtime)\n\n- writing statistics\n\n- auto theme creator\n\n- zen mode\n\n- focus mode\n\n- keep in middle when writing\n\n- document history versions\n\n- multi-ways to insert image\n\n- insert image by uploading from mobile\n\n\n\n\n<a name=\"chritq\"></a>\n## Notes\nAs a **free software**,  `Markdown.app` does not accept any feature requests, and is without any kind of warranty.\n",
    "body_draft": "<a name=\"g0efny\"></a>\n## Overview\n[Markdown.app](https://markdown.app) is a free software, which is base on [MarkEditor](https://www.markeditor.com).<br />\n<br />In another way, `Markdown.app` is a lite version of **MarkEditor**.<br />If you want to get a much much more powerful tool, try **MarkEditor**. But if you just need an APP to edit a markdown document, `Markdown.app` is good enough.<br />\n\n<a name=\"5ewvbm\"></a>\n## Different to MarkEditor\n**MarkEditor** is 10+ times powerful than `Markdown.app`.<br />`Markdown.app` is focused on `writing in Markdown`, and **MarkEditor** is focused on `writing & productiveness`.<br />\n<br />By the way, to keep the compatibility between **MarkEditor**  and `Markdown.app`, they are using the same UI for **App Preferences**. Some configs you can see in `Markdown.app`, only working in **MarkEditor** in fact.<br />\n\n<a name=\"tw97hs\"></a>\n## Features for Markdown.app\n\n- Markdown syntax auto highlight\n\n- Markdown syntax marker bar\n\n- line number bar\n\n- previewer bar (realtime)\n\n- independent previewer window\n\n- preview in browser (realtime)\n\n- writing statistics\n\n- auto theme creator\n\n- zen mode\n\n- focus mode\n\n- keep in middle when writing\n\n- document history versions\n\n- multi-ways to insert image\n\n- insert image by uploading from mobile\n\n\n\n\n<a name=\"chritq\"></a>\n## Notes\nAs a **free software**,  `Markdown.app` does not accept any feature requests, and is without any kind of warranty.\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional show-placeholder\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B27%2C4%2C75%5D%2C%5B27%2C4%2C75%5D%5D%2C%22active%22%3Atrue%7D\"><h2 id=\"g0efny\" data-lake-id=\"c294fc4428232459380100c139071ba8_h2_0\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Overview</h2><p data-lake-id=\"448758fb56507996e0622a05e4d61da7_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://markdown.app\" target=\"_blank\">Markdown.app</a> is a free software, which is base on <a href=\"https://www.markeditor.com\" target=\"_blank\">MarkEditor</a>.</p><p data-lake-id=\"4838965d80065e01b01bcecbc05930c6_p_1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6410d27a2ab75eb992cd9dd1f6fcf926_p_2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">In another way, <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Markdown.app</code> is a lite version of <strong>MarkEditor</strong>.<br>If you want to get a much much more powerful tool, try <strong>MarkEditor</strong>. But if you just need an APP to edit a markdown document, <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Markdown.app</code> is good enough.</p><p data-lake-id=\"804b58e6d41ad7fb2480630c3092516e_p_3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"5ewvbm\" data-lake-id=\"8945755da8ccc654cf71c393912994d6_h2_1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Different to MarkEditor</h2><p data-lake-id=\"fa69a9eb916f9128f052a08a2227676a_p_4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>MarkEditor</strong> is 10+ times powerful than <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Markdown.app</code>.<br><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Markdown.app</code> is focused on <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">writing in Markdown</code>, and <strong>MarkEditor</strong> is focused on <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">writing &amp; productiveness</code>.</p><p data-lake-id=\"7467903a77e4c43e92d4f196903d0bbe_p_5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"8196f4b06d30fcaf44f31c16d3d3d39d_p_6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">By the way, to keep the compatibility between <strong>MarkEditor</strong> &nbsp;and <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Markdown.app</code>, they are using the same UI for <strong>App Preferences</strong>. Some configs you can see in <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Markdown.app</code>, only working in <strong>MarkEditor</strong> in fact.</p><p data-lake-id=\"e1b0979b54c1fb29acc1d92ad2159922_p_7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"tw97hs\" data-lake-id=\"59568f71cc6402ceb6198e8be229cfb0_h2_2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Features for Markdown.app</h2><ul data-lake-id=\"c1a7ff070d2d1daf7ac0afcc1a75ba83_ul_0\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"39abeed18b6996660eb11d26aa0dd494_li_0\"><p data-lake-id=\"6eb00c1e017a85e141ede0ef77f68b97_p_8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Markdown syntax auto highlight</p></li></ul><ul data-lake-id=\"1496daeb35d5ce882d546d450bca4d02_ul_1\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"22a9e8857603b8b7e443bd4fcfa364a3_li_1\"><p data-lake-id=\"7ee6651ae7ab760e621d89df9127cb55_p_9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Markdown syntax marker bar</p></li></ul><ul data-lake-id=\"a5ead47c6d0a246dc94afc089542c819_ul_2\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"72a5cd91d5101e4673091431f4303707_li_2\"><p data-lake-id=\"827d6fb597d5b0e0929e4aa1b92341b0_p_10\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">line number bar</p></li></ul><ul data-lake-id=\"8c7cc3c57dc5c8f7e63cccc4fcaf5267_ul_3\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"ec392ccf23df20f1434a42095a2fbc39_li_3\"><p data-lake-id=\"5de65f90e2ef5c0ca8caa8436057be30_p_11\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">previewer bar (realtime)</p></li></ul><ul data-lake-id=\"c04683a19df6f64da900932335b9a4b3_ul_4\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"f07262d64416be6726c761290ca17065_li_4\"><p data-lake-id=\"dbcbfd4150d672cd4d3a9d26b973ef00_p_12\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">independent previewer window</p></li></ul><ul data-lake-id=\"e600fe78bc056df81af41a3e89a3ac8d_ul_5\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"b9b397ace946a96b30219e1cacfb88c8_li_5\"><p data-lake-id=\"7a637aec5bb83e62332a365da89fa7f9_p_13\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">preview in browser (realtime)</p></li></ul><ul data-lake-id=\"3ca6dff48010fe5b4e37594a412ecb37_ul_6\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"efdd1a66d470a7e3995f1bb324759632_li_6\"><p data-lake-id=\"79f1116e067205fe674151b9376a19da_p_14\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">writing statistics</p></li></ul><ul data-lake-id=\"b922a550ee59019690d3eb0bd50e3842_ul_7\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"faaf464dbfb767a3e6ccea637b89ab70_li_7\"><p data-lake-id=\"ee1cb70da4f5d162d9cbc7c881014fe6_p_15\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">auto theme creator</p></li></ul><ul data-lake-id=\"03ba8d6edf3f7dbdb8a186933ee78bea_ul_8\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"688efc56a987abe3840e272eef5169e3_li_8\"><p data-lake-id=\"7158fcb9cbcefbd6fef1b6dc052a52e4_p_16\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">zen mode</p></li></ul><ul data-lake-id=\"c70736df372a7fed40b473590c452708_ul_9\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"15eb441734f141cafeeac6a96ac099be_li_9\"><p data-lake-id=\"b62097f9b7c25721d358c64b10e81102_p_17\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">focus mode</p></li></ul><ul data-lake-id=\"e47dc8c46f8ce7f484eecf02fe4eff3b_ul_10\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"fdb2868f6492fef012a82aa3d73cc37f_li_10\"><p data-lake-id=\"cc5fbf5c97597be27016101ce0ce220e_p_18\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">keep in middle when writing</p></li></ul><ul data-lake-id=\"1f9b7db0aa65a71df85711b95a2394c3_ul_11\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"7cd9e4a71e34f6af62f799696f53ce54_li_11\"><p data-lake-id=\"d2af780c4dda9e10aeecafd1a513def2_p_19\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">document history versions</p></li></ul><ul data-lake-id=\"9f765b84a9f66e987f502cccd4ea1c30_ul_12\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"d5aa76d92acae1d00e29a96ee0afd7f0_li_12\"><p data-lake-id=\"ae95f3700a5141c1de8e1dc5fefb68f3_p_20\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">multi-ways to insert image</p></li></ul><ul data-lake-id=\"1c0dcbbc11b2f4accfdca3098193980b_ul_13\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"b52ae3fe67d2ff01d12e568b09c6ce5c_li_13\"><p data-lake-id=\"806e004b480a555d9202188ca0700100_p_21\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">insert image by uploading from mobile</p></li></ul><p data-lake-id=\"37928cd1f32681ee4810a9ab9d3c1104_p_22\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"chritq\" data-lake-id=\"2de5ff1c32b39cb09a2ba79248c7bf7e_h2_3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Notes</h2><p data-lake-id=\"aa7c4e3fdd1b90e5aaf3695360bf2ba3_p_23\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">As a <strong>free software</strong>, &nbsp;<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Markdown.app</code> does not accept any feature requests, and is without any kind of warranty.</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 id=\"g0efny\" data-lake-id=\"c294fc4428232459380100c139071ba8_h2_0\">Overview</h2><p data-lake-id=\"448758fb56507996e0622a05e4d61da7_p_0\"><a href=\"https://markdown.app\" target=\"_blank\">Markdown.app</a> is a free software, which is base on <a href=\"https://www.markeditor.com\" target=\"_blank\">MarkEditor</a>.</p><p data-lake-id=\"4838965d80065e01b01bcecbc05930c6_p_1\"><br /></p><p data-lake-id=\"6410d27a2ab75eb992cd9dd1f6fcf926_p_2\">In another way, <code>Markdown.app</code> is a lite version of <strong>MarkEditor</strong>.<br />If you want to get a much much more powerful tool, try <strong>MarkEditor</strong>. But if you just need an APP to edit a markdown document, <code>Markdown.app</code> is good enough.</p><p data-lake-id=\"804b58e6d41ad7fb2480630c3092516e_p_3\"><br /></p><h2 id=\"5ewvbm\" data-lake-id=\"8945755da8ccc654cf71c393912994d6_h2_1\">Different to MarkEditor</h2><p data-lake-id=\"fa69a9eb916f9128f052a08a2227676a_p_4\"><strong>MarkEditor</strong> is 10+ times powerful than <code>Markdown.app</code>.<br /><code>Markdown.app</code> is focused on <code>writing in Markdown</code>, and <strong>MarkEditor</strong> is focused on <code>writing &amp; productiveness</code>.</p><p data-lake-id=\"7467903a77e4c43e92d4f196903d0bbe_p_5\"><br /></p><p data-lake-id=\"8196f4b06d30fcaf44f31c16d3d3d39d_p_6\">By the way, to keep the compatibility between <strong>MarkEditor</strong>  and <code>Markdown.app</code>, they are using the same UI for <strong>App Preferences</strong>. Some configs you can see in <code>Markdown.app</code>, only working in <strong>MarkEditor</strong> in fact.</p><p data-lake-id=\"e1b0979b54c1fb29acc1d92ad2159922_p_7\"><br /></p><h2 id=\"tw97hs\" data-lake-id=\"59568f71cc6402ceb6198e8be229cfb0_h2_2\">Features for Markdown.app</h2><ul data-lake-id=\"c1a7ff070d2d1daf7ac0afcc1a75ba83_ul_0\"><li data-lake-id=\"39abeed18b6996660eb11d26aa0dd494_li_0\"><p data-lake-id=\"6eb00c1e017a85e141ede0ef77f68b97_p_8\">Markdown syntax auto highlight</p></li></ul><ul data-lake-id=\"1496daeb35d5ce882d546d450bca4d02_ul_1\"><li data-lake-id=\"22a9e8857603b8b7e443bd4fcfa364a3_li_1\"><p data-lake-id=\"7ee6651ae7ab760e621d89df9127cb55_p_9\">Markdown syntax marker bar</p></li></ul><ul data-lake-id=\"a5ead47c6d0a246dc94afc089542c819_ul_2\"><li data-lake-id=\"72a5cd91d5101e4673091431f4303707_li_2\"><p data-lake-id=\"827d6fb597d5b0e0929e4aa1b92341b0_p_10\">line number bar</p></li></ul><ul data-lake-id=\"8c7cc3c57dc5c8f7e63cccc4fcaf5267_ul_3\"><li data-lake-id=\"ec392ccf23df20f1434a42095a2fbc39_li_3\"><p data-lake-id=\"5de65f90e2ef5c0ca8caa8436057be30_p_11\">previewer bar (realtime)</p></li></ul><ul data-lake-id=\"c04683a19df6f64da900932335b9a4b3_ul_4\"><li data-lake-id=\"f07262d64416be6726c761290ca17065_li_4\"><p data-lake-id=\"dbcbfd4150d672cd4d3a9d26b973ef00_p_12\">independent previewer window</p></li></ul><ul data-lake-id=\"e600fe78bc056df81af41a3e89a3ac8d_ul_5\"><li data-lake-id=\"b9b397ace946a96b30219e1cacfb88c8_li_5\"><p data-lake-id=\"7a637aec5bb83e62332a365da89fa7f9_p_13\">preview in browser (realtime)</p></li></ul><ul data-lake-id=\"3ca6dff48010fe5b4e37594a412ecb37_ul_6\"><li data-lake-id=\"efdd1a66d470a7e3995f1bb324759632_li_6\"><p data-lake-id=\"79f1116e067205fe674151b9376a19da_p_14\">writing statistics</p></li></ul><ul data-lake-id=\"b922a550ee59019690d3eb0bd50e3842_ul_7\"><li data-lake-id=\"faaf464dbfb767a3e6ccea637b89ab70_li_7\"><p data-lake-id=\"ee1cb70da4f5d162d9cbc7c881014fe6_p_15\">auto theme creator</p></li></ul><ul data-lake-id=\"03ba8d6edf3f7dbdb8a186933ee78bea_ul_8\"><li data-lake-id=\"688efc56a987abe3840e272eef5169e3_li_8\"><p data-lake-id=\"7158fcb9cbcefbd6fef1b6dc052a52e4_p_16\">zen mode</p></li></ul><ul data-lake-id=\"c70736df372a7fed40b473590c452708_ul_9\"><li data-lake-id=\"15eb441734f141cafeeac6a96ac099be_li_9\"><p data-lake-id=\"b62097f9b7c25721d358c64b10e81102_p_17\">focus mode</p></li></ul><ul data-lake-id=\"e47dc8c46f8ce7f484eecf02fe4eff3b_ul_10\"><li data-lake-id=\"fdb2868f6492fef012a82aa3d73cc37f_li_10\"><p data-lake-id=\"cc5fbf5c97597be27016101ce0ce220e_p_18\">keep in middle when writing</p></li></ul><ul data-lake-id=\"1f9b7db0aa65a71df85711b95a2394c3_ul_11\"><li data-lake-id=\"7cd9e4a71e34f6af62f799696f53ce54_li_11\"><p data-lake-id=\"d2af780c4dda9e10aeecafd1a513def2_p_19\">document history versions</p></li></ul><ul data-lake-id=\"9f765b84a9f66e987f502cccd4ea1c30_ul_12\"><li data-lake-id=\"d5aa76d92acae1d00e29a96ee0afd7f0_li_12\"><p data-lake-id=\"ae95f3700a5141c1de8e1dc5fefb68f3_p_20\">multi-ways to insert image</p></li></ul><ul data-lake-id=\"1c0dcbbc11b2f4accfdca3098193980b_ul_13\"><li data-lake-id=\"b52ae3fe67d2ff01d12e568b09c6ce5c_li_13\"><p data-lake-id=\"806e004b480a555d9202188ca0700100_p_21\">insert image by uploading from mobile</p></li></ul><p data-lake-id=\"37928cd1f32681ee4810a9ab9d3c1104_p_22\"><br /></p><h2 id=\"chritq\" data-lake-id=\"2de5ff1c32b39cb09a2ba79248c7bf7e_h2_3\">Notes</h2><p data-lake-id=\"aa7c4e3fdd1b90e5aaf3695360bf2ba3_p_23\">As a <strong>free software</strong>,  <code>Markdown.app</code> does not accept any feature requests, and is without any kind of warranty.<cursor /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 id=\"g0efny\" data-lake-id=\"c294fc4428232459380100c139071ba8_h2_0\">Overview</h2><p data-lake-id=\"448758fb56507996e0622a05e4d61da7_p_0\"><a href=\"https://markdown.app\" target=\"_blank\">Markdown.app</a> is a free software, which is base on <a href=\"https://www.markeditor.com\" target=\"_blank\">MarkEditor</a>.</p><p data-lake-id=\"4838965d80065e01b01bcecbc05930c6_p_1\"><br /></p><p data-lake-id=\"6410d27a2ab75eb992cd9dd1f6fcf926_p_2\">In another way, <code>Markdown.app</code> is a lite version of <strong>MarkEditor</strong>.<br />If you want to get a much much more powerful tool, try <strong>MarkEditor</strong>. But if you just need an APP to edit a markdown document, <code>Markdown.app</code> is good enough.</p><p data-lake-id=\"804b58e6d41ad7fb2480630c3092516e_p_3\"><br /></p><h2 id=\"5ewvbm\" data-lake-id=\"8945755da8ccc654cf71c393912994d6_h2_1\">Different to MarkEditor</h2><p data-lake-id=\"fa69a9eb916f9128f052a08a2227676a_p_4\"><strong>MarkEditor</strong> is 10+ times powerful than <code>Markdown.app</code>.<br /><code>Markdown.app</code> is focused on <code>writing in Markdown</code>, and <strong>MarkEditor</strong> is focused on <code>writing &amp; productiveness</code>.</p><p data-lake-id=\"7467903a77e4c43e92d4f196903d0bbe_p_5\"><br /></p><p data-lake-id=\"8196f4b06d30fcaf44f31c16d3d3d39d_p_6\">By the way, to keep the compatibility between <strong>MarkEditor</strong>  and <code>Markdown.app</code>, they are using the same UI for <strong>App Preferences</strong>. Some configs you can see in <code>Markdown.app</code>, only working in <strong>MarkEditor</strong> in fact.</p><p data-lake-id=\"e1b0979b54c1fb29acc1d92ad2159922_p_7\"><br /></p><h2 id=\"tw97hs\" data-lake-id=\"59568f71cc6402ceb6198e8be229cfb0_h2_2\">Features for Markdown.app</h2><ul data-lake-id=\"c1a7ff070d2d1daf7ac0afcc1a75ba83_ul_0\"><li data-lake-id=\"39abeed18b6996660eb11d26aa0dd494_li_0\"><p data-lake-id=\"6eb00c1e017a85e141ede0ef77f68b97_p_8\">Markdown syntax auto highlight</p></li></ul><ul data-lake-id=\"1496daeb35d5ce882d546d450bca4d02_ul_1\"><li data-lake-id=\"22a9e8857603b8b7e443bd4fcfa364a3_li_1\"><p data-lake-id=\"7ee6651ae7ab760e621d89df9127cb55_p_9\">Markdown syntax marker bar</p></li></ul><ul data-lake-id=\"a5ead47c6d0a246dc94afc089542c819_ul_2\"><li data-lake-id=\"72a5cd91d5101e4673091431f4303707_li_2\"><p data-lake-id=\"827d6fb597d5b0e0929e4aa1b92341b0_p_10\">line number bar</p></li></ul><ul data-lake-id=\"8c7cc3c57dc5c8f7e63cccc4fcaf5267_ul_3\"><li data-lake-id=\"ec392ccf23df20f1434a42095a2fbc39_li_3\"><p data-lake-id=\"5de65f90e2ef5c0ca8caa8436057be30_p_11\">previewer bar (realtime)</p></li></ul><ul data-lake-id=\"c04683a19df6f64da900932335b9a4b3_ul_4\"><li data-lake-id=\"f07262d64416be6726c761290ca17065_li_4\"><p data-lake-id=\"dbcbfd4150d672cd4d3a9d26b973ef00_p_12\">independent previewer window</p></li></ul><ul data-lake-id=\"e600fe78bc056df81af41a3e89a3ac8d_ul_5\"><li data-lake-id=\"b9b397ace946a96b30219e1cacfb88c8_li_5\"><p data-lake-id=\"7a637aec5bb83e62332a365da89fa7f9_p_13\">preview in browser (realtime)</p></li></ul><ul data-lake-id=\"3ca6dff48010fe5b4e37594a412ecb37_ul_6\"><li data-lake-id=\"efdd1a66d470a7e3995f1bb324759632_li_6\"><p data-lake-id=\"79f1116e067205fe674151b9376a19da_p_14\">writing statistics</p></li></ul><ul data-lake-id=\"b922a550ee59019690d3eb0bd50e3842_ul_7\"><li data-lake-id=\"faaf464dbfb767a3e6ccea637b89ab70_li_7\"><p data-lake-id=\"ee1cb70da4f5d162d9cbc7c881014fe6_p_15\">auto theme creator</p></li></ul><ul data-lake-id=\"03ba8d6edf3f7dbdb8a186933ee78bea_ul_8\"><li data-lake-id=\"688efc56a987abe3840e272eef5169e3_li_8\"><p data-lake-id=\"7158fcb9cbcefbd6fef1b6dc052a52e4_p_16\">zen mode</p></li></ul><ul data-lake-id=\"c70736df372a7fed40b473590c452708_ul_9\"><li data-lake-id=\"15eb441734f141cafeeac6a96ac099be_li_9\"><p data-lake-id=\"b62097f9b7c25721d358c64b10e81102_p_17\">focus mode</p></li></ul><ul data-lake-id=\"e47dc8c46f8ce7f484eecf02fe4eff3b_ul_10\"><li data-lake-id=\"fdb2868f6492fef012a82aa3d73cc37f_li_10\"><p data-lake-id=\"cc5fbf5c97597be27016101ce0ce220e_p_18\">keep in middle when writing</p></li></ul><ul data-lake-id=\"1f9b7db0aa65a71df85711b95a2394c3_ul_11\"><li data-lake-id=\"7cd9e4a71e34f6af62f799696f53ce54_li_11\"><p data-lake-id=\"d2af780c4dda9e10aeecafd1a513def2_p_19\">document history versions</p></li></ul><ul data-lake-id=\"9f765b84a9f66e987f502cccd4ea1c30_ul_12\"><li data-lake-id=\"d5aa76d92acae1d00e29a96ee0afd7f0_li_12\"><p data-lake-id=\"ae95f3700a5141c1de8e1dc5fefb68f3_p_20\">multi-ways to insert image</p></li></ul><ul data-lake-id=\"1c0dcbbc11b2f4accfdca3098193980b_ul_13\"><li data-lake-id=\"b52ae3fe67d2ff01d12e568b09c6ce5c_li_13\"><p data-lake-id=\"806e004b480a555d9202188ca0700100_p_21\">insert image by uploading from mobile</p></li></ul><p data-lake-id=\"37928cd1f32681ee4810a9ab9d3c1104_p_22\"><br /></p><h2 id=\"chritq\" data-lake-id=\"2de5ff1c32b39cb09a2ba79248c7bf7e_h2_3\">Notes</h2><p data-lake-id=\"aa7c4e3fdd1b90e5aaf3695360bf2ba3_p_23\">As a <strong>free software</strong>,  <code>Markdown.app</code> does not accept any feature requests, and is without any kind of warranty.<cursor /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-01-22T16:56:55.000Z",
    "deleted_at": null,
    "created_at": "2019-01-31T02:13:45.000Z",
    "updated_at": "2021-01-22T16:56:56.000Z",
    "published_at": "2021-01-22T16:56:55.000Z",
    "first_published_at": null,
    "word_count": 189,
    "cover": null,
    "description": "OverviewMarkdown.app is a free software, which is base on MarkEditor.In another way, Markdown.app is a lite version of MarkEditor.If you want to ge...",
    "custom_description": null,
    "hits": 6,
    "_serializer": "v2.doc_detail"
  }
]